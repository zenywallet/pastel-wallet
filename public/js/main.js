/* Generated by the Nim Compiler v1.3.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI11305026 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11325030 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11325015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11320251 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11320215 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11310017 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11255056 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11255041 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11255001 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11220015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11350033 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11350018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9025015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4255232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4510011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1181907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9765125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11086442 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI163 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI11086438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11150102 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11150087 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11086409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11086408 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11150072 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11125006 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11100005 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10172211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI857083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI857084 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9730078 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9730074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9726135 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI9730030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9730018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9730039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9730037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9726015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI9730031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9730022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI622441 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622437 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622433 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622429 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622425 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622421 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622417 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622413 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622405 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622401 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622393 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622389 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622385 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622381 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622373 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622369 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622365 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI622204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI622274 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI622220 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI622519 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI622517 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI622515 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI622224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI622222 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10172207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10172209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI143 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI622276 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6286 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI112 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI857022 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI857023 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NNI857022 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI857022.node = NNI857022;
NTI857023.base = NTI857022;
var NNI6249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6249.node = NNI6249;
var NNI6219 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6219.node = NNI6219;
NTI6281.base = NTI6217;
NTI6286.base = NTI6217;
var NNI6217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6281, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI112, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI112, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6286, name: "up", sons: null}]};
NTI6217.node = NNI6217;
var NNI6008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6008.node = NNI6008;
NTI6217.base = NTI6008;
NTI6219.base = NTI6217;
NTI6249.base = NTI6219;
var NNI6237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6237.node = NNI6237;
var NNI6233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6233.node = NNI6233;
NTI6233.base = NTI6219;
NTI6237.base = NTI6233;
var NNI6243 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6243.node = NNI6243;
var NNI6221 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6221.node = NNI6221;
NTI6221.base = NTI6217;
NTI6243.base = NTI6221;
var NNI6241 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6241.node = NNI6241;
NTI6241.base = NTI6219;
var NNI622276 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI114, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI114, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI114, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI114, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI114, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI114, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI114, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI114, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI114, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI114, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI114, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI114, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI114, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI114, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI114, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI114, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI114, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI114, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI114, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI114, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI114, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI114, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI114, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI114, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI114, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI114, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI114, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI114, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI114, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI114, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI114, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI114, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI114, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI114, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI114, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI114, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI114, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI114, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI114, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI114, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI114, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI114, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI114, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI114, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI114, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI114, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI114, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI114, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI114, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI114, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI114, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI114, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI114, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI114, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI114, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI114, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI114, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI114, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI114, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI114, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI114, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI114, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI114, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI114, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI114, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI114, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI114, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI114, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI114, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI114, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI114, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI114, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI114, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI114, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI114, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI114, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI114, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI114, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI114, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI114, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI114, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI114, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI114, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI114, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI114, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI114, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI114, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI114, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI114, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI114, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI143, name: "zIndex", sons: null}]};
NTI622276.node = NNI622276;
NTI622276.base = NTI6008;
var NNI10172207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI10172207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10172207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10172207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10172207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10172207, name: "pkDetach", len: 0, sons: null}}};
NTI10172207.node = NNI10172207;
NTI622515.base = NTI622222;
NTI622517.base = NTI622222;
NTI622519.base = NTI622222;
var NNI622220 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI622220, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI622220, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI622220, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI622220, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI622220, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI622220, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI622220, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI622220, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI622220, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI622220, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI622220, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI622220, name: "NotationNode", len: 0, sons: null}}};
NTI622220.node = NNI622220;
NTI622274.base = NTI622276;
var NNI622224 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI622515, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI622517, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI622519, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI114, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI622222, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI622222, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI622222, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI114, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI622220, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI114, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI622222, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI622222, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI114, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI622274, name: "style", sons: null}]};
NTI622224.node = NNI622224;
var NNI622204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI622365, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI622369, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI622373, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI622377, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI622381, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI622385, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI622389, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI622393, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI622397, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI622401, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI622405, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI622409, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI622413, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI622417, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI622421, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI622425, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI622429, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI622433, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI622437, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI622441, name: "onunload", sons: null}]};
NTI622204.node = NNI622204;
NTI622204.base = NTI6008;
NTI622224.base = NTI622204;
NTI622222.base = NTI622224;
var NNI9726015 = {kind: 2, offset: 0, typ: null, name: null, len: 118, sons: {"0": {kind: 1, offset: 0, typ: NTI9726015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI9726015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI9726015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI9726015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI9726015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI9726015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI9726015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI9726015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI9726015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI9726015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI9726015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI9726015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI9726015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI9726015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI9726015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI9726015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI9726015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI9726015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI9726015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI9726015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI9726015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI9726015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI9726015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI9726015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI9726015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI9726015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI9726015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI9726015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI9726015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI9726015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI9726015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI9726015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI9726015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI9726015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI9726015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI9726015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI9726015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI9726015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI9726015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI9726015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI9726015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI9726015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI9726015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI9726015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI9726015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI9726015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI9726015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI9726015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI9726015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI9726015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI9726015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI9726015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI9726015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI9726015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI9726015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI9726015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI9726015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI9726015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI9726015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI9726015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI9726015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI9726015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI9726015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI9726015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI9726015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI9726015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI9726015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI9726015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI9726015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI9726015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI9726015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI9726015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI9726015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI9726015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI9726015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI9726015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI9726015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI9726015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI9726015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI9726015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI9726015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI9726015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI9726015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI9726015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI9726015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI9726015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI9726015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI9726015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI9726015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI9726015, name: "table", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI9726015, name: "caption", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI9726015, name: "colgroup", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI9726015, name: "col", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI9726015, name: "tbody", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI9726015, name: "thead", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI9726015, name: "tfoot", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI9726015, name: "tr", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI9726015, name: "td", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI9726015, name: "th", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI9726015, name: "form", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI9726015, name: "fieldset", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI9726015, name: "legend", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI9726015, name: "label", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI9726015, name: "input", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI9726015, name: "button", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI9726015, name: "select", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI9726015, name: "datalist", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI9726015, name: "optgroup", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI9726015, name: "option", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI9726015, name: "textarea", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI9726015, name: "keygen", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI9726015, name: "output", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI9726015, name: "progress", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI9726015, name: "meter", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI9726015, name: "details", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI9726015, name: "summary", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI9726015, name: "command", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI9726015, name: "menu", len: 0, sons: null}}};
NTI9726015.node = NNI9726015;
NTI9730037.base = NTI9730022;
NTI9730039.base = NTI114;
var NNI9726135 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI9726135, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI9726135, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI9726135, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI9726135, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI9726135, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI9726135, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI9726135, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI9726135, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI9726135, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI9726135, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI9726135, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI9726135, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI9726135, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI9726135, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI9726135, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI9726135, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI9726135, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI9726135, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI9726135, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI9726135, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI9726135, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI9726135, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI9726135, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI9726135, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI9726135, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI9726135, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI9726135, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI9726135, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI9726135, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI9726135, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI9726135, name: "onkeyuplater", len: 0, sons: null}}};
NTI9726135.node = NNI9726135;
var NNI9730030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9726135, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI9730074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI9730078, name: "Field2", sons: null}]};
NTI9730030.node = NNI9730030;
NTI9730018.base = NTI9730030;
var NNI857083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI857083.node = NNI857083;
NTI857084.base = NTI857083;
var NNI9730031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI9726015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI143, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI114, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI114, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI114, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI9730037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI9730039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI9730018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI857084, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI622222, name: "dom", sons: null}]};
NTI9730031.node = NNI9730031;
NTI9730031.base = NTI6008;
NTI9730022.base = NTI9730031;
var NNI10172209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI10172207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI622222, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI622222, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI9730022, name: "n", sons: null}]};
NTI10172209.node = NNI10172209;
var NNI10172211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI9730022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI9730022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI143, name: "pos", sons: null}]};
NTI10172211.node = NNI10172211;
NTI11100005.base = NTI114;
NTI11125006.base = NTI114;
var NNI11086409 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seed", len: 0, typ: NTI114, name: "seed", sons: null}, 
{kind: 1, offset: "gen", len: 0, typ: NTI114, name: "gen", sons: null}, 
{kind: 1, offset: "tag", len: 0, typ: NTI114, name: "tag", sons: null}, 
{kind: 1, offset: "orig", len: 0, typ: NTI114, name: "orig", sons: null}, 
{kind: 1, offset: "sv", len: 0, typ: NTI114, name: "sv", sons: null}]};
NTI11086409.node = NNI11086409;
NTI11086408.base = NTI11086409;
NTI11150072.base = NTI11086408;
NTI11150087.base = NTI114;
NTI11086442.base = NTI114;
var NNI11086438 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI143, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI114, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI163, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI11086442, name: "Field3", sons: null}]};
NTI11086438.node = NNI11086438;
NTI11150102.base = NTI11086438;
NTI9765125.base = NTI114;
var NNI6253 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6253.node = NNI6253;
NTI6253.base = NTI6219;
var NNI1181907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI143, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI1181907.node = NNI1181907;
var NNI4510011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI4255232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI4510011.node = NNI4510011;
NTI9025015.base = NTI112;
NTI11350018.base = NTI114;
NTI11350033.base = NTI11086438;
NTI11220015.base = NTI11086438;
NTI11255001.base = NTI114;
NTI11255041.base = NTI114;
NTI11255056.base = NTI114;
NTI11310017.base = NTI11086438;
NTI11320215.base = NTI114;
NTI11320251.base = NTI114;
var NNI6235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6235.node = NNI6235;
NTI6235.base = NTI6233;
NTI11325015.base = NTI11086438;
NTI11325030.base = NTI114;
NTI11305026.base = NTI114;
function arrayConstr(len_250067, value_250068, typ_250069) {
        var result = new Array(len_250067);
    for (var i = 0; i < len_250067; ++i) result[i] = nimCopy(null, value_250068, typ_250069);
    return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_240023, src_240024, ti_240025) {
  var result_245219 = null;

    switch (ti_240025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_235401(ti_240025))) {
      result_245219 = src_240024;
      }
      else {
        result_245219 = [src_240024[0], src_240024[1]];
      }
      
      break;
    case 19:
            if (dest_240023 === null || dest_240023 === undefined) {
        dest_240023 = {};
      }
      else {
        for (var key in dest_240023) { delete dest_240023[key]; }
      }
      for (var key in src_240024) { dest_240023[key] = src_240024[key]; }
      result_245219 = dest_240023;
    
      break;
    case 18:
    case 17:
      if (!((ti_240025.base == null))) {
      result_245219 = nimCopy(dest_240023, src_240024, ti_240025.base);
      }
      else {
      if ((ti_240025.kind == 17)) {
      result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {m_type: ti_240025} : dest_240023;
      }
      else {
        result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {} : dest_240023;
      }
      }
      nimCopyAux(result_245219, src_240024, ti_240025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_240024 === null) {
        result_245219 = null;
      }
      else {
        if (dest_240023 === null || dest_240023 === undefined) {
          dest_240023 = new Array(src_240024.length);
        }
        else {
          dest_240023.length = src_240024.length;
        }
        result_245219 = dest_240023;
        for (var i = 0; i < src_240024.length; ++i) {
          result_245219[i] = nimCopy(result_245219[i], src_240024[i], ti_240025.base);
        }
      }
    
      break;
    case 28:
            if (src_240024 !== null) {
        result_245219 = src_240024.slice(0);
      }
    
      break;
    default: 
      result_245219 = src_240024;
      break;
    }

  return result_245219;

}
function makeNimstrLit(c_225062) {
      var ln = c_225062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_225062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_225079) {
      var ln = c_225079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_225079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_225079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function toJSStr(s_225096) {
                    var Tmp5;
            var Tmp7;

  var result_225097 = null;

    var res_225170 = new_seq_225128((s_225096 != null ? s_225096.length : 0));
    var i_225172 = 0;
    var j_225174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_225172 < (s_225096 != null ? s_225096.length : 0))) break L2;
          var c_225175 = s_225096[i_225172];
          if ((c_225175 < 128)) {
          res_225170[j_225174] = String.fromCharCode(c_225175);
          i_225172 += 1;
          }
          else {
            var helper_225198 = new_seq_225128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_225199 = c_225175.toString(16);
                  if (((code_225199 != null ? code_225199.length : 0) == 1)) {
                  if (helper_225198 != null) { helper_225198.push("%0"); } else { helper_225198 = ["%0"]; };
                  }
                  else {
                  if (helper_225198 != null) { helper_225198.push("%"); } else { helper_225198 = ["%"]; };
                  }
                  
                  if (helper_225198 != null) { helper_225198.push(code_225199); } else { helper_225198 = [code_225199]; };
                  i_225172 += 1;
                    if (((s_225096 != null ? s_225096.length : 0) <= i_225172)) Tmp5 = true; else {                      Tmp5 = (s_225096[i_225172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_225175 = s_225096[i_225172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_225170[j_225174] = decodeURIComponent(helper_225198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_225170[j_225174] = helper_225198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_225174 += 1;
        }
    } while(false);
    if (res_225170 === null) res_225170 = [];
               if (res_225170.length < j_225174) { for (var i=res_225170.length;i<j_225174;++i) res_225170.push(null); }
               else { res_225170.length = j_225174; };
    result_225097 = res_225170.join("");

  return result_225097;

}
function raiseException(e_190218, ename_190219) {
    e_190218.name = ename_190219;
    if ((excHandler == 0)) {
    unhandledException(e_190218);
    }
    
    throw e_190218;

  
}
function chckIndx(i_250086, a_250087, b_250088) {
      var Tmp1;

  var result_250089 = 0;

  BeforeRet: do {
      if (!(a_250087 <= i_250086)) Tmp1 = false; else {        Tmp1 = (i_250086 <= b_250088);      }    if (Tmp1) {
    result_250089 = i_250086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_250086, a_250087, b_250088);
    }
    
  } while (false);

  return result_250089;

}
function addInt(a_230403, b_230404) {
        var result = a_230403 + b_230404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function subInt(a_230421, b_230422) {
        var result = a_230421 - b_230422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function mulInt(a_230439, b_230440) {
        var result = a_230439 * b_230440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
      var to_tag_9730006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var to_event_name_9730012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function nimMin(a_230803, b_230804) {
    var Tmp1;

  var result_230805 = 0;

  BeforeRet: do {
    if ((a_230803 <= b_230804)) {
    Tmp1 = a_230803;
    }
    else {
    Tmp1 = b_230804;
    }
    
    result_230805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230805;

}
function mnewString(len_230044) {
        return new Array(len_230044);
  

  
}
function chckRange(i_255016, a_255017, b_255018) {
      var Tmp1;

  var result_255019 = 0;

  BeforeRet: do {
      if (!(a_255017 <= i_255016)) Tmp1 = false; else {        Tmp1 = (i_255016 <= b_255018);      }    if (Tmp1) {
    result_255019 = i_255016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_255019;

}
function nimMax(a_230821, b_230822) {
    var Tmp1;

  var result_230823 = 0;

  BeforeRet: do {
    if ((b_230822 <= a_230821)) {
    Tmp1 = a_230821;
    }
    else {
    Tmp1 = b_230822;
    }
    
    result_230823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230823;

}
function modInt(a_230475, b_230476) {
        if (b_230476 == 0) raiseDivByZero();
    if (b_230476 == -1 && a_230475 == 2147483647) raiseOverflow();
    return Math.trunc(a_230475 % b_230476);
  

  
}
var nim_program_result = 0;
var global_raise_hook_142018 = [null];
var local_raise_hook_142023 = [null];
var out_of_mem_hook_142026 = [null];
var unhandled_exception_hook_142031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var gid_9765032 = [0];
var object_id_9890031 = [0];
var vcomponents_10051026 = [{}];
var kxi_10172283 = [null];
var current_language_10867015 = [55];
function is_fat_pointer_235401(ti_235403) {
  var result_235404 = false;

  BeforeRet: do {
    result_235404 = !((ConstSet1[ti_235403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_235404;

}
function nimCopyAux(dest_240028, src_240029, n_240031) {
    switch (n_240031.kind) {
    case 0:
      break;
    case 1:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_240031.sons.length; i++) {
      nimCopyAux(dest_240028, src_240029, n_240031.sons[i]);
    }
    
      break;
    case 3:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
      for (var i = 0; i < n_240031.sons.length; ++i) {
        nimCopyAux(dest_240028, src_240029, n_240031.sons[i][1]);
      }
    
      break;
    }

  
}
var translations_10867281 = [arrayConstr(202, null, NTI857023)];
function add_142042(x_142045, x_142045_Idx, y_142046) {
          if (x_142045[x_142045_Idx] === null) { x_142045[x_142045_Idx] = []; }
      var off = x_142045[x_142045_Idx].length;
      x_142045[x_142045_Idx].length += y_142046.length;
      for (var i = 0; i < y_142046.length; ++i) {
        x_142045[x_142045_Idx][off+i] = y_142046.charCodeAt(i);
      }
    

  
}
function new_seq_225128(len_225131) {
  var result_225133 = null;

    result_225133 = new Array(len_225131); for (var i=0;i<len_225131;++i) {result_225133[i]=null;}
  return result_225133;

}
function unhandledException(e_185059) {
    var buf_185060 = [[]];
    if (!(((e_185059.message != null ? e_185059.message.length : 0) == 0))) {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(e_185059.message); } else { buf_185060[0] = e_185059.message.slice(); };
    }
    else {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit(" [")); } else { buf_185060[0] = makeNimstrLit(" ["); };
    add_142042(buf_185060, 0, e_185059.name);
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_185060[0] = makeNimstrLit("]\x0A"); };
    var cbuf_190201 = toJSStr(buf_185060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_190201);
  }
  else {
    throw cbuf_190201;
  }
  

  
}
function raiseIndexError(i_210047, a_210048, b_210049) {
    var Tmp1;

    if ((b_210049 < a_210048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_210047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_210048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_210049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI112), parent: null, m_type: NTI6249, name: null, trace: null, up: null}, "IndexError");

  
}
function add_translation_10867327(lang_10867329, key_10867330, val_10867331) {
    if ((translations_10867281[0][chckIndx(lang_10867329, 0, (translations_10867281[0] != null ? translations_10867281[0].length : 0)+0-1)-0] == null)) {
    translations_10867281[0][chckIndx(lang_10867329, 0, (translations_10867281[0] != null ? translations_10867281[0].length : 0)+0-1)-0] = {};
    }
    
    translations_10867281[0][chckIndx(lang_10867329, 0, (translations_10867281[0] != null ? translations_10867281[0].length : 0)+0-1)-0][key_10867330] = val_10867331;

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6237, name: null, trace: null, up: null}, "OverflowError");

  
}
function add_10895033(x_10895039, y_10895040) {
    L1: do {
      var i_10895048 = 0;
      var colontmp__10930196 = 0;
      colontmp__10930196 = (y_10895040 != null ? y_10895040.length : 0);
      var i_10930197 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_10930197 < colontmp__10930196)) break L3;
            i_10895048 = i_10930197;
            x_10895039.push(String.fromCharCode(y_10895040.charCodeAt(i_10895048)));
            i_10930197 = addInt(i_10930197, 1);
          }
      } while(false);
    } while(false);

  
}
function raise_invalid_format_10870061(errmsg_10870063) {
    raiseException({message: nimCopy(null, errmsg_10870063, NTI112), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");

  
}
function parse_choice_10875042(f_10875044, i_10875045, choice_10875046, r_10875051) {
                var Tmp5;
                var Tmp6;
                var Tmp9;
                var Tmp10;

    var i_10875052 = i_10875045;
    L1: do {
        L2: while (true) {
        if (!(i_10875052 < (f_10875044 != null ? f_10875044.length : 0))) break L2;
          var n_10875054 = 0;
          var old_i_10875055 = i_10875052;
          var to_add_10875056 = false;
          L3: do {
              L4: while (true) {
                if (!(i_10875052 < (f_10875044 != null ? f_10875044.length : 0))) Tmp6 = false; else {                  Tmp6 = (48 <= f_10875044.charCodeAt(i_10875052));                }                if (!Tmp6) Tmp5 = false; else {                  Tmp5 = (f_10875044.charCodeAt(i_10875052) <= 57);                }              if (!Tmp5) break L4;
                n_10875054 = subInt(addInt(mulInt(n_10875054, 10), f_10875044.charCodeAt(i_10875052)), 48);
                i_10875052 = addInt(i_10875052, 1);
              }
          } while(false);
          if (!((old_i_10875055 == i_10875052))) {
          if ((f_10875044.charCodeAt(i_10875052) == 58)) {
          i_10875052 = addInt(i_10875052, 1);
          }
          else {
          raise_invalid_format_10870061(makeNimstrLit("\':\' after number expected"));
          }
          
          to_add_10875056 = (choice_10875046 == n_10875054);
          }
          else {
            to_add_10875056 = true;
          }
          
          L7: do {
              L8: while (true) {
                if (!(i_10875052 < (f_10875044 != null ? f_10875044.length : 0))) Tmp10 = false; else {                  Tmp10 = !((f_10875044.charCodeAt(i_10875052) == 93));                }                if (!Tmp10) Tmp9 = false; else {                  Tmp9 = !((f_10875044.charCodeAt(i_10875052) == 124));                }              if (!Tmp9) break L8;
                if (to_add_10875056) {
                r_10875051.push(String.fromCharCode(f_10875044.charCodeAt(i_10875052)));
                }
                
                i_10875052 = addInt(i_10875052, 1);
              }
          } while(false);
          if (to_add_10875056) {
          break L1;
          }
          
          i_10875052 = addInt(i_10875052, 1);
        }
    } while(false);

  
}
function HEX25_10895062(format_string_10895064, args_10895066) {
                  var Tmp5;
            var Tmp6;
                  var Tmp9;
                    var Tmp12;
              var Tmp13;

  var result_10895067 = null;

    var f_10895068 = format_string_10895064;
    var i_10895070 = 0;
    var num_10895072 = 0;
    var r_10895079 = new Array(0);
    L1: do {
        L2: while (true) {
        if (!(i_10895070 < (f_10895068 != null ? f_10895068.length : 0))) break L2;
          if (((f_10895068.charCodeAt(i_10895070) == 36) && (addInt(i_10895070, 1) < (f_10895068 != null ? f_10895068.length : 0)))) {
          i_10895070 = addInt(i_10895070, 1);
          switch (f_10895068.charCodeAt(i_10895070)) {
          case 35:
            add_10895033(r_10895079, args_10895066[chckIndx(num_10895072, 0, (args_10895066 != null ? args_10895066.length : 0)+0-1)-0]);
            i_10895070 = addInt(i_10895070, 1);
            num_10895072 = addInt(num_10895072, 1);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_10895102 = 0;
            var negative_10895103 = (f_10895068.charCodeAt(i_10895070) == 45);
            if (negative_10895103) {
            i_10895070 = addInt(i_10895070, 1);
            }
            
            L3: do {
                L4: while (true) {
                  if (!(48 <= f_10895068.charCodeAt(i_10895070))) Tmp5 = false; else {                    Tmp5 = (f_10895068.charCodeAt(i_10895070) <= 57);                  }                if (!Tmp5) break L4;
                  j_10895102 = subInt(addInt(mulInt(j_10895102, 10), f_10895068.charCodeAt(i_10895070)), 48);
                  i_10895070 = addInt(i_10895070, 1);
                }
            } while(false);
            if (!(negative_10895103)) {
            Tmp6 = subInt(j_10895102, 1);
            }
            else {
            Tmp6 = subInt((args_10895066 != null ? args_10895066.length : 0), j_10895102);
            }
            
            var idx_10900019 = Tmp6;
            add_10895033(r_10895079, args_10895066[chckIndx(idx_10900019, 0, (args_10895066 != null ? args_10895066.length : 0)+0-1)-0]);
            break;
          case 36:
            i_10895070 = addInt(i_10895070, 1);
            r_10895079.push(36);
            break;
          case 91:
            var start_10900038 = addInt(i_10895070, 1);
            L7: do {
                L8: while (true) {
                  if (!(i_10895070 < (f_10895068 != null ? f_10895068.length : 0))) Tmp9 = false; else {                    Tmp9 = !((f_10895068.charCodeAt(i_10895070) == 93));                  }                if (!Tmp9) break L8;
                  i_10895070 = addInt(i_10895070, 1);
                }
            } while(false);
            i_10895070 = addInt(i_10895070, 1);
            if (((f_10895068 != null ? f_10895068.length : 0) <= i_10895070)) {
            raise_invalid_format_10870061(makeNimstrLit("\']\' expected"));
            }
            
            switch (f_10895068.charCodeAt(i_10895070)) {
            case 35:
              parse_choice_10875042(f_10895068, start_10900038, parseInt(args_10895066[chckIndx(num_10895072, 0, (args_10895066 != null ? args_10895066.length : 0)+0-1)-0], 10), r_10895079);
              i_10895070 = addInt(i_10895070, 1);
              num_10895072 = addInt(num_10895072, 1);
              break;
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 45:
              var j_10910014 = 0;
              var negative_10910015 = (f_10895068.charCodeAt(i_10895070) == 45);
              if (negative_10910015) {
              i_10895070 = addInt(i_10895070, 1);
              }
              
              L10: do {
                  L11: while (true) {
                    if (!(48 <= f_10895068.charCodeAt(i_10895070))) Tmp12 = false; else {                      Tmp12 = (f_10895068.charCodeAt(i_10895070) <= 57);                    }                  if (!Tmp12) break L11;
                    j_10910014 = subInt(addInt(mulInt(j_10910014, 10), f_10895068.charCodeAt(i_10895070)), 48);
                    i_10895070 = addInt(i_10895070, 1);
                  }
              } while(false);
              if (!(negative_10910015)) {
              Tmp13 = subInt(j_10910014, 1);
              }
              else {
              Tmp13 = subInt((args_10895066 != null ? args_10895066.length : 0), j_10910014);
              }
              
              var idx_10915019 = Tmp13;
              parse_choice_10875042(f_10895068, start_10900038, parseInt(args_10895066[chckIndx(idx_10915019, 0, (args_10895066 != null ? args_10895066.length : 0)+0-1)-0], 10), r_10895079);
              break;
            default: 
              raise_invalid_format_10870061(makeNimstrLit("argument index expected after \']\'"));
              break;
            }
            break;
          default: 
            raise_invalid_format_10870061(makeNimstrLit("\'#\', \'$\', or number expected"));
            break;
          }
          if (((i_10895070 < (f_10895068 != null ? f_10895068.length : 0)) && (f_10895068.charCodeAt(i_10895070) == 36))) {
          i_10895070 = addInt(i_10895070, 1);
          }
          
          }
          else {
            r_10895079.push(String.fromCharCode(f_10895068.charCodeAt(i_10895070)));
            i_10895070 = addInt(i_10895070, 1);
          }
          
        }
    } while(false);
    result_10895067 = r_10895079.join("");

  return result_10895067;

}
function translate_10867372(x_10867374) {
      var Tmp1;

  var result_10867375 = null;

    var y_10867376 = translations_10867281[0][chckIndx(current_language_10867015[0], 0, (translations_10867281[0] != null ? translations_10867281[0].length : 0)+0-1)-0];
      if (!!((y_10867376 == null))) Tmp1 = false; else {        Tmp1 = y_10867376.hasOwnProperty(x_10867374);      }    if (Tmp1) {
    result_10867375 = y_10867376[x_10867374];
    }
    else {
      result_10867375 = x_10867374;
    }
    

  return result_10867375;

}
function jstrans_10916010(x_10916012, param_10916018) {
    var Tmp1;

  var result_10916019 = null;

    if ((0 < (param_10916018 != null ? param_10916018.length : 0))) {
    Tmp1 = HEX25_10895062(translate_10867372(toJSStr(cstrToNimstr(x_10916012))), param_10916018);
    }
    else {
    Tmp1 = translate_10867372(toJSStr(cstrToNimstr(x_10916012)));
    }
    
    result_10916019 = Tmp1;

  return result_10916019;

}
function set_current_language_10867236(new_language_10867238) {
    current_language_10867015[0] = new_language_10867238;

  
}
function setlang_10930014(lang_10930016) {
    if (lang_10930016.startsWith("ja")) {
    set_current_language_10867236(111);
    }
    else {
    if (lang_10930016.startsWith("en")) {
    set_current_language_10867236(55);
    }
    else {
    set_current_language_10867236(55);
    }
    }
        if(pastel && pastel.utxoballs) {
      pastel.utxoballs.update();
    }
  

  
}
function get_current_language_10867252() {
  var result_10867254 = 0;

    result_10867254 = current_language_10867015[0];

  return result_10867254;

}
function getlang_10930033() {
    var Tmp1;

  var result_10930035 = null;

    var lang_10930036 = get_current_language_10867252();
    if ((lang_10930036 == 111)) {
    Tmp1 = makeNimstrLit("ja");
    }
    else {
    Tmp1 = makeNimstrLit("en");
    }
    
    result_10930035 = toJSStr(Tmp1);

  return result_10930035;

}
add_translation_10867327(111, "Scan your seed cards or input your mnemonic to start.", "はじめるにはSeedカードを読み取るか、またはニーモニックを入力してしてください。");
add_translation_10867327(111, "Seed card", "Seedカード");
add_translation_10867327(111, "Mnemonic", "ニーモニック");
add_translation_10867327(111, "Scan seed card with camera", "カメラでSeedカードを読み取る");
add_translation_10867327(111, "Select mnemonic language", "ニーモニックの言語選択");
add_translation_10867327(111, "Japanese", "日本語");
add_translation_10867327(111, "English", "英語");
add_translation_10867327(111, "Import your mnemonic you already have", "所有しているニーモニックのインポート");
add_translation_10867327(111, "Check", "確認");
add_translation_10867327(111, "Advanced Check", "高度な確認");
add_translation_10867327(111, "Preparing Camera", "カメラの準備中");
add_translation_10867327(111, "Seed", "Seed");
add_translation_10867327(111, "unknown", "不明");
add_translation_10867327(111, "Seed Vector:", "Seedベクター:");
add_translation_10867327(111, "Type your seed vector", "Seedベクターを入力");
add_translation_10867327(111, "Next", "次へ");
add_translation_10867327(111, "Back", "戻る");
add_translation_10867327(111, "A key card or passphrase is required to encrypt and save the private key in your browser.\n You will need it before sending your coins.\n", "秘密鍵を暗号化しブラウザ内に保存するためにキーカードまたはパスフレーズを設定してください。\n キーカードまたはパスフレーズはコインを送信するときに必要になります。\n");
add_translation_10867327(111, "Key card", "キーカード");
add_translation_10867327(111, "Passphrase", "パスフレーズ");
add_translation_10867327(111, "Scan key card with camera", "カメラでキーカードを読み取る");
add_translation_10867327(111, "Input passphrase", "パスフレーズの入力");
add_translation_10867327(111, "Apply", "設定");
add_translation_10867327(111, "Scanned key card", "読み取ったキーカード");
add_translation_10867327(111, "Rescan", "再読み取り");
add_translation_10867327(111, "Send", "送信");
add_translation_10867327(111, "Receive", "受信");
add_translation_10867327(111, "Settings", "設定");
add_translation_10867327(111, "Logs", "履歴");
add_translation_10867327(111, "Send Coins", "コイン送信");
add_translation_10867327(111, "Locked", "ロック中");
add_translation_10867327(111, "Unlocked", "ロック解除済み");
add_translation_10867327(111, "Please unlock your wallet before sending coins.", "コインを送信する前にウォレットのロックを解除してください。");
add_translation_10867327(111, "Scan your key card", "キーカード読み取り");
add_translation_10867327(111, "Input your passphrase", "パスフレーズ入力");
add_translation_10867327(111, "Clear", "削除");
add_translation_10867327(111, "Scan QR Code", "QRコード読み取り");
add_translation_10867327(111, "-1 Ball", "-1 ボール");
add_translation_10867327(111, "+1 Ball", "+1 ボール");
add_translation_10867327(111, "Send Address", "送信アドレス");
add_translation_10867327(111, "Address", "アドレス");
add_translation_10867327(111, "Send", "送信");
add_translation_10867327(111, "Receive Address", "受信アドレス");
add_translation_10867327(111, "Copy", "コピー");
add_translation_10867327(111, "Copied to clipboard", "クリップボードにコピーしました。");
add_translation_10867327(111, "Create QR Code", "QRコード作成");
add_translation_10867327(111, "Amount", "数量");
add_translation_10867327(111, "Label", "ラベル");
add_translation_10867327(111, "Message", "メッセージ");
add_translation_10867327(111, "Cancel", "キャンセル");
add_translation_10867327(111, "Change-", "おつり-");
add_translation_10867327(111, "Too Much Balls", "多すぎるボール");
add_translation_10867327(111, "$#$ years ago", "$#$ 年前");
add_translation_10867327(111, "$#$ year ago", "$#$ 年前");
add_translation_10867327(111, "$#$ years $#$ months ago", "$#$ 年 $#$ヶ月前");
add_translation_10867327(111, "$#$ year $#$ months ago", "$#$ 年 $#$ヶ月前");
add_translation_10867327(111, "$#$ years $#$ month ago", "$#$ 年 $#$ヶ月前");
add_translation_10867327(111, "$#$ year $#$ month ago", "$#$ 年 $#$ヶ月前");
add_translation_10867327(111, "$#$ months ago", "$#$ ヶ月前");
add_translation_10867327(111, "$#$ month ago", "$#$ ヶ月前");
add_translation_10867327(111, "$#$ weeks ago", "$#$ 週間前");
add_translation_10867327(111, "$#$ week ago", "$#$ 週間前");
add_translation_10867327(111, "$#$ days ago", "$#$ 日前");
add_translation_10867327(111, "$#$ day ago", "$#$ 日前");
add_translation_10867327(111, "$#$ hours ago", "$#$ 時間前");
add_translation_10867327(111, "$#$ hour ago", "$#$ 時間前");
add_translation_10867327(111, "$#$ minutes ago", "$#$ 分前");
add_translation_10867327(111, "$#$ minute ago", "$#$ 分前");
add_translation_10867327(111, "just now", "新着");
add_translation_10867327(111, "SEND", "送信");
add_translation_10867327(111, "RECEIVE", "受信");
add_translation_10867327(111, "Confirmed", "確認済");
add_translation_10867327(111, "Unconfirmed", "未確認");
add_translation_10867327(111, "Reset Wallet", "ウォレットのリセット");
add_translation_10867327(111, "Are you sure to reset your wallet?", "本当にウォレットをリセットしますか？");
add_translation_10867327(111, "Reset", "リセット");
add_translation_10867327(111, "Delete all your wallet data in your web browser, including your encrypted secret keys.\n If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\n or mnemonics before deleting it. Otherwise you may lost your coins forever.\n", "ブラウザ内の暗号化した秘密鍵を含むすべてのウォレットデータを削除します。\n もしウォレットにコインが残っていたり、受信予定のコインがある場合は、削除前にSeedカードまたはニーモニックを持っていることを確認してください。\n そうしないとコインを永久に失うかもしれません。\n");
add_translation_10867327(111, "I confirmed that I have the seed cards or mnemonics or no coins in my wallet.", "私はSeedカードやニーモニックを持っています。またはウォレットにコインがありません。");
add_translation_10867327(111, "Confirmation", "確認");
add_translation_10867327(111, "Please read and check here before resetting your wallet.", "ウォレットをリセットする前に内容を読んでチェックをしてください。");
add_translation_10867327(111, "Error", "エラー");
add_translation_10867327(111, "Warning", "警告");
add_translation_10867327(111, "Unsupported seed card was scanned.", "サポートしていないシードカードを読み取りました。");
add_translation_10867327(111, "The seed card has already been scanned.", "すでに読み取り済みのシードカードです。");
add_translation_10867327(111, "Failed to lock your wallet with the key card.", "キーカードによるウォレットのロックに失敗しました。");
add_translation_10867327(111, "There are no misspellings, but some words seem to be wrong.", "不正なワードはありませんが、いくつかのワードが間違えています。");
add_translation_10867327(111, "Try to use [Advanced Check]", "[高度な確認] を試してみてください。");
add_translation_10867327(111, "Failed to lock your wallet with the passphrase.", "パスフレーズによるウォレットのロックに失敗しました。");
add_translation_10867327(111, "Failed to unlock. Wrong key card was scanned.", "ロック解除に失敗しました。 キーカードが間違えています。");
add_translation_10867327(111, "Failed to unlock. Passphrase is incorrect.", "ロック解除に失敗しました。 パスフレーズが間違えています。");
add_translation_10867327(111, "Failed to unlock. Camera error. Please connect the camera and reload the page.", "ロック解除に失敗しました。 カメラが利用できませんでした。 カメラを接続してページをリロードしてください。");
add_translation_10867327(111, "Camera error. Please connect the camera and reload the page.", "カメラが利用できませんでした。 カメラを接続してページをリロードしてください。");
add_translation_10867327(111, "Coins sent successfully.", "コインを送信しました。");
add_translation_10867327(111, "Failed to send coins.", "コインの送信に失敗しました。");
add_translation_10867327(111, "Address is invalid.", "アドレスが不正です。");
add_translation_10867327(111, "Balance is insufficient.", "残高が不足しています。");
add_translation_10867327(111, "Amount is zero.", "数量が 0 です。");
add_translation_10867327(111, "Amount is too small.", "数量が小さすぎます。");
add_translation_10867327(111, "Failed to send coins. Busy.", "コインの送信に失敗しました。 ビジー");
add_translation_10867327(111, "Server is not responding. Coins may have been sent.", "サーバーが応答しません。 コインの送信に成功している可能性もあります。");
add_translation_10867327(111, "Failed to send coins. Server error.", "コインの送信に失敗しました。 サーバーエラー");
add_translation_10867327(111, "Failed to send coins. Server is not responding.", "サーバーが応答しません。");
add_translation_10867327(111, "Amount is invalid. The decimal places is too long. Please set it 8 or less.", "数量が不正です。 小数点以下が長すぎます。 小数点以下の桁数は8以内にしてください。");
add_translation_10867327(111, "Amount is invalid.", "数量が不正です。");
add_translation_10867327(111, "Failed to lock keys.", "ロックに失敗しました。");
add_translation_10867327(111, "Language", "言語選択");
var __t = jstrans_10916010;
var setlang = setlang_10930014;
var getlang = getlang_10930033;
var navlang = window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage;
(function() {
  var stor  = new Stor();
  var lang = stor.get_lang();
  stor = null;
  lang = lang || navlang || 'en';
  lang = lang.substring(0, 2);
  setlang(lang);
  LangSelector.show(lang);
})();

var app_inst_11086027 = [null];
var current_import_type_11086050 = [0];
var current_protect_type_11086056 = [0];
var show_scan_seed_btn_11086074 = [true];
var show_scanning_11086075 = [true];
var show_cam_tools_11086076 = [true];
var show_scan_result_11086077 = [false];
var show_scan_seed_btn2_11086078 = [true];
var show_scanning2_11086079 = [true];
var show_cam_tools2_11086080 = [true];
var show_scan_result2_11086081 = [false];
var show_page1_11086082 = [true];
var show_page2_11086083 = [false];
var show_page3_11086084 = [false];
var show_page4_11086085 = [false];
var mnemonic_fulfill_11086086 = [false];
var key_card_fulfill_11086087 = [false];
var passphrase_fulfill_11086088 = [false];
var supress_redraw_11086089 = [false];
var show_recv_address_selector_11086090 = [true];
var show_recv_address_modal_11086091 = [true];
var show_trade_logs_11086092 = [false];
var show_settings_11086093 = [false];
var jsViewSelector = function() {}

function sys_fatal_102618(message_102622) {
    raiseException({message: nimCopy(null, message_102622, NTI112), m_type: NTI6241, parent: null, name: null, trace: null, up: null}, "AssertionError");

  
}
function raise_assert_102614(msg_102616) {
    sys_fatal_102618(msg_102616);

  
}
function failed_assert_impl_102680(msg_102682) {
    raise_assert_102614(msg_102682);

  
}
function valueHEX3D_9730143(n_9730145, v_9730146) {
    n_9730145.text = v_9730146;

  
}
function value_9730126(n_9730128) {
  var result_9730129 = null;

    result_9730129 = n_9730128.text;

  return result_9730129;

}
function wrap_event_10172349(d_10172351, n_10172352, k_10172353, action_10172354) {
      function later_wrapper_10240042() {
          function HEX3Aanonymous_10240048(ev_10240050) {
              function wrapper_10240051() {
                  var vHEX60gensym10240053_10250001 = ev_10240050.target.value;
                  valueHEX3D_9730143(n_10240046, vHEX60gensym10240053_10250001);
                  if (!(!((action_10240045 == null)))) {
                  failed_assert_impl_102680(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_10240045(ev_10240050, n_10240046);
                  if (!((value_9730126(n_10240046) == vHEX60gensym10240053_10250001))) {
                  ev_10240050.target.value = value_9730126(n_10240046);
                  }
                  

                
              }

              if (!((timer_10240047 == null))) {
              clearTimeout(timer_10240047);
              }
              
              timer_10240047 = setTimeout(wrapper_10240051, 400);

            
          }

        var result_10240044 = null;

          var action_10240045 = action_10172354;
          var n_10240046 = n_10172352;
          var timer_10240047 = null;
          result_10240044 = HEX3Aanonymous_10240048;

        return result_10240044;

      }
      function enter_wrapper_10205042() {
          function HEX3Aanonymous_10205047(ev_10205049) {
              if ((ev_10205049.keyCode == 13)) {
              var vHEX60gensym10205050_10215001 = ev_10205049.target.value;
              valueHEX3D_9730143(n_10205046, vHEX60gensym10205050_10215001);
              if (!(!((action_10205045 == null)))) {
              failed_assert_impl_102680(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_10205045(ev_10205049, n_10205046);
              if (!((value_9730126(n_10205046) == vHEX60gensym10205050_10215001))) {
              ev_10205049.target.value = value_9730126(n_10205046);
              }
              
              }
              

            
          }

        var result_10205044 = null;

          var action_10205045 = action_10172354;
          var n_10205046 = n_10172352;
          result_10205044 = HEX3Aanonymous_10205047;

        return result_10205044;

      }
      function std_wrapper_10172356() {
          function HEX3Aanonymous_10172361(ev_10172363) {
                var Tmp1;
                var Tmp2;

                if ((n_10172360.kind == 109)) Tmp2 = true; else {                  Tmp2 = (n_10172360.kind == 103);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_10172360.kind == 105);                }              if (Tmp1) {
              var vHEX60gensym10172382_10180001 = ev_10172363.target.value;
              valueHEX3D_9730143(n_10172360, vHEX60gensym10172382_10180001);
              if (!(!((action_10172359 == null)))) {
              failed_assert_impl_102680(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_10172359(ev_10172363, n_10172360);
              if (!((value_9730126(n_10172360) == vHEX60gensym10172382_10180001))) {
              ev_10172363.target.value = value_9730126(n_10172360);
              }
              
              }
              else {
              action_10172359(ev_10172363, n_10172360);
              }
              

            
          }

        var result_10172358 = null;

          var action_10172359 = action_10172354;
          var n_10172360 = n_10172352;
          result_10172358 = HEX3Aanonymous_10172361;

        return result_10172358;

      }

  var result_10172355 = null;

    switch (k_10172353) {
    case 30:
      result_10172355 = later_wrapper_10240042();
      d_10172351.addEventListener("keyup", result_10172355, false);
      break;
    case 29:
      result_10172355 = enter_wrapper_10205042();
      d_10172351.addEventListener("keyup", result_10172355, false);
      break;
    default: 
      result_10172355 = std_wrapper_10172356();
      d_10172351.addEventListener(to_event_name_9730012[chckIndx(k_10172353, 0, (to_event_name_9730012 != null ? to_event_name_9730012.length : 0)+0-1)-0], result_10172355, false);
      break;
    }

  return result_10172355;

}
function apply_events_10280088(n_10280090) {
    var dest_10280091 = n_10280090.dom;
    L1: do {
      var i_10280104 = 0;
      var colontmp__11086196 = 0;
      colontmp__11086196 = (n_10280090.events != null ? n_10280090.events.length : 0);
      var i_11086197 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11086197 < colontmp__11086196)) break L3;
            i_10280104 = i_11086197;
            n_10280090.events[chckIndx(i_10280104, 0, (n_10280090.events != null ? n_10280090.events.length : 0)+0-1)-0]["Field2"] = wrap_event_10172349(dest_10280091, n_10280090, n_10280090.events[chckIndx(i_10280104, 0, (n_10280090.events != null ? n_10280090.events.length : 0)+0-1)-0]["Field0"], n_10280090.events[chckIndx(i_10280104, 0, (n_10280090.events != null ? n_10280090.events.length : 0)+0-1)-0]["Field1"]);
            i_11086197 = addInt(i_11086197, 1);
          }
      } while(false);
    } while(false);

  
}
function apply_style_895425(n_895427, s_895428) {
    n_895427.style = {};
    L1: do {
      var i_895621 = 0;
      var colontmp__11086207 = 0;
      colontmp__11086207 = subInt(s_895428.length, 1);
      var res_11086208 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_11086208 <= colontmp__11086207)) break L3;
            i_895621 = res_11086208;
            n_895427.style[s_895428[i_895621]] = s_895428[addInt(i_895621, 1)];
            res_11086208 = addInt(res_11086208, 2);
          }
      } while(false);
    } while(false);

  
}
function vnode_to_dom_10280169(n_10280171, kxi_10280172) {
      var Tmp9;
      var Tmp10;

  var result_10280173 = null;

  BeforeRet: do {
    if ((n_10280171.kind == 0)) {
    result_10280173 = document.createTextNode(n_10280171.text);
    n_10280171.dom = result_10280173;
    if (!((n_10280171.id == null))) {
    kxi_10172283[0].byId[n_10280171.id] = n_10280171;
    }
    
    }
    else {
    if ((n_10280171.kind == 6)) {
    result_10280173 = document.createElement("div");
    result_10280173.innerHTML = n_10280171.text;
    n_10280171.dom = result_10280173;
    if (!((n_10280171.id == null))) {
    kxi_10172283[0].byId[n_10280171.id] = n_10280171;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_10280171.kind == 3)) {
    var x_10305001 = vcomponents_10051026[0][n_10280171.text](n_10280171.kids);
    result_10280173 = vnode_to_dom_10280169(x_10305001, kxi_10280172);
    n_10280171.dom = result_10280173;
    if (!((n_10280171.id == null))) {
    kxi_10172283[0].byId[n_10280171.id] = n_10280171;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_10280171.kind == 4)) {
    result_10280173 = n_10280171.dom;
    if (!(!((result_10280173 == null)))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(154, 12) `result != nil` "));
    }
    
    n_10280171.dom = result_10280173;
    if (!((n_10280171.id == null))) {
    kxi_10172283[0].byId[n_10280171.id] = n_10280171;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_10280171.kind == 5)) {
    var x_10340022 = n_10280171;
    if (!((x_10340022.onAttachImpl == null))) {
    x_10340022.onAttachImpl(x_10340022);
    }
    
    if (!(!((x_10340022.renderImpl == null)))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(161, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_10340022.expanded == null)) {
    x_10340022.expanded = x_10340022.renderImpl(x_10340022);
    }
    
    if (!(!((x_10340022.expanded == null)))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(165, 12) `x.expanded != nil` "));
    }
    
    result_10280173 = vnode_to_dom_10280169(x_10340022.expanded, kxi_10280172);
    n_10280171.dom = result_10280173;
    if (!((n_10280171.id == null))) {
    kxi_10172283[0].byId[n_10280171.id] = n_10280171;
    }
    
    break BeforeRet;
    }
    else {
      result_10280173 = document.createElement(to_tag_9730006[chckIndx(n_10280171.kind, 0, (to_tag_9730006 != null ? to_tag_9730006.length : 0)+0-1)-0]);
      n_10280171.dom = result_10280173;
      if (!((n_10280171.id == null))) {
      kxi_10172283[0].byId[n_10280171.id] = n_10280171;
      }
      
      L1: do {
        var k_10395016 = null;
        L2: do {
          var i_11086174 = 0;
          var colontmp__11086175 = 0;
          colontmp__11086175 = (n_10280171.kids != null ? n_10280171.kids.length : 0);
          var i_11086176 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_11086176 < colontmp__11086175)) break L4;
                i_11086174 = i_11086176;
                k_10395016 = n_10280171.kids[chckIndx(i_11086174, 0, (n_10280171.kids != null ? n_10280171.kids.length : 0)+0-1)-0];
                result_10280173.appendChild(vnode_to_dom_10280169(k_10395016, kxi_10280172));
                i_11086176 = addInt(i_11086176, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_10280171.text == null))) {
      result_10280173.value = n_10280171.text;
      }
      
    }
    }}}}
    if (!((n_10280171.id == null))) {
    result_10280173.id = n_10280171.id;
    }
    
    if (!((n_10280171.class == null))) {
    result_10280173.className = n_10280171.class;
    }
    
    L5: do {
      var k_10410001 = null;
      var v_10410002 = null;
      L6: do {
        var i_11086187 = 0;
        var colontmp__11086188 = 0;
        colontmp__11086188 = subInt((n_10280171.attrs != null ? n_10280171.attrs.length : 0), 2);
        var res_11086189 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_11086189 <= colontmp__11086188)) break L8;
              i_11086187 = res_11086189;
              k_10410001 = n_10280171.attrs[chckIndx(i_11086187, 0, (n_10280171.attrs != null ? n_10280171.attrs.length : 0)+0-1)-0];
              v_10410002 = n_10280171.attrs[chckIndx(addInt(i_11086187, 1), 0, (n_10280171.attrs != null ? n_10280171.attrs.length : 0)+0-1)-0];
              if (!((v_10410002 == null))) {
              result_10280173.setAttribute(k_10410001, v_10410002);
              }
              
              res_11086189 = addInt(res_11086189, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    apply_events_10280088(n_10280171);
      if (!!((kxi_10280172 == null))) Tmp10 = false; else {        Tmp10 = (n_10280171 == kxi_10280172.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_10280172.toFocus == null);      }    if (Tmp9) {
    kxi_10280172.toFocus = result_10280173;
    }
    
    if (!((n_10280171.style == null))) {
    apply_style_895425(result_10280173, n_10280171.style);
    }
    
  } while (false);

  return result_10280173;

}
function replace_by_id_10435074(id_10435076, new_tree_10435077) {
    var x_10435078 = document.getElementById(id_10435076);
    x_10435078.parentNode.replaceChild(new_tree_10435077, x_10435078);
    new_tree_10435077.id = id_10435076;

  
}
function len_9815014(x_9815016) {
  var result_9815017 = 0;

    result_9815017 = (x_9815016.kids != null ? x_9815016.kids.length : 0);

  return result_9815017;

}
function HEX5BHEX5D_9815036(x_9815038, idx_9815039) {
  var result_9815040 = null;

    result_9815040 = x_9815038.kids[chckIndx(idx_9815039, 0, (x_9815038.kids != null ? x_9815038.kids.length : 0)+0-1)-0];

  return result_9815040;

}
function same_10420072(n_10420074, e_10420075, nesting_10420076) {
      var Tmp1;
      var Tmp2;

  var result_10420078 = false;

  BeforeRet: do {
    if (kxi_10172283[0].orphans.hasOwnProperty(n_10420074.id)) {
    result_10420078 = true;
    break BeforeRet;
    }
    
    if ((n_10420074.kind == 5)) {
    result_10420078 = same_10420072(n_10420074.expanded, e_10420075, addInt(nesting_10420076, 1));
    }
    else {
    if ((n_10420074.kind == 6)) {
    result_10420078 = true;
    }
    else {
      if ((n_10420074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_10420074.kind == 4);      }    if (Tmp1) {
    result_10420078 = true;
    }
    else {
    if ((to_tag_9730006[chckIndx(n_10420074.kind, 0, (to_tag_9730006 != null ? to_tag_9730006.length : 0)+0-1)-0] == e_10420075.nodeName)) {
    result_10420078 = true;
    if (!((n_10420074.kind == 0))) {
      if (!!((e_10420075.childNodes.length == len_9815014(n_10420074)))) Tmp2 = false; else {        Tmp2 = !((n_10420074.kind == 109));      }    if (Tmp2) {
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_9815014(n_10420074))+""), makeNimstrLit(" real "), cstrToNimstr((e_10420075.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_9730006[chckIndx(n_10420074.kind, 0, (to_tag_9730006 != null ? to_tag_9730006.length : 0)+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_10420076)+""));
    result_10420078 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_10435024 = 0;
      var colontmp__11086214 = 0;
      colontmp__11086214 = len_9815014(n_10420074);
      var i_11086215 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_11086215 < colontmp__11086214)) break L5;
            i_10435024 = i_11086215;
            if (!(same_10420072(HEX5BHEX5D_9815036(n_10420074, i_10435024), e_10420075.childNodes[i_10435024], addInt(nesting_10420076, 1)))) {
            result_10420078 = false;
            break BeforeRet;
            }
            
            i_11086215 = addInt(i_11086215, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_9730006[chckIndx(n_10420074.kind, 0, (to_tag_9730006 != null ? to_tag_9730006.length : 0)+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_10420075.nodeName));
    }
    }}}
  } while (false);

  return result_10420078;

}
function eq_860229(a_860231, b_860232) {
  var result_860233 = false;

  BeforeRet: do {
    if ((a_860231 == null)) {
    if ((b_860232 == null)) {
    result_860233 = true;
    break BeforeRet;
    }
    else {
      result_860233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_860232 == null)) {
    result_860233 = false;
    break BeforeRet;
    }
    }
    if (!((a_860231.length == b_860232.length))) {
    result_860233 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_865083 = 0;
      var colontmp__11086250 = 0;
      colontmp__11086250 = a_860231.length;
      var i_11086251 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11086251 < colontmp__11086250)) break L3;
            i_865083 = i_11086251;
            if (!((a_860231[i_865083] == b_860232[i_865083]))) {
            result_860233 = false;
            break BeforeRet;
            }
            
            i_11086251 = addInt(i_11086251, 1);
          }
      } while(false);
    } while(false);
    result_860233 = true;
    break BeforeRet;
  } while (false);

  return result_860233;

}
function same_attrs_9825879(a_9825881, b_9825882) {
  var result_9825883 = false;

  BeforeRet: do {
    if (((a_9825881.attrs != null ? a_9825881.attrs.length : 0) == (b_9825882.attrs != null ? b_9825882.attrs.length : 0))) {
    result_9825883 = true;
    L1: do {
      var i_9825906 = 0;
      var colontmp__11086254 = 0;
      colontmp__11086254 = (a_9825881.attrs != null ? a_9825881.attrs.length : 0);
      var i_11086255 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11086255 < colontmp__11086254)) break L3;
            i_9825906 = i_11086255;
            if (!((a_9825881.attrs[chckIndx(i_9825906, 0, (a_9825881.attrs != null ? a_9825881.attrs.length : 0)+0-1)-0] == b_9825882.attrs[chckIndx(i_9825906, 0, (b_9825882.attrs != null ? b_9825882.attrs.length : 0)+0-1)-0]))) {
            result_9825883 = false;
            break BeforeRet;
            }
            
            i_11086255 = addInt(i_11086255, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_9825883;

}
function eq_10435214(a_10435216, b_10435217) {
      var Tmp4;
      var Tmp5;

  var result_10435218 = 0;

  BeforeRet: do {
    if (!((a_10435216.kind == b_10435217.kind))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    if (!((a_10435216.id == b_10435217.id))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    result_10435218 = 3;
    if (!((a_10435216.index == b_10435217.index))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    if ((a_10435216.kind == 0)) {
    if (!((a_10435216.text == b_10435217.text))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_10435216.kind == 3)) {
    if (!((a_10435216.text == b_10435217.text))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    if (!((len_9815014(a_10435216) == len_9815014(b_10435217)))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_10465008 = 0;
      var colontmp__11086246 = 0;
      colontmp__11086246 = len_9815014(a_10435216);
      var i_11086247 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11086247 < colontmp__11086246)) break L3;
            i_10465008 = i_11086247;
            if ((eq_10435214(HEX5BHEX5D_9815036(a_10435216, i_10465008), HEX5BHEX5D_9815036(b_10435217, i_10465008)) == 1)) {
            result_10435218 = 1;
            break BeforeRet;
            }
            
            i_11086247 = addInt(i_11086247, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_10435216.kind == 4)) {
    result_10435218 = 3;
    break BeforeRet;
    }
    else {
    if ((a_10435216.kind == 6)) {
    if (!((a_10435216.text == b_10435217.text))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_10435217.kind == 5)) {
    if (!((a_10435216.text == b_10435217.text))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    if (!((a_10435216.key == b_10435217.key))) {
    result_10435218 = 1;
    break BeforeRet;
    }
    
    result_10435218 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_10435216.class == b_10435217.class))) Tmp5 = true; else {        Tmp5 = !(eq_860229(a_10435216.style, b_10435217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(same_attrs_9825879(a_10435216, b_10435217));      }    if (Tmp4) {
    result_10435218 = 2;
    break BeforeRet;
    }
    
    break BeforeRet;
  } while (false);

  return result_10435218;

}
function update_styles_10485229(new_node_10485231, old_node_10485232) {
    if (!((old_node_10485232.dom == null))) {
    if (!((new_node_10485231.style == null))) {
    apply_style_895425(old_node_10485232.dom, new_node_10485231.style);
    }
    else {
      old_node_10485232.dom.style = {m_type: NTI622276, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
    }
    
    old_node_10485232.dom.className = new_node_10485231.class;
    }
    
    old_node_10485232.style = new_node_10485231.style;
    old_node_10485232.class = new_node_10485231.class;

  
}
function take_over_attr_9765212(new_node_9765214, old_node_9765215) {
    old_node_9765215.attrs = new_node_9765214.attrs;

  
}
function update_attributes_10495052(new_node_10495054, old_node_10495055) {
    if (!((old_node_10495055.dom == null))) {
    L1: do {
      var k_10500009 = null;
      var __10500010 = null;
      L2: do {
        var i_11086260 = 0;
        var colontmp__11086261 = 0;
        colontmp__11086261 = subInt((old_node_10495055.attrs != null ? old_node_10495055.attrs.length : 0), 2);
        var res_11086262 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_11086262 <= colontmp__11086261)) break L4;
              i_11086260 = res_11086262;
              k_10500009 = old_node_10495055.attrs[chckIndx(i_11086260, 0, (old_node_10495055.attrs != null ? old_node_10495055.attrs.length : 0)+0-1)-0];
              __10500010 = old_node_10495055.attrs[chckIndx(addInt(i_11086260, 1), 0, (old_node_10495055.attrs != null ? old_node_10495055.attrs.length : 0)+0-1)-0];
              old_node_10495055.dom.removeAttribute(k_10500009);
              res_11086262 = addInt(res_11086262, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_10500011 = null;
      var v_10500012 = null;
      L6: do {
        var i_11086268 = 0;
        var colontmp__11086269 = 0;
        colontmp__11086269 = subInt((new_node_10495054.attrs != null ? new_node_10495054.attrs.length : 0), 2);
        var res_11086270 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_11086270 <= colontmp__11086269)) break L8;
              i_11086268 = res_11086270;
              k_10500011 = new_node_10495054.attrs[chckIndx(i_11086268, 0, (new_node_10495054.attrs != null ? new_node_10495054.attrs.length : 0)+0-1)-0];
              v_10500012 = new_node_10495054.attrs[chckIndx(addInt(i_11086268, 1), 0, (new_node_10495054.attrs != null ? new_node_10495054.attrs.length : 0)+0-1)-0];
              if (!((v_10500012 == null))) {
              old_node_10495055.dom.setAttribute(k_10500011, v_10500012);
              }
              
              res_11086270 = addInt(res_11086270, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    take_over_attr_9765212(new_node_10495054, old_node_10495055);

  
}
function merge_events_10505014(new_node_10505016, old_node_10505017, kxi_10505018) {
            var Tmp4;

    var d_10505019 = old_node_10505017.dom;
    L1: do {
      var i_10505032 = 0;
      var colontmp__11086275 = 0;
      colontmp__11086275 = (old_node_10505017.events != null ? old_node_10505017.events.length : 0);
      var i_11086276 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11086276 < colontmp__11086275)) break L3;
            i_10505032 = i_11086276;
            var k_10505033 = old_node_10505017.events[chckIndx(i_10505032, 0, (old_node_10505017.events != null ? old_node_10505017.events.length : 0)+0-1)-0]["Field0"];
            switch (k_10505033) {
            case 30:
            case 29:
              Tmp4 = "keyup";
              break;
            default: 
              Tmp4 = to_event_name_9730012[chckIndx(k_10505033, 0, (to_event_name_9730012 != null ? to_event_name_9730012.length : 0)+0-1)-0];
              break;
            }
            var name_10505036 = Tmp4;
            d_10505019.removeEventListener(name_10505036, old_node_10505017.events[chckIndx(i_10505032, 0, (old_node_10505017.events != null ? old_node_10505017.events.length : 0)+0-1)-0]["Field2"]);
            i_11086276 = addInt(i_11086276, 1);
          }
      } while(false);
    } while(false);
    old_node_10505017.events = new_node_10505016.events;
    apply_events_10280088(old_node_10505017);

  
}
function HEX5BHEX5DHEX3D_9815054(x_9815056, idx_9815057, y_9815058) {
    x_9815056.kids[chckIndx(idx_9815057, 0, (x_9815056.kids != null ? x_9815056.kids.length : 0)+0-1)-0] = y_9815058;

  
}
function add_patch_v_10510062(kxi_10510064, parent_10510065, pos_10510066, new_child_10510067) {
    var l_10510068 = kxi_10510064.patchLenV;
    if (((kxi_10510064.patchesV != null ? kxi_10510064.patchesV.length : 0) <= l_10510068)) {
    if (kxi_10510064.patchesV != null) { kxi_10510064.patchesV.push({parent: parent_10510065, newChild: new_child_10510067, pos: pos_10510066}); } else { kxi_10510064.patchesV = [{parent: parent_10510065, newChild: new_child_10510067, pos: pos_10510066}]; };
    }
    else {
      kxi_10510064.patchesV[chckIndx(l_10510068, 0, (kxi_10510064.patchesV != null ? kxi_10510064.patchesV.length : 0)+0-1)-0].parent = parent_10510065;
      kxi_10510064.patchesV[chckIndx(l_10510068, 0, (kxi_10510064.patchesV != null ? kxi_10510064.patchesV.length : 0)+0-1)-0].newChild = new_child_10510067;
      kxi_10510064.patchesV[chckIndx(l_10510068, 0, (kxi_10510064.patchesV != null ? kxi_10510064.patchesV.length : 0)+0-1)-0].pos = pos_10510066;
    }
    
    kxi_10510064.patchLenV = addInt(kxi_10510064.patchLenV, 1);

  
}
function add_patch_10505214(kxi_10505216, ka_10505217, parenta_10505218, currenta_10505219, na_10505220) {
    var l_10505221 = kxi_10505216.patchLen;
    if (((kxi_10505216.patches != null ? kxi_10505216.patches.length : 0) <= l_10505221)) {
    if (kxi_10505216.patches != null) { kxi_10505216.patches.push({k: ka_10505217, parent: parenta_10505218, current: currenta_10505219, n: na_10505220}); } else { kxi_10505216.patches = [{k: ka_10505217, parent: parenta_10505218, current: currenta_10505219, n: na_10505220}]; };
    }
    else {
      kxi_10505216.patches[chckIndx(l_10505221, 0, (kxi_10505216.patches != null ? kxi_10505216.patches.length : 0)+0-1)-0].k = ka_10505217;
      kxi_10505216.patches[chckIndx(l_10505221, 0, (kxi_10505216.patches != null ? kxi_10505216.patches.length : 0)+0-1)-0].parent = parenta_10505218;
      kxi_10505216.patches[chckIndx(l_10505221, 0, (kxi_10505216.patches != null ? kxi_10505216.patches.length : 0)+0-1)-0].current = currenta_10505219;
      kxi_10505216.patches[chckIndx(l_10505221, 0, (kxi_10505216.patches != null ? kxi_10505216.patches.length : 0)+0-1)-0].n = na_10505220;
    }
    
    kxi_10505216.patchLen = addInt(kxi_10505216.patchLen, 1);

  
}
function diff_10540215(new_node_10540217, old_node_10540218, parent_10540219, current_10540220, kxi_10540221) {
        var Tmp1;
      var Tmp2;
      var Tmp3;
            var Tmp6;
            var Tmp9;
            var Tmp10;

  var result_10540222 = 0;

  BeforeRet: do {
    result_10540222 = eq_10435214(new_node_10540217, old_node_10540218);
    switch (result_10540222) {
    case 0:
      if (kxi_10540221.components != null) { kxi_10540221.components.push({oldNode: old_node_10540218, newNode: new_node_10540217, parent: parent_10540219, current: current_10540220}); } else { kxi_10540221.components = [{oldNode: old_node_10540218, newNode: new_node_10540217, parent: parent_10540219, current: current_10540220}]; };
      break;
    case 3:
    case 2:
      new_node_10540217.dom = old_node_10540218.dom;
      if ((result_10540222 == 2)) {
      update_styles_10485229(new_node_10540217, old_node_10540218);
      update_attributes_10495052(new_node_10540217, old_node_10540218);
      if ((old_node_10540218.kind == 0)) {
      old_node_10540218.text = new_node_10540217.text;
      old_node_10540218.dom.nodeValue = new_node_10540217.text;
      }
      
      }
      
        if (!(((new_node_10540217.events != null ? new_node_10540217.events.length : 0) == 0))) Tmp1 = true; else {          Tmp1 = !(((old_node_10540218.events != null ? old_node_10540218.events.length : 0) == 0));        }      if (Tmp1) {
      merge_events_10505014(new_node_10540217, old_node_10540218, kxi_10540221);
      }
      
      var new_length_10550201 = len_9815014(new_node_10540217);
      var old_length_10550202 = len_9815014(old_node_10540218);
      if (((new_length_10550201 == 0) && (old_length_10550202 == 0))) {
      break BeforeRet;
      }
      
      var min_length_10550203 = nimMin(new_length_10550201, old_length_10550202);
      if (!((old_node_10540218.kind == new_node_10540217.kind))) {
      failed_assert_impl_102680(makeNimstrLit("karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var common_prefix_10560202 = 0;
      if ((old_node_10540218.kind == 5)) Tmp3 = true; else {        Tmp3 = (old_node_10540218.kind == 3);      }      if (Tmp3) Tmp2 = true; else {        Tmp2 = (old_node_10540218.kind == 4);      }      var is_special_10560221 = Tmp2;
      L4: do {
          L5: while (true) {
          if (!(common_prefix_10560202 < min_length_10550203)) break L5;
            var old_lenHEX60gensym10560245_10565001 = kxi_10540221.patchLen;
            var old_len_vHEX60gensym10560246_10565002 = kxi_10540221.patchLenV;
            if (!((common_prefix_10560202 < len_9815014(new_node_10540217)))) {
            failed_assert_impl_102680(makeNimstrLit("karax.nim(427, 14) `commonPrefix < newNode.len` "));
            }
            
            if (!((common_prefix_10560202 < len_9815014(old_node_10540218)))) {
            failed_assert_impl_102680(makeNimstrLit("karax.nim(428, 14) `commonPrefix < oldNode.len` "));
            }
            
            if (is_special_10560221) {
            Tmp6 = diff_10540215(HEX5BHEX5D_9815036(new_node_10540217, common_prefix_10560202), HEX5BHEX5D_9815036(old_node_10540218, common_prefix_10560202), parent_10540219, current_10540220, kxi_10540221);
            }
            else {
            Tmp6 = diff_10540215(HEX5BHEX5D_9815036(new_node_10540217, common_prefix_10560202), HEX5BHEX5D_9815036(old_node_10540218, common_prefix_10560202), current_10540220, current_10540220.childNodes[chckIndx(common_prefix_10560202, 0, (current_10540220.childNodes != null ? current_10540220.childNodes.length : 0)+0-1)-0], kxi_10540221);
            }
            
            var rHEX60gensym10560247_10585205 = Tmp6;
            switch (rHEX60gensym10560247_10585205) {
            case 3:
            case 0:
            case 2:
              HEX5BHEX5DHEX3D_9815054(new_node_10540217, common_prefix_10560202, HEX5BHEX5D_9815036(old_node_10540218, common_prefix_10560202));
              common_prefix_10560202 = addInt(common_prefix_10560202, 1);
              break;
            case 4:
              add_patch_v_10510062(kxi_10540221, old_node_10540218, common_prefix_10560202, HEX5BHEX5D_9815036(new_node_10540217, common_prefix_10560202));
              common_prefix_10560202 = addInt(common_prefix_10560202, 1);
              result_10540222 = 4;
              break;
            case 1:
              kxi_10540221.patchLen = old_lenHEX60gensym10560245_10565001;
              kxi_10540221.patchLenV = old_len_vHEX60gensym10560246_10565002;
              if (!((result_10540222 == 1))) {
              result_10540222 = rHEX60gensym10560247_10585205;
              }
              
              break L4;
              break;
            }
          }
      } while(false);
      var old_pos_10590006 = subInt(old_length_10550202, 1);
      var new_pos_10590007 = subInt(new_length_10550201, 1);
      L7: do {
          L8: while (true) {
            if (!(common_prefix_10560202 <= old_pos_10590006)) Tmp9 = false; else {              Tmp9 = (common_prefix_10560202 <= new_pos_10590007);            }          if (!Tmp9) break L8;
            var old_lenHEX60gensym10600001_10605001 = kxi_10540221.patchLen;
            var old_len_vHEX60gensym10600002_10605002 = kxi_10540221.patchLenV;
            if (!((new_pos_10590007 < len_9815014(new_node_10540217)))) {
            failed_assert_impl_102680(makeNimstrLit("karax.nim(427, 14) `newPos < newNode.len` "));
            }
            
            if (!((old_pos_10590006 < len_9815014(old_node_10540218)))) {
            failed_assert_impl_102680(makeNimstrLit("karax.nim(428, 14) `oldPos < oldNode.len` "));
            }
            
            if (is_special_10560221) {
            Tmp10 = diff_10540215(HEX5BHEX5D_9815036(new_node_10540217, new_pos_10590007), HEX5BHEX5D_9815036(old_node_10540218, old_pos_10590006), parent_10540219, current_10540220, kxi_10540221);
            }
            else {
            Tmp10 = diff_10540215(HEX5BHEX5D_9815036(new_node_10540217, new_pos_10590007), HEX5BHEX5D_9815036(old_node_10540218, old_pos_10590006), current_10540220, current_10540220.childNodes[chckIndx(old_pos_10590006, 0, (current_10540220.childNodes != null ? current_10540220.childNodes.length : 0)+0-1)-0], kxi_10540221);
            }
            
            var rHEX60gensym10600003_10625205 = Tmp10;
            switch (rHEX60gensym10600003_10625205) {
            case 3:
            case 0:
            case 2:
              HEX5BHEX5DHEX3D_9815054(new_node_10540217, new_pos_10590007, HEX5BHEX5D_9815036(old_node_10540218, old_pos_10590006));
              old_pos_10590006 = subInt(old_pos_10590006, 1);
              new_pos_10590007 = subInt(new_pos_10590007, 1);
              break;
            case 4:
              add_patch_v_10510062(kxi_10540221, old_node_10540218, old_pos_10590006, HEX5BHEX5D_9815036(new_node_10540217, new_pos_10590007));
              old_pos_10590006 = subInt(old_pos_10590006, 1);
              new_pos_10590007 = subInt(new_pos_10590007, 1);
              result_10540222 = 4;
              break;
            case 1:
              kxi_10540221.patchLen = old_lenHEX60gensym10600001_10605001;
              kxi_10540221.patchLenV = old_len_vHEX60gensym10600002_10605002;
              if (!((result_10540222 == 1))) {
              result_10540222 = rHEX60gensym10600003_10625205;
              }
              
              break L7;
              break;
            }
          }
      } while(false);
      var pos_10630006 = addInt(nimMin(old_pos_10590006, new_pos_10590007), 1);
      L11: do {
        var i_10630012 = 0;
        var colontmp__11086221 = 0;
        colontmp__11086221 = subInt(pos_10630006, 1);
        var res_11086222 = common_prefix_10560202;
        L12: do {
            L13: while (true) {
            if (!(res_11086222 <= colontmp__11086221)) break L13;
              i_10630012 = res_11086222;
              var r_10630013 = diff_10540215(HEX5BHEX5D_9815036(new_node_10540217, i_10630012), HEX5BHEX5D_9815036(old_node_10540218, i_10630012), current_10540220, current_10540220.childNodes[chckIndx(i_10630012, 0, (current_10540220.childNodes != null ? current_10540220.childNodes.length : 0)+0-1)-0], kxi_10540221);
              if ((r_10630013 == 4)) {
              add_patch_v_10510062(kxi_10540221, old_node_10540218, i_10630012, HEX5BHEX5D_9815036(new_node_10540217, i_10630012));
              }
              else {
              if (!((r_10630013 == 1))) {
              HEX5BHEX5DHEX3D_9815054(new_node_10540217, i_10630012, HEX5BHEX5D_9815036(old_node_10540218, i_10630012));
              }
              }
              res_11086222 = addInt(res_11086222, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(old_pos_10590006, 1) == old_length_10550202)) {
      L14: do {
        var i_10635011 = 0;
        var res_11086228 = pos_10630006;
        L15: do {
            L16: while (true) {
            if (!(res_11086228 <= new_pos_10590007)) break L16;
              i_10635011 = res_11086228;
              add_patch_10505214(kxi_10540221, 2, current_10540220, null, HEX5BHEX5D_9815036(new_node_10540217, i_10635011));
              result_10540222 = 4;
              res_11086228 = addInt(res_11086228, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_10635012 = current_10540220.childNodes[chckIndx(addInt(old_pos_10590006, 1), 0, (current_10540220.childNodes != null ? current_10540220.childNodes.length : 0)+0-1)-0];
        L17: do {
          var i_10635018 = 0;
          var res_11086234 = pos_10630006;
          L18: do {
              L19: while (true) {
              if (!(res_11086234 <= new_pos_10590007)) break L19;
                i_10635018 = res_11086234;
                add_patch_10505214(kxi_10540221, 3, current_10540220, before_10635012, HEX5BHEX5D_9815036(new_node_10540217, i_10635018));
                result_10540222 = 4;
                res_11086234 = addInt(res_11086234, 1);
              }
          } while(false);
        } while(false);
      }
      
      L20: do {
        var i_10635024 = 0;
        var res_11086240 = pos_10630006;
        L21: do {
            L22: while (true) {
            if (!(res_11086240 <= old_pos_10590006)) break L22;
              i_10635024 = res_11086240;
              add_patch_10505214(kxi_10172283[0], 4, null, null, HEX5BHEX5D_9815036(old_node_10540218, i_10635024));
              add_patch_10505214(kxi_10540221, 1, current_10540220, current_10540220.childNodes[chckIndx(i_10635024, 0, (current_10540220.childNodes != null ? current_10540220.childNodes.length : 0)+0-1)-0], null);
              result_10540222 = 4;
              res_11086240 = addInt(res_11086240, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      add_patch_10505214(kxi_10172283[0], 4, null, null, old_node_10540218);
      add_patch_10505214(kxi_10540221, 0, parent_10540219, current_10540220, new_node_10540217);
      break;
    case 4:
      if (true) {
      failed_assert_impl_102680(makeNimstrLit("karax.nim(491, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  return result_10540222;

}
function apply_components_10655429(kxi_10655431) {
            var Tmp3;

    var i_10655433 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_10655433 < (kxi_10655431.components != null ? kxi_10655431.components.length : 0))) break L2;
          var x_10655439 = kxi_10655431.components[chckIndx(i_10655433, 0, (kxi_10655431.components != null ? kxi_10655431.components.length : 0)+0-1)-0].oldNode;
          var new_node_10655440 = kxi_10655431.components[chckIndx(i_10655433, 0, (kxi_10655431.components != null ? kxi_10655431.components.length : 0)+0-1)-0].newNode;
            if (!!((x_10655439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_10655439.changedImpl(x_10655439, new_node_10655440);            }          if (Tmp3) {
          var current_10660201 = kxi_10655431.components[chckIndx(i_10655433, 0, (kxi_10655431.components != null ? kxi_10655431.components.length : 0)+0-1)-0].current;
          var parent_10660202 = kxi_10655431.components[chckIndx(i_10655433, 0, (kxi_10655431.components != null ? kxi_10655431.components.length : 0)+0-1)-0].parent;
          x_10655439.updatedImpl(x_10655439, new_node_10655440);
          var old_expanded_10660203 = x_10655439.expanded;
          x_10655439.expanded = x_10655439.renderImpl(x_10655439);
          x_10655439.renderedVersion = x_10655439.version;
          if ((old_expanded_10660203 == null)) {
          add_patch_10505214(kxi_10172283[0], 4, null, null, x_10655439);
          add_patch_10505214(kxi_10655431, 0, parent_10660202, current_10660201, x_10655439.expanded);
          }
          else {
            var res_10665201 = diff_10540215(x_10655439.expanded, old_expanded_10660203, parent_10660202, current_10660201, kxi_10655431);
            if ((res_10665201 == 4)) {
            }
            else {
            if (!((res_10665201 == 1))) {
            x_10655439.expanded = old_expanded_10660203;
            if (!(!((old_expanded_10660203.dom == null)))) {
            failed_assert_impl_102680(makeNimstrLit("karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
            }
            
            }
            else {
              if (!(!((x_10655439.expanded.dom == null)))) {
              failed_assert_impl_102680(makeNimstrLit("karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
              }
              
            }
            }
          }
          
          }
          
          i_10655433 = addInt(i_10655433, 1);
        }
    } while(false);
    if (kxi_10655431.components === null) kxi_10655431.components = [];
               if (kxi_10655431.components.length < 0) { for (var i=kxi_10655431.components.length;i<0;++i) kxi_10655431.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_10655431.components.length = 0; };

  
}
function apply_patch_10515047(kxi_10515049) {
    L1: do {
      var i_10515057 = 0;
      var i_11086282 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11086282 < kxi_10515049.patchLen)) break L3;
            i_10515057 = i_11086282;
            var p_10515058 = nimCopy(null, kxi_10515049.patches[chckIndx(i_10515057, 0, (kxi_10515049.patches != null ? kxi_10515049.patches.length : 0)+0-1)-0], NTI10172209);
            switch (p_10515058.k) {
            case 0:
              var nn_10515059 = vnode_to_dom_10280169(p_10515058.n, kxi_10515049);
              if ((p_10515058.parent == null)) {
              replace_by_id_10435074(kxi_10515049.rootId, nn_10515059);
              }
              else {
              p_10515058.parent.replaceChild(nn_10515059, p_10515058.current);
              }
              
              break;
            case 1:
              p_10515058.parent.removeChild(p_10515058.current);
              break;
            case 2:
              var nn_10515068 = vnode_to_dom_10280169(p_10515058.n, kxi_10515049);
              p_10515058.parent.appendChild(nn_10515068);
              break;
            case 3:
              var nn_10515069 = vnode_to_dom_10280169(p_10515058.n, kxi_10515049);
              p_10515058.parent.insertBefore(nn_10515069, p_10515058.current);
              break;
            case 4:
              var n_10515070 = p_10515058.n;
              if (!((n_10515070.id == null))) {
              delete kxi_10515049.byId[n_10515070.id];
              }
              
              if ((n_10515070.kind == 5)) {
              var x_10520018 = n_10515070;
              if (!((x_10520018.onDetachImpl == null))) {
              x_10520018.onDetachImpl(x_10520018);
              }
              
              }
              
              if (!(kxi_10515049.surpressRedraws)) {
              n_10515070.dom = null;
              }
              
              break;
            }
            i_11086282 = addInt(i_11086282, 1);
          }
      } while(false);
    } while(false);
    kxi_10515049.patchLen = 0;
    L4: do {
      var i_10525013 = 0;
      var i_11086285 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_11086285 < kxi_10515049.patchLenV)) break L6;
            i_10525013 = i_11086285;
            var p_10525014 = nimCopy(null, kxi_10515049.patchesV[chckIndx(i_10525013, 0, (kxi_10515049.patchesV != null ? kxi_10515049.patchesV.length : 0)+0-1)-0], NTI10172211);
            HEX5BHEX5DHEX3D_9815054(p_10525014.parent, p_10525014.pos, p_10525014.newChild);
            if (!(!((p_10525014.newChild.dom == null)))) {
            failed_assert_impl_102680(makeNimstrLit("karax.nim(377, 12) `p.newChild.dom != nil` "));
            }
            
            i_11086285 = addInt(i_11086285, 1);
          }
      } while(false);
    } while(false);
    kxi_10515049.patchLenV = 0;

  
}
function dodraw_10755246(kxi_10755248) {
  BeforeRet: do {
    if ((kxi_10755248.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_10755253 = {hashPart: window.location.hash};
    var newtree_10755254 = kxi_10755248.renderer(rdata_10755253);
    kxi_10755248.runCount = addInt(kxi_10755248.runCount, 1);
    newtree_10755254.id = kxi_10755248.rootId;
    kxi_10755248.toFocus = null;
    if ((kxi_10755248.currentTree == null)) {
    var asdom_10755269 = vnode_to_dom_10280169(newtree_10755254, kxi_10755248);
    replace_by_id_10435074(kxi_10755248.rootId, asdom_10755269);
    }
    else {
      if (!(same_10420072(kxi_10755248.currentTree, document.getElementById(kxi_10755248.rootId), 0))) {
      failed_assert_impl_102680(makeNimstrLit("karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_10765201 = document.getElementById(kxi_10755248.rootId);
      diff_10540215(newtree_10755254, kxi_10755248.currentTree, null, olddom_10765201, kxi_10755248);
    }
    
    apply_components_10655429(kxi_10755248);
    apply_patch_10515047(kxi_10755248);
    kxi_10755248.currentTree = newtree_10755254;
    if (!(same_10420072(kxi_10755248.currentTree, document.getElementById(kxi_10755248.rootId), 0))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_10755248.postRenderCallback == null))) {
    kxi_10755248.postRenderCallback(rdata_10755253);
    }
    
    if (!((kxi_10755248.toFocus == null))) {
    kxi_10755248.toFocus.focus();
    }
    
    kxi_10755248.renderId = 0;
  } while (false);

  
}
function redraw_10780414(kxi_10780416) {
    function HEX3Aanonymous_10780601() {
        dodraw_10755246(kxi_10780416);

      
    }

    if ((kxi_10780416.renderId == 0)) {
    kxi_10780416.renderId = window.requestAnimationFrame(HEX3Aanonymous_10780601);
    }
    

  
}
function view_selector_11086137(view_11086139, no_redraw_11086140) {
    switch (view_11086139) {
    case 0:
      show_scan_seed_btn_11086074[0] = true;
      show_scanning_11086075[0] = true;
      show_cam_tools_11086076[0] = true;
      show_scan_result_11086077[0] = false;
      show_page2_11086083[0] = false;
      break;
    case 1:
      show_scan_seed_btn_11086074[0] = true;
      show_scanning_11086075[0] = true;
      show_cam_tools_11086076[0] = true;
      show_scan_result_11086077[0] = false;
      show_page2_11086083[0] = false;
      break;
    case 2:
      show_scan_seed_btn_11086074[0] = false;
      show_scanning_11086075[0] = true;
      show_cam_tools_11086076[0] = true;
      show_scan_result_11086077[0] = true;
      show_page2_11086083[0] = true;
      break;
    case 3:
      show_page2_11086083[0] = false;
      break;
    case 4:
      show_page2_11086083[0] = true;
      break;
    case 5:
      show_scan_result_11086077[0] = false;
      mnemonic_fulfill_11086086[0] = false;
      show_scan_seed_btn2_11086078[0] = true;
      show_scanning2_11086079[0] = true;
      show_cam_tools2_11086080[0] = true;
      show_scan_result2_11086081[0] = false;
      show_page1_11086082[0] = false;
      show_page2_11086083[0] = true;
      break;
    case 8:
      show_scan_seed_btn2_11086078[0] = false;
      show_scanning2_11086079[0] = true;
      show_cam_tools2_11086080[0] = true;
      show_scan_result2_11086081[0] = true;
      show_page3_11086084[0] = false;
      break;
    case 9:
      show_page3_11086084[0] = true;
      break;
    case 11:
      show_page3_11086084[0] = true;
      break;
    case 12:
      show_scan_result2_11086081[0] = false;
      key_card_fulfill_11086087[0] = false;
      passphrase_fulfill_11086088[0] = false;
      show_page1_11086082[0] = false;
      show_page2_11086083[0] = false;
      show_page3_11086084[0] = true;
      show_page4_11086085[0] = false;
      break;
    case 13:
      show_page1_11086082[0] = false;
      show_page2_11086083[0] = false;
      show_page3_11086084[0] = true;
      show_page4_11086085[0] = true;
      show_settings_11086093[0] = false;
      show_trade_logs_11086092[0] = true;
      break;
    case 14:
      show_page1_11086082[0] = false;
      show_page2_11086083[0] = false;
      show_page3_11086084[0] = true;
      show_page4_11086085[0] = true;
      show_trade_logs_11086092[0] = false;
      show_settings_11086093[0] = true;
      break;
    default: 
      break;
    }
    if (!(no_redraw_11086140)) {
    redraw_10780414(app_inst_11086027[0]);
    }
    

  
}
  jsViewSelector = view_selector_11086137;
  function setSupressRedraw(flag) {
    supress_redraw_11086089[0] = flag;
  }
  function getSupressRedraw() {
    return supress_redraw_11086089[0];
  }

function view_update_11086287() {
    if (!(supress_redraw_11086089[0])) {
    redraw_10780414(app_inst_11086027[0]);
    }
    

  
}
  var jsViewUpdate = view_update_11086287;

function HEX3Aanonymous_11110004(x_11110006) {
  var result_11110007 = null;

    result_11110007 = x_11110006;

  return result_11110007;

}
function HEX3Aanonymous_11135004(x_11135006) {
  var result_11135007 = null;

    result_11135007 = x_11135006;

  return result_11135007;

}
var seed_card_infos_11086417 = [null];
var editing_words_11086418 = [""];
var input_words_11086419 = [""];
var autocomplete_words_11086436 = [[]];
var chklist_11086444 = [null];
var prev_check_word_11086445 = [""];
var pass_phrase_11086446 = [""];
var bip39_11090004 = [coinlibs.bip39];
var bip39_wordlist_11100004 = [bip39_11090004[0].wordlists.japanese];
var wl_japanese_11125005 = [nimCopy(null, bip39_11090004[0].wordlists.japanese.map((HEX3Aanonymous_11110004)), NTI11100005)];
var wl_english_11150005 = [nimCopy(null, bip39_11090004[0].wordlists.english.map((HEX3Aanonymous_11135004)), NTI11125006)];
var wl_select_11150006 = [nimCopy(null, wl_japanese_11125005[0], NTI11100005)];
var wl_select_id_11150008 = [1];
function seed_to_keys_11155461() {
        var wallet = pastel.wallet;
  
    if ((current_import_type_11086050[0] == 0)) {
          wallet.setSeedCard(seed_card_infos_11086417[0]);
    
    }
    else {
    if ((current_import_type_11086050[0] == 1)) {
          wallet.setMnemonic(input_words_11086419[0], wl_select_id_11150008[0]);
    
    }
    }

  
}
function clear_sensitive_11150056() {
    seed_card_infos_11086417[0] = nimCopy(null, [], NTI11150072);
    editing_words_11086418[0] = "";
    input_words_11086419[0] = "";
    autocomplete_words_11086436[0] = nimCopy(null, [], NTI11150087);
    chklist_11086444[0] = nimCopy(null, [], NTI11150102);
    prev_check_word_11086445[0] = "";
    pass_phrase_11086446[0] = "";

  
}
  var jsSeedToKeys = seed_to_keys_11155461;
  var jsClearSensitive = clear_sensitive_11150056;

var key_card_val_11210235 = [""];
// https://github.com/gustf/js-levenshtein
var levenshtein = (function()
{
  function _min(d0, d1, d2, bx, ay)
  {
    return d0 < d1 || d2 < d1
        ? d0 > d2
            ? d2 + 1
            : d0 + 1
        : bx === ay
            ? d1
            : d1 + 1;
  }

  return function(a, b)
  {
    if (a === b) {
      return 0;
    }

    if (a.length > b.length) {
      var tmp = a;
      a = b;
      b = tmp;
    }

    var la = a.length;
    var lb = b.length;

    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {
      la--;
      lb--;
    }

    var offset = 0;

    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {
      offset++;
    }

    la -= offset;
    lb -= offset;

    if (la === 0 || lb < 3) {
      return lb;
    }

    var x = 0;
    var y;
    var d0;
    var d1;
    var d2;
    var d3;
    var dd;
    var dy;
    var ay;
    var bx0;
    var bx1;
    var bx2;
    var bx3;

    var vector = [];

    for (y = 0; y < la; y++) {
      vector.push(y + 1);
      vector.push(a.charCodeAt(offset + y));
    }

    var len = vector.length - 1;

    for (; x < lb - 3;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      bx1 = b.charCodeAt(offset + (d1 = x + 1));
      bx2 = b.charCodeAt(offset + (d2 = x + 2));
      bx3 = b.charCodeAt(offset + (d3 = x + 3));
      dd = (x += 4);
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        ay = vector[y + 1];
        d0 = _min(dy, d0, d1, bx0, ay);
        d1 = _min(d0, d1, d2, bx1, ay);
        d2 = _min(d1, d2, d3, bx2, ay);
        dd = _min(d2, d3, dd, bx3, ay);
        vector[y] = dd;
        d3 = d2;
        d2 = d1;
        d1 = d0;
        d0 = dy;
      }
    }

    for (; x < lb;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      dd = ++x;
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);
        d0 = dy;
      }
    }

    return dd;
  };
})();

function levens(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var similars = [];
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    similars.push(data[score]);
    if(result.length > 0 && score > 0.5) {
      break;
    }
    if((result.length == 0 && data[score].length <= 30) || (result.length + data[score].length) <= 7) {
      result = result.concat(data[score]);
    }
  }
  return result;
}
function levens_one(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    if(lev != 1) {
      continue;
    }
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    result = result.concat(data[score]);
  }
  return result;
}

var confirm_mnemonic_advanced_11305053 = [false];
  var send_balls_count = 0;
  var cur_calc_send_utxo = null;

  function conv_coin(uint64_val) {
    var strval = uint64_val.toString();
    var val = parseInt(strval, 10);
    if(val > Number.MAX_SAFE_INTEGER) {
      var d = strval.slice(-8).replace(/0+$/, '');
      var n = strval.substr(0, strval.length - 8);
      if(d.length > 0) {
        return n + '.' + d;
      } else {
        return n;
      }
    }
    return val / 100000000;
  }

  function resetSendBallCount() {
    send_balls_count = 0;
    cur_calc_send_utxo = null;
    $('#btn-utxo-count').text('...');
    pastel.utxoballs.setSend(0);
  }

  function check_amount_elm() {
    var amount_elm = $('#send-coins input[name="amount"]');
    var amount = amount_elm.val().trim();
    if(amount.length > 0) {
      amount = amount.replace(/,/g, '');
      var amounts = amount.split('.');
      if(amount.match(/^\d+(\.\d{1,8})?$/)) {
        amount_elm.closest('.field').removeClass('error warning');
        var value = '';
        if(amounts.length == 1) {
          if(amounts[0] != '0') {
            value = amounts[0] + '00000000';
          } else {
            value = amounts[0];
          }
        } else if(amounts.length == 2) {
          value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
        }
        if(value.length > 0) {
          setSendUtxo(value);
        } else {
          resetSendBallCount();
        }
      } else {
        amount_elm.closest('.field').addClass('error');
      }
    } else {
      amount_elm.closest('.field').removeClass('error warning');
      resetSendBallCount();
    }
  }

  function updateBallCount() {
    if(sendrecv_switch == 1) {
      check_amount_elm();
    }
  }
  pastel.utxoballs.updateSend(updateBallCount);

  function setSendUtxo(value) {
    var ret = pastel.wallet.calcSendUtxo(value);
    cur_calc_send_utxo = ret;
    var amount_elm = $('#send-coins input[name="amount"]');
    if(ret.err) {
      if(ret.all > ret.max) {
        $('#btn-utxo-count').text('>' + String(ret.max) + ' max');
        pastel.utxoballs.setSend(ret.max);
        send_balls_count = ret.max;
      } else {
        $('#btn-utxo-count').text('>' + String(ret.all) + ' all');
        pastel.utxoballs.setSend(ret.all);
        send_balls_count = ret.all;
      }
      amount_elm.closest('.field').removeClass('warning');
      amount_elm.closest('.field').addClass('error');
    } else {
      if(ret.count > ret.max) {
        $('#btn-utxo-count').text('>' + String(ret.max) + ' max');
        pastel.utxoballs.setSend(ret.max);
        send_balls_count = ret.max;
        amount_elm.closest('.field').removeClass('warning');
        amount_elm.closest('.field').addClass('error');
      } else {
        amount_elm.closest('.field').removeClass('error');
        if(ret.conf != null && ret.count > ret.conf && ret.count > 0) {
          amount_elm.closest('.field').addClass('warning');
        } else {
          amount_elm.closest('.field').removeClass('warning');
        }
        $('#btn-utxo-count').text((ret.sign == 0 ? '' : '≤') + String(ret.count) + (ret.count == ret.all ? ' all' : ''));
        pastel.utxoballs.setSend(ret.count);
        send_balls_count = ret.count;
      }
    }
  }

  function initSendForm() {
    $('#btn-send-clear').off('click').click(function() {
      if(!show_page4_11086085[0]) {
        $('#send-coins input[name="address"]').val('');
        $('#send-coins input[name="amount"]').val('');
        $('#send-coins input[name="address"]').closest('.field').removeClass('error');
        $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
        resetSendBallCount();
        uriOptions = [];
        jsViewSelector(12);
      }
      $(this).blur();
    });
    $('#btn-send-qrcode').off('click').click(function() {
      if(!show_page4_11086085[0]) {
        qrReaderModal.show(function(err, uri) {
          if(!err) {
            var data = bip21reader(uri);
            $('#send-coins input[name="address"]').val(data.address || '');
            if(data.amount != null) {
              $('#send-coins input[name="amount"]').val(data.amount || '');
            }
            uriOptions = [];
            for(var k in data) {
              var p = data[k];
              if(k == 'address' || k == 'amount') {
                continue;
              }
              var key = crlftab_to_html(k);
              key = key.charAt(0).toUpperCase() + key.slice(1);
              uriOptions.push({key: key, value: crlftab_to_html(p)});
            }
            check_amount_elm();
            jsViewSelector(12);
          } else {
            Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
          }
        });
      }
      $(this).blur();
    });
    $('#btn-send-lock').off('click').click(function() {
      var elm = $(this);
      var icon = elm.find('i');
      if(icon.hasClass('open')) {
        if(pastel.wallet && pastel.wallet.lockShieldedKeys()) {
          icon.removeClass('open');
          elm.attr('title', 'Locked');
          PhraseLock.notify_locked();
          PhraseLock.disableInactivity();
        }
        setTimeout(function() {
          elm.focus();
        }, 1000);
      } else {
        Notify.hide_all();
        PhraseLock.showPhraseInput(function(status) {
          if(status == PhraseLock.PLOCK_SUCCESS) {
            icon.addClass('open');
            elm.attr('title', __t('Unlocked'));
            PhraseLock.notify_unlocked();
            var locked_flag = false;
            PhraseLock.enableInactivity(function() {
              if(icon.hasClass('open')) {
                if(pastel.wallet && pastel.wallet.lockShieldedKeys()) {
                  locked_flag = true;
                }
              }
            }, function() {
              if(icon.hasClass('open') && locked_flag) {
                icon.removeClass('open');
                elm.attr('title', 'Locked');
                if(sendrecv_switch == 1) {
                  PhraseLock.notify_locked();
                } else {
                  sendrecv_switch_sendafter = function() {
                    PhraseLock.notify_locked();
                  }
                }
                PhraseLock.disableInactivity();
              }
            });
          } else if(status == PhraseLock.PLOCK_FAILED_QR) {
            Notify.show(__t('Error'), __t('Failed to unlock. Wrong key card was scanned.'), Notify.msgtype.error);
          } else if(status == PhraseLock.PLOCK_FAILED_PHRASE) {
            Notify.show(__t('Error'), __t('Failed to unlock. Passphrase is incorrect.'), Notify.msgtype.error);
          } else if(status == PhraseLock.PLOCK_FAILED_CAMERA) {
            Notify.show(__t('Error'), __t('Failed to unlock. Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
          }
          setTimeout(function() {
            elm.focus();
          }, 1000);
        });
      }
    });
    pastel.utxoballs.setSend(send_balls_count);

    $('#btn-utxo-plus').off('click').click(function() {
      $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
      var cur = cur_calc_send_utxo;
      if(cur) {
        if(cur.err) {
          cur.count = Math.min(cur.all, cur.max);
          cur.sign = 0;
          cur.err = 0;
        } else {
          if(cur.sign == 0) {
            cur.count++;
          } else {
            cur.sign = 0;
          }
        }
      } else {
        cur = {err: 0, count: 1, sign: 0};
        cur_calc_send_utxo = cur;
      }
      var sendval = pastel.wallet.calcSendValue(cur.count);
      cur.all = sendval.all;
      cur.max = sendval.max;
      cur.count = sendval.count;
      send_balls_count = cur.count;
      pastel.utxoballs.setSend(send_balls_count);
      $('#send-coins input[name="amount"]').val(conv_coin(sendval.value));
      if(sendval.conf != null && cur.count > sendval.conf && cur.count > 0) {
        $('#send-coins input[name="amount"]').closest('.field').addClass('warning');
      } else {
        $('#send-coins input[name="amount"]').closest('.field').removeClass('warning');
      }
      var exinfo = '';
      if(sendval.count == sendval.all) {
        exinfo = ' all';
      } else if(sendval.count == sendval.max) {
        exinfo = ' max';
      }
      $('#btn-utxo-count').text(String(sendval.count) + exinfo);
      $(this).blur();
    });
    $('#btn-utxo-minus').off('click').click(function() {
      $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
      var cur = cur_calc_send_utxo;
      if(cur) {
        if(cur.err) {
          cur.count = Math.min(cur.all, cur.max);
          cur.sign = 0;
          cur.err = 0;
        } else {
          if(cur.sign <= 0) {
            if(cur.count > 0) {
              cur.count--;
            }
          }
          cur.sign = 0;
        }
      } else {
        cur = {err: 0, count: 0, sign: 0};
        cur_calc_send_utxo = cur;
      }
      var sendval = pastel.wallet.calcSendValue(cur.count);
      cur.all = sendval.all;
      cur.max = sendval.max;
      cur.count = sendval.count;
      send_balls_count = cur.count;
      pastel.utxoballs.setSend(send_balls_count);
      $('#send-coins input[name="amount"]').val(conv_coin(sendval.value));
      if(sendval.conf != null && cur.count > sendval.conf && cur.count > 0) {
        $('#send-coins input[name="amount"]').closest('.field').addClass('warning');
      } else {
        $('#send-coins input[name="amount"]').closest('.field').removeClass('warning');
      }
      var exinfo = '';
      if(sendval.count == sendval.all) {
        exinfo = ' all';
      } else if(sendval.count == sendval.max) {
        exinfo = ' max';
      }
      $('#btn-utxo-count').text(String(sendval.count) + exinfo);
      $(this).blur();
    });
    var send_busy = false;
    $('#btn-tx-send').off('click').click(function() {
      if(send_busy) {
        return;
      }
      send_busy = true;
      var locked = PhraseLock.notify_if_need_unlock();
      if(!locked && pastel.wallet) {
        var address = String($('#send-coins input[name="address"]').val()).trim();
        var amount = String($('#send-coins input[name="amount"]').val()).trim();
        if(address.length == 0 || amount.length == 0) {
          var address_elm = $('#send-coins input[name="address"]').closest('.field');
          var amount_elm = $('#send-coins input[name="amount"]').closest('.field');
          var flag = true;
          var alert_count = 0;
          function alert_worker() {
            if(address.length == 0) {
              if(flag) {
                address_elm.addClass('error');
              } else {
                address_elm.removeClass('error');
              }
            }
            if(amount.length == 0) {
              if(flag) {
                amount_elm.addClass('error');
              } else {
                amount_elm.removeClass('error');
              }
            }
            alert_count++;
            if(alert_count < 4) {
              flag = !flag;
              setTimeout(alert_worker, 100);
            }
          }
          alert_worker();
          return;
        }
        amount = amount.replace(/,/g, '');
        var amounts = amount.split('.');
        if(amount.match(/^\d+(\.\d{1,8})?$/)) {
          var value = '';
          if(amounts.length == 1) {
            if(amounts[0] != '0') {
              value = amounts[0] + '00000000';
            } else {
              value = amounts[0];
            }
          } else if(amounts.length == 2) {
            value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
          }
          Notify.hide_all();
          var self = $(this);
          $('#btn-tx-send').addClass('loading');
          pastel.wallet.send(address, value, function(result) {
            var ErrSend = pastel.wallet.ERR_SEND;
            switch(result.err) {
            case ErrSend.SUCCESS:
              Notify.show('', __t('Coins sent successfully.'), Notify.msgtype.info);
              pastel.unspents_after_actions.push(function() {
                if(sendrecv_switch == 1) {
                  setSendUtxo(value);
                }
              });
              break;
            case ErrSend.FAILED:
              Notify.show(__t('Error'), __t('Failed to send coins.'), Notify.msgtype.error);
              break;
            case ErrSend.INVALID_ADDRESS:
              Notify.show(__t('Error'), __t('Address is invalid.'), Notify.msgtype.error);
              break;
            case ErrSend.INSUFFICIENT_BALANCE:
              Notify.show(__t('Error'), __t('Balance is insufficient.'), Notify.msgtype.error);
              break;
            case ErrSend.DUST_VALUE:
              if(value == '0') {
                Notify.show(__t('Error'), __t('Amount is zero.'), Notify.msgtype.error);
              } else {
                Notify.show(__t('Error'), __t('Amount is too small.'), Notify.msgtype.error);
              }
              break;
            case ErrSend.BUSY:
              Notify.show(__t('Error'), __t('Failed to send coins. Busy.'), Notify.msgtype.error);
              break;
            case ErrSend.TX_FAILED:
              var msg = '';
              if(result.res && result.res.message) {
                msg = '<br> [' + result.res.message + ']';
              }
              Notify.show(__t('Error'), __t('Failed to send coins.') + msg, Notify.msgtype.error);
              break;
            case ErrSend.TX_TIMEOUT:
              Notify.show(__t('Warning'), __t('Server is not responding. Coins may have been sent.'), Notify.msgtype.warning);
              break;
            case ErrSend.SERVER_ERROR:
              Notify.show(__t('Error'), __t('Failed to send coins. Server error.'), Notify.msgtype.error);
              break;
            case ErrSend.SERVER_TIMEOUT:
              Notify.show(__t('Error'), __t('Failed to send coins. Server is not responding.'), Notify.msgtype.error);
              break;
            default:
              Notify.show(__t('Error'), __t('Failed to send coins.'), Notify.msgtype.error);
            }
            $('#btn-tx-send').removeClass('loading');
            self.blur();
            send_busy = false;
          });
        } else {
          if(amounts.length > 1 && amounts[1].length > 8) {
            Notify.show(__t('Error'), __t('Amount is invalid. The decimal places is too long. Please set it 8 or less.'), Notify.msgtype.error);
          } else {
            Notify.show(__t('Error'), __t('Amount is invalid.'), Notify.msgtype.error);
          }
          send_busy = false;
          $(this).blur();
        }
      } else {
        $('#btn-send-lock').focus();
        send_busy = false;
      }
    });
  }

  var sendrecv_switch = 0;
  var sendrecv_switch_busy = false;
  var sendrecv_switch_tval;
  var sendrecv_last = null;
  var sendrecv_wait = 0;
  var sendrecv_switch_sendafter = function() {}
  function send_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 2) {
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          $('#send-coins').transition({
            animation: 'fade down',
            onComplete : function() {
              sendrecv_last = 1;
              sendrecv_switch_busy = false;
              sendrecv_switch_sendafter();
            }
          });
          initSendForm();
        }
      });
    } else {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 1;
          sendrecv_switch_busy = false;
          sendrecv_switch_sendafter();
        }
      });
      initSendForm();
    }
  }
  function recv_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 1) {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          showRecvAddress(function() {
            $('#receive-address').transition({
              animation: 'fade down',
              onComplete : function() {
                showRecvAddressAfterEffect();
                sendrecv_last = 2;
                sendrecv_switch_busy = false;
              }
            });
          });
        }
      });
    } else {
      showRecvAddress(function() {
        $('#receive-address').transition({
          animation: 'fade down',
          onComplete : function() {
            showRecvAddressAfterEffect();
            sendrecv_last = 2;
            sendrecv_switch_busy = false;
          }
        });
      });
    }
  }
  function reset_switch(switch_id) {
    if(!$('#send-coins').hasClass('hidden') && (switch_id == null || switch_id == 1)) {
      sendrecv_switch_busy = true;
      if(switch_id == 1) {
        pastel.utxoballs.setSend(0);
      }
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
    if(!$('#receive-address').hasClass('hidden') && (switch_id == null || switch_id == 2)) {
      sendrecv_switch_busy = true;
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
  }
  function sendrecv_switch_worker() {
    if(sendrecv_switch_busy) {
      sendrecv_switch_tval = setTimeout(function() {
        sendrecv_wait++;
        if(sendrecv_wait < 300) {
          sendrecv_switch_worker();
        } else {
          sendrecv_switch_busy = false;
        }
      }, 50);
      return;
    }
    sendrecv_wait = 0;
    if(sendrecv_last == sendrecv_switch) {
      return;
    }
    if(sendrecv_switch == 1) {
      send_switch();
    } else if(sendrecv_switch == 2) {
      recv_switch();
    } else {
      reset_switch();
    }
  }
  function sendrecv_select(val) {
    clearTimeout(sendrecv_switch_tval);
    if(sendrecv_switch == 1 && val != 1) {
      pastel.utxoballs.setSend(0);
    }
    sendrecv_switch = val;
    sendrecv_switch_worker();
  }

  function enable_caret_browsing(elm) {
    elm.find('.tabindex:not(:hidden), button:not(:hidden), a:not(:hidden), textarea:not(:hidden), input:not(:hidden)').each(function() {
      $(this).attr('tabindex', $(this).data('tabindex') || 0);
    });
    $('#selectlang .tabindex, #receive-address .tabindex').each(function() {
      $(this).attr('tabindex', $(this).data('tabindex') || 0);
    });
  }
  function disable_caret_browsing(elm) {
    elm.find('.tabindex:not(:hidden), button:not(:hidden), a:not(:hidden), textarea:not(:hidden), input:not(:hidden)').each(function() {
      $(this).attr('tabindex', -1);
    });
    $('#selectlang .tabindex, #receive-address .tabindex').each(function() {
      $(this).attr('tabindex', -1);
    });
  }

  var uriOptions = [];

function new_seq_10785012(len_10785015) {
  var result_10785017 = null;

    result_10785017 = new Array(len_10785015); for (var i=0;i<len_10785015;++i) {result_10785017[i]={k: 0, parent: null, current: null, n: null};}
  return result_10785017;

}
function new_seq_10785064(len_10785067) {
  var result_10785069 = null;

    result_10785069 = new Array(len_10785067); for (var i=0;i<len_10785067;++i) {result_10785069[i]={parent: null, newChild: null, pos: 0};}
  return result_10785069;

}
function init_10780646(ev_10780648) {
    function HEX3Aanonymous_10780649() {
        dodraw_10755246(kxi_10172283[0]);

      
    }

    kxi_10172283[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_10780649);

  
}
function set_initializer_10790032(renderer_10790037, root_10790038, client_post_render_callback_10790042) {
  var result_10790043 = null;

    if (!((root_10790038 == null))) {
    result_10790043 = {rootId: root_10790038, renderer: renderer_10790037, postRenderCallback: client_post_render_callback_10790042, patches: new_seq_10785012(60), patchesV: new_seq_10785064(30), components: [], surpressRedraws: true, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_10172283[0] = result_10790043;
    window.onload = init_10780646;
    }
    

  return result_10790043;

}
function new_vnode_9825428(kind_9825430) {
  var result_9825431 = null;

    result_9825431 = {kind: kind_9825430, index: -1, m_type: NTI9730031, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_9825431;

}
function add_9815072(parent_9815074, kid_9815075) {
    if (parent_9815074.kids != null) { parent_9815074.kids.push(kid_9815075); } else { parent_9815074.kids = [kid_9815075]; };

  
}
function tree_9825445(kind_9825447, kids_9825449) {
  var result_9825450 = null;

    result_9825450 = new_vnode_9825428(kind_9825447);
    L1: do {
      var k_9825481 = null;
      var i_12155234 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12155234 < (kids_9825449 != null ? kids_9825449.length : 0))) break L3;
            k_9825481 = kids_9825449[chckIndx(i_12155234, 0, (kids_9825449 != null ? kids_9825449.length : 0)+0-1)-0];
            add_9815072(result_9825450, k_9825481);
            i_12155234 = addInt(i_12155234, 1);
          }
      } while(false);
    } while(false);

  return result_9825450;

}
function text_9825548(s_9825550) {
  var result_9825551 = null;

    result_9825551 = {kind: 0, text: toJSStr(s_9825550), index: -1, m_type: NTI9730031, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_9825551;

}
function text_9825601(s_9825603) {
  var result_9825604 = null;

    result_9825604 = {kind: 0, text: s_9825603, index: -1, m_type: NTI9730031, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_9825604;

}
function add_event_listener_9830014(n_9830016, event_9830017, handler_9830018) {
    if (n_9830016.events != null) { n_9830016.events.push({Field0: event_9830017, Field1: handler_9830018, Field2: null}); } else { n_9830016.events = [{Field0: event_9830017, Field1: handler_9830018, Field2: null}]; };

  
}
function add_event_handler_10790154(n_10790156, k_10790157, action_10790160, kxi_10790161) {
    function wrapper_10790162(ev_10790164, n_10790165) {
        action_10790160();
        if (!(kxi_10790161.surpressRedraws)) {
        redraw_10780414(kxi_10790161);
        }
        

      
    }

    add_event_listener_9830014(n_10790156, k_10790157, wrapper_10790162);

  
}
function import_selector_11086315(import_type_11086317) {
    function HEX3Aanonymous_11086321() {
              qrReader.hide();
    
        current_import_type_11086050[0] = import_type_11086317;
        if ((current_import_type_11086050[0] == 0)) {
        show_page2_11086083[0] = show_scan_result_11086077[0];
        }
        else {
        if ((current_import_type_11086050[0] == 1)) {
        show_page2_11086083[0] = mnemonic_fulfill_11086086[0];
        }
        }
        if ((current_import_type_11086050[0] == 0)) {
                $('#seedselector').removeClass('grey').addClass('olive');
        $('#mnemonicselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#mnemonicselector').removeClass('grey').addClass('olive');
        $('#seedselector').removeClass('olive').addClass('grey');
      
        }
        
        view_update_11086287();

      
    }

  var result_11086320 = null;

    result_11086320 = HEX3Aanonymous_11086321;

  return result_11086320;

}
function set_attr_9765105(n_9765107, key_9765108, val_9765109) {
  BeforeRet: do {
    if (((n_9765107.attrs != null ? n_9765107.attrs.length : 0) == 0)) {
    n_9765107.attrs = nimCopy(null, [key_9765108, val_9765109], NTI9765125);
    }
    else {
      L1: do {
        var i_9765138 = 0;
        var colontmp__12155278 = 0;
        colontmp__12155278 = subInt((n_9765107.attrs != null ? n_9765107.attrs.length : 0), 2);
        var res_12155279 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_12155279 <= colontmp__12155278)) break L3;
              i_9765138 = res_12155279;
              if ((n_9765107.attrs[chckIndx(i_9765138, 0, (n_9765107.attrs != null ? n_9765107.attrs.length : 0)+0-1)-0] == key_9765108)) {
              n_9765107.attrs[chckIndx(addInt(i_9765138, 1), 0, (n_9765107.attrs != null ? n_9765107.attrs.length : 0)+0-1)-0] = val_9765109;
              break BeforeRet;
              }
              
              res_12155279 = addInt(res_12155279, 2);
            }
        } while(false);
      } while(false);
      if (n_9765107.attrs != null) { n_9765107.attrs.push(key_9765108); } else { n_9765107.attrs = [key_9765108]; };
      if (n_9765107.attrs != null) { n_9765107.attrs.push(val_9765109); } else { n_9765107.attrs = [val_9765109]; };
    }
    
  } while (false);

  
}
function to_int_26493(f_26495) {
    var Tmp1;

  var result_26496 = 0;

    if ((0.0 <= f_26495)) {
    Tmp1 = (((f_26495 + 5.0000000000000000e-01))|0);
    }
    else {
    Tmp1 = (((f_26495 - 5.0000000000000000e-01))|0);
    }
    
    result_26496 = Tmp1;

  return result_26496;

}
function to_float_26459(i_26461) {
  var result_26462 = 0.0;

    result_26462 = i_26461;

  return result_26462;

}
function HEX2F_325648(x_325650, y_325651) {
  var result_325652 = 0.0;

    result_325652 = (to_float_26459(x_325650) / to_float_26459(y_325651));

  return result_325652;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6253, name: null, trace: null, up: null}, "RangeError");

  
}
function HEX5BHEX5D_2060283(s_2060287, x_2060289) {
  var result_2060290 = null;

    var a_2060401 = x_2060289.a;
    var l_2060601 = addInt(subInt(x_2060289.b, a_2060401), 1);
    result_2060290 = nimCopy(null, mnewString(chckRange(l_2060601, 0, 2147483647)), NTI112);
    L1: do {
      var i_2060609 = 0;
      var i_12155290 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12155290 < l_2060601)) break L3;
            i_2060609 = i_12155290;
            result_2060290[chckIndx(i_2060609, 0, (result_2060290 != null ? result_2060290.length : 0)+0-1)-0] = s_2060287[chckIndx(addInt(i_2060609, a_2060401), 0, (s_2060287 != null ? s_2060287.length : 0)+0-1)-0];
            i_12155290 = addInt(i_12155290, 1);
          }
      } while(false);
    } while(false);

  return result_2060290;

}
function HEX2EHEX2E_2060220(a_2060225, b_2060227) {
  var result_2060229 = {a: 0, b: 0};

    nimCopy(result_2060229, {a: a_2060225, b: b_2060227}, NTI1181907);

  return result_2060229;

}
function HEX5BHEX5D_4510068(s_4510072, x_4510074) {
  var result_4510075 = null;

    var a_4510201 = x_4510074.a;
    var l_4510401 = addInt(subInt(subInt((s_4510072 != null ? s_4510072.length : 0), x_4510074.b), a_4510201), 1);
    result_4510075 = nimCopy(null, mnewString(chckRange(l_4510401, 0, 2147483647)), NTI112);
    L1: do {
      var i_4510409 = 0;
      var i_12155298 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12155298 < l_4510401)) break L3;
            i_4510409 = i_12155298;
            result_4510075[chckIndx(i_4510409, 0, (result_4510075 != null ? result_4510075.length : 0)+0-1)-0] = s_4510072[chckIndx(addInt(i_4510409, a_4510201), 0, (s_4510072 != null ? s_4510072.length : 0)+0-1)-0];
            i_12155298 = addInt(i_12155298, 1);
          }
      } while(false);
    } while(false);

  return result_4510075;

}
function HEX2EHEX2E_4510001(a_4510006, b_4510008) {
  var result_4510014 = {a: 0, b: 0};

    nimCopy(result_4510014, {a: a_4510006, b: b_4510008}, NTI4510011);

  return result_4510014;

}
function add_event_handler_10790118(n_10790120, k_10790121, action_10790122, kxi_10790123) {
    function wrapper_10790124(ev_10790126, n_10790127) {
        action_10790122(ev_10790126, n_10790127);
        if (!(kxi_10790123.surpressRedraws)) {
        redraw_10780414(kxi_10790123);
        }
        

      
    }

    add_event_listener_9830014(n_10790120, k_10790121, wrapper_10790124);

  
}
function delete_11150124(x_11150129, x_11150129_Idx, i_11150130) {
    x_11150129[x_11150129_Idx].splice(i_11150130, 1);

  
}
function remove_seed_card_11150116(idx_11150118) {
    function HEX3Aanonymous_11150122() {
        delete_11150124(seed_card_infos_11086417, 0, chckRange(idx_11150118, 0, 2147483647));
        if (((seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0) == 0)) {
        view_selector_11086137(1, false);
        }
        else {
        view_update_11086287();
        }
        

      
    }

  var result_11150121 = null;

    result_11150121 = HEX3Aanonymous_11150122;

  return result_11150121;

}
function seed_card_11430089(card_info_11430091, idx_11430092) {
    var Tmp1;
    function HEX3Aanonymous_11535002(ev_11535004, n_11535005) {
        seed_card_infos_11086417[0][chckIndx(idx_11430092, 0, (seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0)+0-1)-0].sv = value_9730126(n_11535005);

      
    }

  var result_11430093 = null;

    var tmp_11430094 = tree_9825445(43, []);
    tmp_11430094.class = "ui card seed-card";
    var tmp_11430095 = tree_9825445(43, []);
    tmp_11430095.class = "image";
    var tmp_11430096 = tree_9825445(43, []);
    tmp_11430096.class = "seed-qrcode";
    set_attr_9765105(tmp_11430096, "data-orig", card_info_11430091.orig);
    var tmp_11430097 = tree_9825445(84, []);
    set_attr_9765105(tmp_11430097, "width", "188");
    set_attr_9765105(tmp_11430097, "height", "188");
    add_9815072(tmp_11430096, tmp_11430097);
    add_9815072(tmp_11430095, tmp_11430096);
    add_9815072(tmp_11430094, tmp_11430095);
    var tmp_11430098 = tree_9825445(43, []);
    tmp_11430098.class = "content";
    if (!((card_info_11430091.tag == null))) {
    var tmp_11430099 = tree_9825445(43, []);
    tmp_11430099.class = "ui tag label mini tag";
    add_9815072(tmp_11430099, text_9825601(card_info_11430091.tag));
    add_9815072(tmp_11430098, tmp_11430099);
    }
    
    var tmp_11430100 = tree_9825445(43, []);
    tmp_11430100.class = "header";
    add_9815072(tmp_11430100, text_9825601(translate_10867372("Seed")));
    add_9815072(tmp_11430098, tmp_11430100);
    var tmp_11430101 = tree_9825445(43, []);
    tmp_11430101.class = "meta";
    var tmp_11430102 = tree_9825445(70, []);
    tmp_11430102.class = "date";
    if (!((card_info_11430091.gen == null))) {
    Tmp1 = card_info_11430091.gen;
    }
    else {
    Tmp1 = translate_10867372("unknown");
    }
    
    add_9815072(tmp_11430102, text_9825601(Tmp1));
    add_9815072(tmp_11430101, tmp_11430102);
    add_9815072(tmp_11430098, tmp_11430101);
    var clen_11455001 = (card_info_11430091.seed != null ? card_info_11430091.seed.length : 0);
    if ((0 < clen_11455001)) {
    var half_11460001 = to_int_26493(HEX2F_325648(clen_11455001, 2));
    var seed_11460002 = cstrToNimstr(card_info_11430091.seed);
    var seed_upper_11465241 = HEX5BHEX5D_2060283(seed_11460002, HEX2EHEX2E_2060220(0, subInt(half_11460001, 1)));
    var seed_lower_11475035 = HEX5BHEX5D_4510068(seed_11460002, HEX2EHEX2E_4510001(half_11460001, 1));
    seed_upper_11465241 = nimCopy(null, (HEX5BHEX5D_2060283(seed_upper_11465241, HEX2EHEX2E_2060220(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_upper_11465241, HEX2EHEX2E_2060220(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_upper_11465241, HEX2EHEX2E_2060220(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_upper_11465241, HEX2EHEX2E_2060220(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_upper_11465241, HEX2EHEX2E_2060220(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_4510068(seed_upper_11465241, HEX2EHEX2E_4510001(20, 1)) || []), NTI112);
    seed_lower_11475035 = nimCopy(null, (HEX5BHEX5D_2060283(seed_lower_11475035, HEX2EHEX2E_2060220(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_lower_11475035, HEX2EHEX2E_2060220(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_lower_11475035, HEX2EHEX2E_2060220(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_lower_11475035, HEX2EHEX2E_2060220(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_2060283(seed_lower_11475035, HEX2EHEX2E_2060220(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_4510068(seed_lower_11475035, HEX2EHEX2E_4510001(20, 1)) || []), NTI112);
    var tmp_11430103 = tree_9825445(43, []);
    tmp_11430103.class = "seed-body";
    var tmp_11430104 = tree_9825445(43, []);
    tmp_11430104.class = "seed";
    add_9815072(tmp_11430104, text_9825548(seed_upper_11465241));
    add_9815072(tmp_11430103, tmp_11430104);
    var tmp_11430105 = tree_9825445(43, []);
    tmp_11430105.class = "seed";
    add_9815072(tmp_11430105, text_9825548(seed_lower_11475035));
    add_9815072(tmp_11430103, tmp_11430105);
    add_9815072(tmp_11430098, tmp_11430103);
    }
    else {
      var tmp_11430106 = tree_9825445(43, []);
      tmp_11430106.class = "seed-body";
      clen_11455001 = (card_info_11430091.orig != null ? card_info_11430091.orig.length : 0);
      if ((20 < clen_11455001)) {
      var half_11500001 = to_int_26493(HEX2F_325648(clen_11455001, 2));
      var orig_11500002 = cstrToNimstr(card_info_11430091.orig);
      var tmp_11430107 = tree_9825445(43, []);
      tmp_11430107.class = "seed";
      add_9815072(tmp_11430107, text_9825548(HEX5BHEX5D_2060283(orig_11500002, HEX2EHEX2E_2060220(0, subInt(half_11500001, 1)))));
      add_9815072(tmp_11430106, tmp_11430107);
      var tmp_11430108 = tree_9825445(43, []);
      tmp_11430108.class = "seed";
      add_9815072(tmp_11430108, text_9825548(HEX5BHEX5D_4510068(orig_11500002, HEX2EHEX2E_4510001(half_11500001, 1))));
      add_9815072(tmp_11430106, tmp_11430108);
      }
      else {
        var tmp_11430109 = tree_9825445(43, []);
        tmp_11430109.class = "seed";
        add_9815072(tmp_11430109, text_9825601(card_info_11430091.orig));
        add_9815072(tmp_11430106, tmp_11430109);
      }
      
      add_9815072(tmp_11430098, tmp_11430106);
    }
    
    add_9815072(tmp_11430094, tmp_11430098);
    var tmp_11430110 = tree_9825445(43, []);
    tmp_11430110.class = "extra content";
    var tmp_11430111 = tree_9825445(43, []);
    tmp_11430111.class = "inline field";
    var tmp_11430112 = tree_9825445(43, []);
    tmp_11430112.class = "vector-label";
    add_9815072(tmp_11430112, text_9825601(translate_10867372("Seed Vector:")));
    add_9815072(tmp_11430111, tmp_11430112);
    var tmp_11430113 = tree_9825445(43, []);
    tmp_11430113.class = "ui mini input vector-input";
    var tmp_11430114 = tree_9825445(103, []);
    set_attr_9765105(tmp_11430114, "type", "text");
    set_attr_9765105(tmp_11430114, "placeholder", translate_10867372("Type your seed vector"));
    set_attr_9765105(tmp_11430114, "spellcheck", "false");
    add_event_handler_10790118(tmp_11430114, 3, HEX3Aanonymous_11535002, kxi_10172283[0]);
    add_9815072(tmp_11430113, tmp_11430114);
    add_9815072(tmp_11430111, tmp_11430113);
    add_9815072(tmp_11430110, tmp_11430111);
    add_9815072(tmp_11430094, tmp_11430110);
    var tmp_11430115 = tree_9825445(43, []);
    tmp_11430115.class = "bt-seed-del";
    var tmp_11430116 = tree_9825445(104, []);
    tmp_11430116.class = "circular ui icon mini button";
    add_event_handler_10790154(tmp_11430116, 0, remove_seed_card_11150116(idx_11430092), kxi_10172283[0]);
    var tmp_11430117 = tree_9825445(61, []);
    tmp_11430117.class = "close icon";
    add_9815072(tmp_11430116, tmp_11430117);
    add_9815072(tmp_11430115, tmp_11430116);
    add_9815072(tmp_11430094, tmp_11430115);
    result_11430093 = tmp_11430094;

  return result_11430093;

}
function substr_341022(s_341024, first_341025, last_341026) {
  var result_341027 = null;

    var first_341028 = nimMax(first_341025, 0);
    var l_341030 = nimMax(addInt(subInt(nimMin(last_341026, (s_341024 != null ? (s_341024.length-1) : -1)), first_341028), 1), 0);
    result_341027 = nimCopy(null, mnewString(chckRange(l_341030, 0, 2147483647)), NTI112);
    L1: do {
      var i_341039 = 0;
      var colontmp__9726693 = 0;
      colontmp__9726693 = subInt(l_341030, 1);
      var res_9726694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_9726694 <= colontmp__9726693)) break L3;
            i_341039 = res_9726694;
            result_341027[chckIndx(i_341039, 0, (result_341027 != null ? result_341027.length : 0)+0-1)-0] = s_341024[chckIndx(addInt(i_341039, first_341028), 0, (s_341024 != null ? s_341024.length : 0)+0-1)-0];
            res_9726694 = addInt(res_9726694, 1);
          }
      } while(false);
    } while(false);

  return result_341027;

}
function nsuSplitChar(s_9020034, sep_9020035, maxsplit_9020036) {
  var result_9020038 = null;

    result_9020038 = nimCopy(null, [], NTI9025015);
    L1: do {
      var xHEX60gensym9020039_9025016 = null;
      var lastHEX60gensym8855133_12155328 = 0;
      var splitsHEX60gensym8855134_12155329 = maxsplit_9020036;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym8855133_12155328 <= (s_9020034 != null ? s_9020034.length : 0))) break L3;
            var firstHEX60gensym8855135_12155331 = lastHEX60gensym8855133_12155328;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym8855133_12155328 < (s_9020034 != null ? s_9020034.length : 0)) && !((s_9020034[chckIndx(lastHEX60gensym8855133_12155328, 0, (s_9020034 != null ? s_9020034.length : 0)+0-1)-0] == sep_9020035)))) break L5;
                  lastHEX60gensym8855133_12155328 = addInt(lastHEX60gensym8855133_12155328, 1);
                }
            } while(false);
            if ((splitsHEX60gensym8855134_12155329 == 0)) {
            lastHEX60gensym8855133_12155328 = (s_9020034 != null ? s_9020034.length : 0);
            }
            
            xHEX60gensym9020039_9025016 = substr_341022(s_9020034, firstHEX60gensym8855135_12155331, subInt(lastHEX60gensym8855133_12155328, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym9020039_9025016, NTI112);
            if (result_9020038 != null) { result_9020038.push(Tmp6); } else { result_9020038 = [Tmp6]; };
            if ((splitsHEX60gensym8855134_12155329 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym8855134_12155329 = subInt(splitsHEX60gensym8855134_12155329, 1);
            lastHEX60gensym8855133_12155328 = addInt(lastHEX60gensym8855133_12155328, 1);
          }
      } while(false);
    } while(false);

  return result_9020038;

}
function new_11160005() {
  var result_11160009 = null;

  BeforeRet: do {
    var r_11160201 = null;
    r_11160201 = {seed: null, gen: null, tag: null, orig: null, sv: null};
    result_11160009 = r_11160201;
    break BeforeRet;
  } while (false);

  return result_11160009;

}
function nsuStartsWith(s_9330016, prefix_9330017) {
            var Tmp3;

  var result_9330018 = false;

  BeforeRet: do {
    var i_9330020 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          if (((prefix_9330017 != null ? prefix_9330017.length : 0) <= i_9330020)) {
          result_9330018 = true;
          break BeforeRet;
          }
          
            if (((s_9330016 != null ? s_9330016.length : 0) <= i_9330020)) Tmp3 = true; else {              Tmp3 = !((s_9330016[chckIndx(i_9330020, 0, (s_9330016 != null ? s_9330016.length : 0)+0-1)-0] == prefix_9330017[chckIndx(i_9330020, 0, (prefix_9330017 != null ? prefix_9330017.length : 0)+0-1)-0]));            }          if (Tmp3) {
          result_9330018 = false;
          break BeforeRet;
          }
          
          i_9330020 = addInt(i_9330020, 1);
        }
    } while(false);
  } while (false);

  return result_9330018;

}
function cb_seed_qr_done_11155504(err_11155506, data_11155507) {
                var Tmp7;
                var Tmp8;

    if (!((err_11155506 == 0))) {
          Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
      qrReader.hide();
    
    }
    else {
      var escape_data_11160001 = escape_html(data_11155507);
      var sdata_11160002 = cstrToNimstr(escape_data_11160001);
      var ds_11160003 = nsuSplitChar(sdata_11160002, 44, -1);
      var seed_card_info_11160236 = new_11160005();
      L1: do {
        var d_11170214 = null;
        var i_12155317 = 0;
        var l_12155318 = (ds_11160003 != null ? ds_11160003.length : 0);
        L2: do {
            L3: while (true) {
            if (!(i_12155317 < l_12155318)) break L3;
              d_11170214 = ds_11160003[chckIndx(i_12155317, 0, (ds_11160003 != null ? ds_11160003.length : 0)+0-1)-0];
              if (nsuStartsWith(d_11170214, makeNimstrLit("seed:"))) {
              seed_card_info_11160236.seed = toJSStr(HEX5BHEX5D_4510068(d_11170214, HEX2EHEX2E_4510001(5, 1)));
              }
              else {
              if (nsuStartsWith(d_11170214, makeNimstrLit("tag:"))) {
              seed_card_info_11160236.tag = toJSStr(HEX5BHEX5D_4510068(d_11170214, HEX2EHEX2E_4510001(4, 1)));
              }
              else {
              if (nsuStartsWith(d_11170214, makeNimstrLit("gen:"))) {
              seed_card_info_11160236.gen = toJSStr(HEX5BHEX5D_4510068(d_11170214, HEX2EHEX2E_4510001(4, 1)));
              }
              }}
              i_12155317 = addInt(i_12155317, 1);
              if (!(((ds_11160003 != null ? ds_11160003.length : 0) == l_12155318))) {
              failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      seed_card_info_11160236.orig = data_11155507;
            var seed_valid = false;
      if(seed_card_info_11160236.seed) {
        var dec = base58.dec(seed_card_info_11160236.seed);
        if(dec && dec.length == 32) {
          seed_valid = true;
        }
      }
      if(!seed_valid) {
        Notify.show(__t('Warning'), __t('Unsupported seed card was scanned.'), Notify.msgtype.warning);
      }

    
      var dupcheck_11200036 = false;
      L4: do {
        var s_11210214 = null;
        var i_12155322 = 0;
        var l_12155323 = (seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0);
        L5: do {
            L6: while (true) {
            if (!(i_12155322 < l_12155323)) break L6;
              s_11210214 = seed_card_infos_11086417[0][chckIndx(i_12155322, 0, (seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0)+0-1)-0];
                if (!(s_11210214.seed == null)) Tmp7 = false; else {                  Tmp7 = (seed_card_info_11160236.seed == null);                }              if (Tmp7) {
              if ((s_11210214.orig == seed_card_info_11160236.orig)) {
              dupcheck_11200036 = true;
              break L4;
              }
              
              }
              else {
                if ((s_11210214.seed == seed_card_info_11160236.seed)) Tmp8 = true; else {                  Tmp8 = (s_11210214.tag == seed_card_info_11160236.tag);                }              if (Tmp8) {
              dupcheck_11200036 = true;
              break L4;
              }
              }
              i_12155322 = addInt(i_12155322, 1);
              if (!(((seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0) == l_12155323))) {
              failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      if (dupcheck_11200036) {
              Notify.show(__t('Error'), __t('The seed card has already been scanned.'), Notify.msgtype.error);
      
      }
      else {
      if (seed_card_infos_11086417[0] != null) { seed_card_infos_11086417[0].push(seed_card_info_11160236); } else { seed_card_infos_11086417[0] = [seed_card_info_11160236]; };
      }
      
            qrReader.hide();
    
      view_selector_11086137(2, false);
    }
    

  
}
function show_seed_qr_11215014() {
    function HEX3Aanonymous_11215019() {
              qrReader.show(cb_seed_qr_done_11155504);
    

      
    }

  var result_11215018 = null;

    result_11215018 = HEX3Aanonymous_11215019;

  return result_11215018;

}
function cam_change_11215098() {
    function HEX3Aanonymous_11215103() {
              $('.camtools button').blur();
      qrReader.next();
    

      
    }

  var result_11215102 = null;

    result_11215102 = HEX3Aanonymous_11215103;

  return result_11215102;

}
function cam_close_11215131() {
    function HEX3Aanonymous_11215136() {
              qrReader.hide();
    

      
    }

  var result_11215135 = null;

    result_11215135 = HEX3Aanonymous_11215136;

  return result_11215135;

}
function change_language_11330029(ev_11330031, n_11330032) {
    var lang_id_11330033 = value_9730126(n_11330032);
    if ((lang_id_11330033 == 0)) {
    bip39_wordlist_11100004[0] = bip39_11090004[0].wordlists.english;
    wl_select_11150006[0] = nimCopy(null, wl_english_11150005[0], NTI11125006);
    wl_select_id_11150008[0] = 0;
    }
    else {
    if ((lang_id_11330033 == 1)) {
    bip39_wordlist_11100004[0] = bip39_11090004[0].wordlists.japanese;
    wl_select_11150006[0] = nimCopy(null, wl_japanese_11125005[0], NTI11100005);
    wl_select_id_11150008[0] = 1;
    }
    }
    autocomplete_words_11086436[0] = nimCopy(null, [], NTI11350018);
    chklist_11086444[0] = nimCopy(null, [], NTI11350033);
    view_update_11086287();

  
}
function check_mnemonic_11215199(ev_11215201, n_11215202) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

    var s_11215203 = value_9730126(n_11215202);
    if (!((s_11215203 == prev_check_word_11086445[0]))) {
    chklist_11086444[0] = nimCopy(null, [], NTI11220015);
    }
    
    prev_check_word_11086445[0] = s_11215203;
      if (!!((s_11215203 == null))) Tmp1 = false; else {        Tmp1 = (0 < (s_11215203 != null ? s_11215203.length : 0));      }    if (Tmp1) {
      if (!mnemonic_fulfill_11086086[0]) Tmp2 = false; else {        Tmp2 = !((editing_words_11086418[0] == s_11215203));      }    if (Tmp2) {
    mnemonic_fulfill_11086086[0] = false;
    view_selector_11086137(3, false);
    }
    
    editing_words_11086418[0] = s_11215203;
    var cur_11250004 = document.getElementById((n_11215202.id)).selectionStart;
          s_11215203 = s_11215203.substr(0, cur_11250004).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
    
      if (!!((s_11215203 == null))) Tmp3 = false; else {        Tmp3 = (0 < (s_11215203 != null ? s_11215203.length : 0));      }    if (Tmp3) {
    var tmplist_11255017 = [];
    L4: do {
      var word_11255018 = null;
      var v_12155397 = null;
      for (var k in bip39_wordlist_11100004[0]) {
        if (!bip39_wordlist_11100004[0].hasOwnProperty(k)) continue;
        v_12155397=bip39_wordlist_11100004[0][k];
      word_11255018 = v_12155397;
      var w_11255019 = word_11255018;
      if (w_11255019.startsWith(s_11215203)) {
      if (tmplist_11255017 != null) { tmplist_11255017.push(w_11255019); } else { tmplist_11255017 = [w_11255019]; };
      }
      
      }
    } while(false);
    autocomplete_words_11086436[0] = nimCopy(null, tmplist_11255017, NTI11255001);
    }
    else {
      autocomplete_words_11086436[0] = nimCopy(null, [], NTI11255041);
    }
    
    }
    else {
      autocomplete_words_11086436[0] = nimCopy(null, [], NTI11255056);
    }
    
    view_update_11086287();

  
}
function get_vnode_by_id_10280119(id_10280121, kxi_10280122) {
  var result_10280123 = null;

    if (kxi_10280122.byId.hasOwnProperty(id_10280121)) {
    result_10280123 = kxi_10280122.byId[id_10280121];
    }
    

  return result_10280123;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6235, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function confirm_mnemonic_11305067(input_id_11305069, advance_11305070) {
    function HEX3Aanonymous_11305074() {
          var Tmp1;
          var Tmp5;
          var Tmp6;

        confirm_mnemonic_advanced_11305053[0] = advance_11305070;
        var x_11305076 = get_vnode_by_id_10280119(input_id_11305069, kxi_10172283[0]);
        var s_11305077 = value_9730126(x_11305076);
          if (!!((s_11305077 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_11305077 != null ? s_11305077.length : 0));          }        if (Tmp1) {
        var words_11310002 = null;
                input_words_11086419[0] = s_11305077.replace(/[ 　\n\r]+/g, ' ').trim();
        words_11310002 = input_words_11086419[0].split(' ');
      
        chklist_11086444[0] = nimCopy(null, [], NTI11310017);
        var idx_11310018 = 0;
        var allvalid_11310019 = true;
        L2: do {
          var word_11320214 = null;
          var i_12155402 = 0;
          var l_12155403 = (words_11310002 != null ? words_11310002.length : 0);
          L3: do {
              L4: while (true) {
              if (!(i_12155402 < l_12155403)) break L4;
                word_11320214 = words_11310002[chckIndx(i_12155402, 0, (words_11310002 != null ? words_11310002.length : 0)+0-1)-0];
                if (wl_select_11150006[0].includes(word_11320214)) {
                if (advance_11305070) {
                var levs_11320220 = nimCopy(null, levens_one((word_11320214), bip39_wordlist_11100004[0]), NTI11320215);
                if (chklist_11086444[0] != null) { chklist_11086444[0].push({Field0: idx_11310018, Field1: word_11320214, Field2: true, Field3: nimCopy(null, levs_11320220, NTI11086442)}); } else { chklist_11086444[0] = [{Field0: idx_11310018, Field1: word_11320214, Field2: true, Field3: nimCopy(null, levs_11320220, NTI11086442)}]; };
                }
                else {
                if (chklist_11086444[0] != null) { chklist_11086444[0].push({Field0: idx_11310018, Field1: word_11320214, Field2: true, Field3: []}); } else { chklist_11086444[0] = [{Field0: idx_11310018, Field1: word_11320214, Field2: true, Field3: []}]; };
                }
                
                }
                else {
                  var levs_11320256 = nimCopy(null, levens((word_11320214), bip39_wordlist_11100004[0]), NTI11320251);
                  if (chklist_11086444[0] != null) { chklist_11086444[0].push({Field0: idx_11310018, Field1: word_11320214, Field2: false, Field3: nimCopy(null, levs_11320256, NTI11086442)}); } else { chklist_11086444[0] = [{Field0: idx_11310018, Field1: word_11320214, Field2: false, Field3: nimCopy(null, levs_11320256, NTI11086442)}]; };
                  allvalid_11310019 = false;
                }
                
                idx_11310018 = addInt(idx_11310018, 1);
                i_12155402 = addInt(i_12155402, 1);
                if (!(((words_11310002 != null ? words_11310002.length : 0) == l_12155403))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
          if (!allvalid_11310019) Tmp6 = false; else {            Tmp6 = (12 <= idx_11310018);          }          if (!Tmp6) Tmp5 = false; else {            Tmp5 = (modInt(idx_11310018, 3) == 0);          }        if (Tmp5) {
                  var bip39 = coinlibs.bip39;
          if(bip39.validateMnemonic(input_words_11086419[0], bip39_wordlist_11100004[0])) {
            mnemonic_fulfill_11086086[0] = true
          } else {
            Notify.show(__t('Warning'), __t('There are no misspellings, but some words seem to be wrong.') + (advance_11305070 ? '' : ' ' + __t('Try to use [Advanced Check]')), Notify.msgtype.warning);
          }
        
        if (mnemonic_fulfill_11086086[0]) {
        view_selector_11086137(4, false);
        }
        
        }
        
        }
        else {
          chklist_11086444[0] = nimCopy(null, [], NTI11325015);
        }
        
        autocomplete_words_11086436[0] = nimCopy(null, [], NTI11325030);
        view_update_11086287();

      
    }

  var result_11305073 = null;

    result_11305073 = HEX3Aanonymous_11305074;

  return result_11305073;

}
function set_input_text_10790402(n_10790404, s_10790405) {
    n_10790404.text = s_10790405;
    if (!((n_10790404.dom == null))) {
    n_10790404.dom.value = s_10790405;
    }
    

  
}
function select_word_11255070(input_id_11255072, word_11255073, whole_replace_11255074) {
    function HEX3Aanonymous_11255078() {
          var Tmp1;

        var x_11255080 = get_vnode_by_id_10280119(input_id_11255072, kxi_10172283[0]);
        var s_11255081 = value_9730126(x_11255080);
          if (!!((s_11255081 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_11255081 != null ? s_11255081.length : 0));          }        if (Tmp1) {
        var input_elm_11275005 = document.getElementById((input_id_11255072));
        var cur_11280004 = input_elm_11275005.selectionStart;
        var newcur_11280005 = cur_11280004;
        if (whole_replace_11255074) {
                  var t = s_11255081.substr(0, cur_11280004).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            s_11255081 = s_11255081.substr(0, cur_11280004 - t.length) + word_11255073;
            newcur_11280005 = s_11255081.length;
          }
        
        set_input_text_10790402(x_11255080, s_11255081);
        editing_words_11086418[0] = s_11255081;
        input_elm_11275005.focus();
        input_elm_11275005.selectionStart = newcur_11280005;
        input_elm_11275005.selectionEnd = newcur_11280005;
        }
        else {
                    var t = s_11255081.substr(0, cur_11280004).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            var tail = s_11255081.substr(cur_11280004) || '';
            s_11255081 = s_11255081.substr(0, cur_11280004 - t.length) + word_11255073 + tail;
            newcur_11280005 = s_11255081.length - tail.length;
          }
        
          set_input_text_10790402(x_11255080, s_11255081);
          editing_words_11086418[0] = s_11255081;
          input_elm_11275005.focus();
          input_elm_11275005.selectionEnd = newcur_11280005;
        }
        
        }
        
        autocomplete_words_11086436[0] = nimCopy(null, [], NTI11305026);
        view_update_11086287();

      
    }

  var result_11255077 = null;

    result_11255077 = HEX3Aanonymous_11255078;

  return result_11255077;

}
function fix_word_11325057(input_id_11325059, idx_11325060, word_11325061) {
    function HEX3Aanonymous_11325065() {
          var Tmp1;

        var x_11325067 = get_vnode_by_id_10280119(input_id_11325059, kxi_10172283[0]);
        var s_11325068 = value_9730126(x_11325067);
          if (!!((s_11325068 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_11325068 != null ? s_11325068.length : 0));          }        if (Tmp1) {
        var ret_11330001 = null;
                ret_11330001 = "";
        var count = 0;
        var find = false;
        var skip = false;
        for(var t in s_11325068) {
          if(/[ 　\n\r]/.test(s_11325068[t])) {
            ret_11330001 += s_11325068[t];
            if(find) {
              count++;
            }
            find = false;
            skip = false;
          } else {
            find = true;
            if(idx_11325060 == count && skip == false) {
              ret_11330001 += word_11325061;
              skip = true;
            } else {
              if(!skip) {
                ret_11330001 += s_11325068[t];
              }
            }
          }
        }
      
        set_input_text_10790402(x_11325067, ret_11330001);
        editing_words_11086418[0] = ret_11330001;
        confirm_mnemonic_11305067(input_id_11325059, confirm_mnemonic_advanced_11305053[0])();
        }
        

      
    }

  var result_11325064 = null;

    result_11325064 = HEX3Aanonymous_11325065;

  return result_11325064;

}
function mnemonic_editor_11350047() {
  var result_11350049 = null;

    var input_id_11350050 = "minput";
    var tmp_11350087 = tree_9825445(43, []);
    var tmp_11350088 = tree_9825445(43, []);
    tmp_11350088.class = "ui clearing segment medit-seg";
    var tmp_11350094 = tree_9825445(43, []);
    tmp_11350094.class = "ui form";
    var tmp_11350095 = tree_9825445(43, []);
    tmp_11350095.class = "field";
    var tmp_11350096 = tree_9825445(102, []);
    add_9815072(tmp_11350096, text_9825601(translate_10867372("Select mnemonic language")));
    add_9815072(tmp_11350095, tmp_11350096);
    var tmp_11350097 = tree_9825445(43, []);
    tmp_11350097.class = "ui selection dropdown";
    var tmp_11350098 = tree_9825445(103, []);
    set_attr_9765105(tmp_11350098, "type", "hidden");
    set_attr_9765105(tmp_11350098, "name", "mnemonic-language");
    valueHEX3D_9730143(tmp_11350098, "1");
    add_event_handler_10790118(tmp_11350098, 8, change_language_11330029, kxi_10172283[0]);
    add_9815072(tmp_11350097, tmp_11350098);
    var tmp_11350099 = tree_9825445(61, []);
    tmp_11350099.class = "dropdown icon";
    add_9815072(tmp_11350097, tmp_11350099);
    var tmp_11350100 = tree_9825445(43, []);
    tmp_11350100.class = "default text";
    add_9815072(tmp_11350100, text_9825601(translate_10867372("Mnemonic Language")));
    add_9815072(tmp_11350097, tmp_11350100);
    var tmp_11350101 = tree_9825445(43, []);
    tmp_11350101.class = "menu";
    var tmp_11350102 = tree_9825445(43, []);
    tmp_11350102.class = "item";
    set_attr_9765105(tmp_11350102, "data-value", "1");
    add_9815072(tmp_11350102, text_9825601(translate_10867372("Japanese")));
    add_9815072(tmp_11350101, tmp_11350102);
    var tmp_11350103 = tree_9825445(43, []);
    tmp_11350103.class = "item";
    set_attr_9765105(tmp_11350103, "data-value", "0");
    add_9815072(tmp_11350103, text_9825601(translate_10867372("English")));
    add_9815072(tmp_11350101, tmp_11350103);
    add_9815072(tmp_11350097, tmp_11350101);
    add_9815072(tmp_11350095, tmp_11350097);
    add_9815072(tmp_11350094, tmp_11350095);
    var tmp_11350104 = tree_9825445(43, []);
    tmp_11350104.class = "field minput-field";
    var tmp_11350105 = tree_9825445(102, []);
    add_9815072(tmp_11350105, text_9825601(translate_10867372("Import your mnemonic you already have")));
    add_9815072(tmp_11350104, tmp_11350105);
    var tmp_11350106 = tree_9825445(109, []);
    tmp_11350106.id = input_id_11350050;
    valueHEX3D_9730143(tmp_11350106, editing_words_11086418[0]);
    add_event_handler_10790118(tmp_11350106, 3, check_mnemonic_11215199, kxi_10172283[0]);
    add_event_handler_10790118(tmp_11350106, 16, check_mnemonic_11215199, kxi_10172283[0]);
    set_attr_9765105(tmp_11350106, "spellcheck", "false");
    add_9815072(tmp_11350104, tmp_11350106);
    add_9815072(tmp_11350094, tmp_11350104);
    add_9815072(tmp_11350088, tmp_11350094);
    var tmp_11350107 = tree_9825445(104, []);
    tmp_11350107.class = "ui right floated primary button";
    add_event_handler_10790154(tmp_11350107, 0, confirm_mnemonic_11305067(input_id_11350050, false), kxi_10172283[0]);
    add_9815072(tmp_11350107, text_9825601(translate_10867372("Check")));
    add_9815072(tmp_11350088, tmp_11350107);
    var tmp_11350108 = tree_9825445(104, []);
    tmp_11350108.class = "ui right floated default button";
    add_event_handler_10790154(tmp_11350108, 0, confirm_mnemonic_11305067(input_id_11350050, true), kxi_10172283[0]);
    add_9815072(tmp_11350108, text_9825601(translate_10867372("Advanced Check")));
    add_9815072(tmp_11350088, tmp_11350108);
    add_9815072(tmp_11350087, tmp_11350088);
    var tmp_11350109 = tree_9825445(43, []);
    tmp_11350109.class = "medit-autocomp";
    L1: do {
      var word_11425011 = null;
      var i_12155368 = 0;
      var l_12155369 = (autocomplete_words_11086436[0] != null ? autocomplete_words_11086436[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_12155368 < l_12155369)) break L3;
            word_11425011 = autocomplete_words_11086436[0][chckIndx(i_12155368, 0, (autocomplete_words_11086436[0] != null ? autocomplete_words_11086436[0].length : 0)+0-1)-0];
            var tmp_11350110 = tree_9825445(104, []);
            tmp_11350110.class = "ui mini teal label";
            add_event_handler_10790154(tmp_11350110, 0, select_word_11255070(input_id_11350050, word_11425011, true), kxi_10172283[0]);
            add_9815072(tmp_11350110, text_9825601(word_11425011));
            add_9815072(tmp_11350109, tmp_11350110);
            i_12155368 = addInt(i_12155368, 1);
            if (!(((autocomplete_words_11086436[0] != null ? autocomplete_words_11086436[0].length : 0) == l_12155369))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L4: do {
      var i_11425034 = 0;
      var colontmp__12155388 = 0;
      colontmp__12155388 = (chklist_11086444[0] != null ? (chklist_11086444[0].length-1) : -1);
      var res_12155389 = 0;
      L5: do {
          L6: while (true) {
          if (!(res_12155389 <= colontmp__12155388)) break L6;
            i_11425034 = res_12155389;
            if (chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field2) {
            var tmp_11350111 = tree_9825445(104, []);
            tmp_11350111.class = "ui mini green label";
            var tmp_11350112 = tree_9825445(61, []);
            tmp_11350112.class = "check circle icon";
            add_9815072(tmp_11350112, text_9825601((" " + chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field1)));
            add_9815072(tmp_11350111, tmp_11350112);
            L7: do {
              var lev_11425049 = null;
              var colontmp__12155376 = null;
              colontmp__12155376 = chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field3;
              var i_12155377 = 0;
              var l_12155378 = (colontmp__12155376 != null ? colontmp__12155376.length : 0);
              L8: do {
                  L9: while (true) {
                  if (!(i_12155377 < l_12155378)) break L9;
                    lev_11425049 = colontmp__12155376[chckIndx(i_12155377, 0, (colontmp__12155376 != null ? colontmp__12155376.length : 0)+0-1)-0];
                    if (!((chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field1 == lev_11425049))) {
                    var tmp_11350113 = tree_9825445(104, []);
                    tmp_11350113.class = "ui mini blue basic label";
                    add_event_handler_10790154(tmp_11350113, 0, fix_word_11325057(input_id_11350050, chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field0, lev_11425049), kxi_10172283[0]);
                    add_9815072(tmp_11350113, text_9825601(lev_11425049));
                    add_9815072(tmp_11350111, tmp_11350113);
                    }
                    
                    i_12155377 = addInt(i_12155377, 1);
                    if (!(((colontmp__12155376 != null ? colontmp__12155376.length : 0) == l_12155378))) {
                    failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            add_9815072(tmp_11350109, tmp_11350111);
            }
            else {
              var tmp_11350114 = tree_9825445(104, []);
              tmp_11350114.class = "ui mini pink label";
              var tmp_11350115 = tree_9825445(61, []);
              tmp_11350115.class = "x icon";
              add_9815072(tmp_11350115, text_9825601((" " + chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field1)));
              add_9815072(tmp_11350114, tmp_11350115);
              L10: do {
                var lev_11430020 = null;
                var colontmp__12155384 = null;
                colontmp__12155384 = chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field3;
                var i_12155385 = 0;
                var l_12155386 = (colontmp__12155384 != null ? colontmp__12155384.length : 0);
                L11: do {
                    L12: while (true) {
                    if (!(i_12155385 < l_12155386)) break L12;
                      lev_11430020 = colontmp__12155384[chckIndx(i_12155385, 0, (colontmp__12155384 != null ? colontmp__12155384.length : 0)+0-1)-0];
                      var tmp_11350116 = tree_9825445(104, []);
                      tmp_11350116.class = "ui mini blue basic label";
                      add_event_handler_10790154(tmp_11350116, 0, fix_word_11325057(input_id_11350050, chklist_11086444[0][chckIndx(i_11425034, 0, (chklist_11086444[0] != null ? chklist_11086444[0].length : 0)+0-1)-0].Field0, lev_11430020), kxi_10172283[0]);
                      add_9815072(tmp_11350116, text_9825601(lev_11430020));
                      add_9815072(tmp_11350114, tmp_11350116);
                      i_12155385 = addInt(i_12155385, 1);
                      if (!(((colontmp__12155384 != null ? colontmp__12155384.length : 0) == l_12155386))) {
                      failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while(false);
              } while(false);
              add_9815072(tmp_11350109, tmp_11350114);
            }
            
            res_12155389 = addInt(res_12155389, 1);
          }
      } while(false);
    } while(false);
    add_9815072(tmp_11350087, tmp_11350109);
    result_11350049 = tmp_11350087;

  return result_11350049;

}
function protect_selector_11086367(protect_type_11086369) {
    function HEX3Aanonymous_11086373() {
              qrReader.hide();
    
        current_protect_type_11086056[0] = protect_type_11086369;
        show_page1_11086082[0] = false;
        show_page2_11086083[0] = true;
        if ((current_protect_type_11086056[0] == 0)) {
                $('#keyselector').removeClass('grey').addClass('olive');
        $('#passselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#passselector').removeClass('grey').addClass('olive');
        $('#keyselector').removeClass('olive').addClass('grey');
      
        }
        
        view_update_11086287();

      
    }

  var result_11086372 = null;

    result_11086372 = HEX3Aanonymous_11086373;

  return result_11086372;

}
function confirm_key_card_11215080(ev_11215082, n_11215083) {
    var ret_lock_11215084 = false;
        var wallet = pastel.wallet;
    ret_lock_11215084 = wallet.lockShieldedKeys(key_card_val_11210235[0], 1, true);
  
    if (ret_lock_11215084) {
    key_card_fulfill_11086087[0] = true;
    show_page3_11086084[0] = true;
    view_update_11086287();
    }
    else {
            Notify.show(__t('Error'), __t('Failed to lock your wallet with the key card.'), Notify.msgtype.error);
    
    }
    

  
}
function cb_key_qr_done_11210249(err_11210251, data_11210252) {
    if (!((err_11210251 == 0))) {
          Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
      qrReader.hide();
    
    }
    else {
      key_card_val_11210235[0] = data_11210252;
            qrReader.hide();
    
      view_selector_11086137(8, false);
    }
    

  
}
function show_key_qr_11215047() {
    function HEX3Aanonymous_11215052() {
        key_card_fulfill_11086087[0] = false;
        show_page3_11086084[0] = false;
              qrReader.show(cb_key_qr_done_11210249);
    

      
    }

  var result_11215051 = null;

    result_11215051 = HEX3Aanonymous_11215052;

  return result_11215051;

}
function change_passphrase_11535047(ev_11535049, n_11535050) {
    if (!((pass_phrase_11086446[0] == value_9730126(n_11535050)))) {
    passphrase_fulfill_11086088[0] = false;
    show_page3_11086084[0] = false;
    pass_phrase_11086446[0] = value_9730126(n_11535050);
    view_update_11086287();
    }
    

  
}
function confirm_passphrase_11540014(ev_11540016, n_11540017) {
    var ret_lock_11540018 = false;
    var passlen_11540020 = 0;
        var val = $('input[name="input-passphrase"]').val();
    if(val) {
      passlen_11540020 = val.length;
      $('input[name="input-passphrase"]').blur();
      var wallet = pastel.wallet;
      ret_lock_11540018 = wallet.lockShieldedKeys($('input[name="input-passphrase"]').val(), 2, true);
    }
  
    if ((0 < passlen_11540020)) {
    if (ret_lock_11540018) {
    passphrase_fulfill_11086088[0] = true;
    show_page3_11086084[0] = true;
    view_update_11086287();
    }
    else {
              Notify.show(__t('Error'), __t('Failed to lock your wallet with the passphrase.'), Notify.msgtype.error);
      
    }
    
    }
    

  
}
function passphrase_editor_11545014() {
  var result_11545016 = null;

    var tmp_11545017 = tree_9825445(43, []);
    var tmp_11545018 = tree_9825445(43, []);
    tmp_11545018.class = "ui clearing segment passphrase-seg";
    var tmp_11545019 = tree_9825445(43, []);
    tmp_11545019.class = "ui inverted segment";
    var tmp_11545020 = tree_9825445(24, []);
    tmp_11545020.class = "ui grey inverted header center";
    add_9815072(tmp_11545020, text_9825601(translate_10867372("Input passphrase")));
    add_9815072(tmp_11545019, tmp_11545020);
    var tmp_11545021 = tree_9825445(43, []);
    tmp_11545021.class = "ui form";
    var tmp_11545022 = tree_9825445(43, []);
    tmp_11545022.class = "field";
    var tmp_11545023 = tree_9825445(103, []);
    tmp_11545023.class = "center";
    set_attr_9765105(tmp_11545023, "type", "password");
    set_attr_9765105(tmp_11545023, "name", "input-passphrase");
    valueHEX3D_9730143(tmp_11545023, pass_phrase_11086446[0]);
    set_attr_9765105(tmp_11545023, "placeholder", translate_10867372("Passphrase"));
    add_event_handler_10790118(tmp_11545023, 3, change_passphrase_11535047, kxi_10172283[0]);
    add_event_handler_10790118(tmp_11545023, 29, confirm_passphrase_11540014, kxi_10172283[0]);
    set_attr_9765105(tmp_11545023, "spellcheck", "false");
    add_9815072(tmp_11545022, tmp_11545023);
    add_9815072(tmp_11545021, tmp_11545022);
    add_9815072(tmp_11545019, tmp_11545021);
    add_9815072(tmp_11545018, tmp_11545019);
    var tmp_11545024 = tree_9825445(104, []);
    tmp_11545024.class = "ui right floated olive button";
    add_event_handler_10790118(tmp_11545024, 0, confirm_passphrase_11540014, kxi_10172283[0]);
    add_9815072(tmp_11545024, text_9825601(translate_10867372("Apply")));
    add_9815072(tmp_11545018, tmp_11545024);
    add_9815072(tmp_11545017, tmp_11545018);
    result_11545016 = tmp_11545017;

  return result_11545016;

}
function btn_send_11580126() {
    function HEX3Aanonymous_11580131() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 1) ? 0 : 1);
      document.getElementById('btn-send').blur();
    

      
    }

  var result_11580130 = null;

    result_11580130 = HEX3Aanonymous_11580131;

  return result_11580130;

}
function btn_receive_11580159() {
    function HEX3Aanonymous_11580164() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 2) ? 0 : 2);
      document.getElementById('btn-receive').blur();
    

      
    }

  var result_11580163 = null;

    result_11580163 = HEX3Aanonymous_11580164;

  return result_11580163;

}
function btn_recv_close_11580225() {
    function HEX3Aanonymous_11580230() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(2);
    

      
    }

  var result_11580229 = null;

    result_11580229 = HEX3Aanonymous_11580230;

  return result_11580229;

}
function recv_address_selector_11580258() {
  var result_11580260 = null;

    var tmp_11580261 = tree_9825445(43, []);
    tmp_11580261.id = "receive-address";
    tmp_11580261.class = "ui center aligned segment hidden";
    var tmp_11580262 = tree_9825445(43, []);
    tmp_11580262.class = "ui top attached label recvaddress";
    add_9815072(tmp_11580262, text_9825601((translate_10867372("Receive Address") + " ")));
    var tmp_11580263 = tree_9825445(70, []);
    var tmp_11580264 = tree_9825445(61, []);
    tmp_11580264.class = "close icon btn-close";
    add_event_handler_10790154(tmp_11580264, 0, btn_recv_close_11580225(), kxi_10172283[0]);
    add_9815072(tmp_11580263, tmp_11580264);
    add_9815072(tmp_11580262, tmp_11580263);
    add_9815072(tmp_11580261, tmp_11580262);
    var tmp_11580265 = tree_9825445(43, []);
    tmp_11580265.class = "ui mini basic icon buttons";
    var tmp_11580266 = tree_9825445(104, []);
    tmp_11580266.id = "btn-recv-copy";
    tmp_11580266.class = "ui button";
    set_attr_9765105(tmp_11580266, "title", translate_10867372("Copy"));
    var tmp_11580267 = tree_9825445(61, []);
    tmp_11580267.class = "paperclip icon";
    add_9815072(tmp_11580266, tmp_11580267);
    add_9815072(tmp_11580265, tmp_11580266);
    var tmp_11580268 = tree_9825445(104, []);
    tmp_11580268.id = "btn-recv-qrcode";
    tmp_11580268.class = "ui button";
    set_attr_9765105(tmp_11580268, "title", translate_10867372("Create QR Code"));
    var tmp_11580269 = tree_9825445(61, []);
    tmp_11580269.class = "qrcode icon";
    add_9815072(tmp_11580268, tmp_11580269);
    add_9815072(tmp_11580265, tmp_11580268);
    add_9815072(tmp_11580261, tmp_11580265);
    var tmp_11580270 = tree_9825445(43, []);
    tmp_11580270.id = "address-text";
    tmp_11580270.class = "address";
    add_9815072(tmp_11580270, text_9825548([]));
    add_9815072(tmp_11580261, tmp_11580270);
    var tmp_11580271 = tree_9825445(43, []);
    tmp_11580271.class = "balls";
    var tmp_11580272 = tree_9825445(43, []);
    tmp_11580272.class = "used";
    var tmp_11580273 = tree_9825445(43, []);
    tmp_11580273.class = "circular ui icon mini button ball";
    var tmp_11580274 = tree_9825445(75, []);
    set_attr_9765105(tmp_11580274, "src", "");
    add_9815072(tmp_11580273, tmp_11580274);
    add_9815072(tmp_11580272, tmp_11580273);
    add_9815072(tmp_11580271, tmp_11580272);
    var tmp_11580275 = tree_9825445(43, []);
    tmp_11580275.class = "new";
    var tmp_11580276 = tree_9825445(43, []);
    tmp_11580276.class = "circular ui icon mini button ball";
    var tmp_11580277 = tree_9825445(75, []);
    set_attr_9765105(tmp_11580277, "src", "");
    add_9815072(tmp_11580276, tmp_11580277);
    add_9815072(tmp_11580275, tmp_11580276);
    var tmp_11580278 = tree_9825445(43, []);
    tmp_11580278.class = "circular ui icon mini button ball";
    var tmp_11580279 = tree_9825445(75, []);
    set_attr_9765105(tmp_11580279, "src", "");
    add_9815072(tmp_11580278, tmp_11580279);
    add_9815072(tmp_11580275, tmp_11580278);
    var tmp_11580280 = tree_9825445(43, []);
    tmp_11580280.class = "circular ui icon mini button ball";
    var tmp_11580281 = tree_9825445(75, []);
    set_attr_9765105(tmp_11580281, "src", "");
    add_9815072(tmp_11580280, tmp_11580281);
    add_9815072(tmp_11580275, tmp_11580280);
    var tmp_11580282 = tree_9825445(43, []);
    tmp_11580282.class = "circular ui icon mini button ball";
    var tmp_11580283 = tree_9825445(75, []);
    set_attr_9765105(tmp_11580283, "src", "");
    add_9815072(tmp_11580282, tmp_11580283);
    add_9815072(tmp_11580275, tmp_11580282);
    var tmp_11580284 = tree_9825445(43, []);
    tmp_11580284.class = "circular ui icon mini button ball";
    var tmp_11580285 = tree_9825445(75, []);
    set_attr_9765105(tmp_11580285, "src", "");
    add_9815072(tmp_11580284, tmp_11580285);
    add_9815072(tmp_11580275, tmp_11580284);
    add_9815072(tmp_11580271, tmp_11580275);
    add_9815072(tmp_11580261, tmp_11580271);
    result_11580260 = tmp_11580261;

  return result_11580260;

}
function recv_address_modal_11615083() {
  var result_11615085 = null;

    var tmp_11615086 = tree_9825445(43, []);
    tmp_11615086.id = "recv-modal";
    tmp_11615086.class = "ui";
    var tmp_11615087 = tree_9825445(61, []);
    tmp_11615087.class = "close icon btn-close-arc";
    add_9815072(tmp_11615086, tmp_11615087);
    var tmp_11615088 = tree_9825445(43, []);
    tmp_11615088.class = "close-arc";
    set_attr_9765105(tmp_11615088, "tabindex", "0");
    add_9815072(tmp_11615086, tmp_11615088);
    var tmp_11615089 = tree_9825445(43, []);
    tmp_11615089.id = "recv-qrcode";
    tmp_11615089.class = "qrcode";
    set_attr_9765105(tmp_11615089, "title", "");
    var tmp_11615090 = tree_9825445(84, []);
    set_attr_9765105(tmp_11615090, "width", "0");
    set_attr_9765105(tmp_11615090, "height", "0");
    add_9815072(tmp_11615089, tmp_11615090);
    add_9815072(tmp_11615086, tmp_11615089);
    var tmp_11615091 = tree_9825445(43, []);
    tmp_11615091.id = "recvaddr-form";
    tmp_11615091.class = "ui container";
    var tmp_11615092 = tree_9825445(43, []);
    tmp_11615092.class = "ui form";
    var tmp_11615093 = tree_9825445(43, []);
    tmp_11615093.class = "field";
    var tmp_11615094 = tree_9825445(102, []);
    add_9815072(tmp_11615094, text_9825601(translate_10867372("Receive Address")));
    add_9815072(tmp_11615093, tmp_11615094);
    var tmp_11615095 = tree_9825445(43, []);
    tmp_11615095.class = "ui selection dropdown addr-selection";
    set_attr_9765105(tmp_11615095, "tabindex", "0");
    var tmp_11615096 = tree_9825445(103, []);
    set_attr_9765105(tmp_11615096, "type", "hidden");
    set_attr_9765105(tmp_11615096, "name", "address");
    valueHEX3D_9730143(tmp_11615096, "");
    add_9815072(tmp_11615095, tmp_11615096);
    var tmp_11615097 = tree_9825445(61, []);
    tmp_11615097.class = "dropdown icon";
    add_9815072(tmp_11615095, tmp_11615097);
    var tmp_11615098 = tree_9825445(43, []);
    tmp_11615098.class = "text";
    var tmp_11615099 = tree_9825445(75, []);
    set_attr_9765105(tmp_11615099, "clsss", "ui mini avatar image");
    set_attr_9765105(tmp_11615099, "src", "");
    add_9815072(tmp_11615098, tmp_11615099);
    add_9815072(tmp_11615098, text_9825548([]));
    add_9815072(tmp_11615095, tmp_11615098);
    var tmp_11615100 = tree_9825445(43, []);
    tmp_11615100.class = "menu";
    set_attr_9765105(tmp_11615100, "tabindex", "-1");
    set_attr_9765105(tmp_11615100, "data-tabindex", "-1");
    add_9815072(tmp_11615095, tmp_11615100);
    add_9815072(tmp_11615093, tmp_11615095);
    add_9815072(tmp_11615092, tmp_11615093);
    var tmp_11615101 = tree_9825445(43, []);
    tmp_11615101.class = "field";
    var tmp_11615102 = tree_9825445(102, []);
    add_9815072(tmp_11615102, text_9825601(translate_10867372("Amount")));
    add_9815072(tmp_11615101, tmp_11615102);
    var tmp_11615103 = tree_9825445(43, []);
    tmp_11615103.class = "ui right labeled input";
    var tmp_11615104 = tree_9825445(103, []);
    tmp_11615104.class = "right";
    set_attr_9765105(tmp_11615104, "type", "text");
    set_attr_9765105(tmp_11615104, "name", "amount");
    set_attr_9765105(tmp_11615104, "placeholder", translate_10867372("Amount"));
    set_attr_9765105(tmp_11615104, "spellcheck", "false");
    add_9815072(tmp_11615103, tmp_11615104);
    var tmp_11615105 = tree_9825445(43, []);
    tmp_11615105.class = "ui basic label";
    add_9815072(tmp_11615105, text_9825548(makeNimstrLit("ZNY")));
    add_9815072(tmp_11615103, tmp_11615105);
    add_9815072(tmp_11615101, tmp_11615103);
    add_9815072(tmp_11615092, tmp_11615101);
    var tmp_11615106 = tree_9825445(43, []);
    tmp_11615106.class = "field";
    var tmp_11615107 = tree_9825445(102, []);
    add_9815072(tmp_11615107, text_9825601(translate_10867372("Label")));
    add_9815072(tmp_11615106, tmp_11615107);
    var tmp_11615108 = tree_9825445(103, []);
    tmp_11615108.class = "ui input";
    set_attr_9765105(tmp_11615108, "type", "text");
    set_attr_9765105(tmp_11615108, "name", "label");
    set_attr_9765105(tmp_11615108, "placeholder", translate_10867372("Label"));
    add_9815072(tmp_11615106, tmp_11615108);
    add_9815072(tmp_11615092, tmp_11615106);
    var tmp_11615109 = tree_9825445(43, []);
    tmp_11615109.class = "field";
    var tmp_11615110 = tree_9825445(102, []);
    add_9815072(tmp_11615110, text_9825601(translate_10867372("Message")));
    add_9815072(tmp_11615109, tmp_11615110);
    var tmp_11615111 = tree_9825445(109, []);
    tmp_11615111.class = "ui textarea";
    set_attr_9765105(tmp_11615111, "rows", "2");
    set_attr_9765105(tmp_11615111, "name", "message");
    set_attr_9765105(tmp_11615111, "placeholder", translate_10867372("Message"));
    add_9815072(tmp_11615109, tmp_11615111);
    add_9815072(tmp_11615092, tmp_11615109);
    add_9815072(tmp_11615091, tmp_11615092);
    add_9815072(tmp_11615086, tmp_11615091);
    result_11615085 = tmp_11615086;

  return result_11615085;

}
function btn_send_close_11580192() {
    function HEX3Aanonymous_11580197() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(1);
    

      
    }

  var result_11580196 = null;

    result_11580196 = HEX3Aanonymous_11580197;

  return result_11580196;

}
function check_send_amount_11690014(ev_11690016, n_11690017) {
    var s_11690018 = value_9730126(n_11690017);
        var amount = String(s_11690018).trim();
    var amount_elm = $('#send-coins input[name="amount"]');
    if(amount.length > 0) {
      amount = amount.replace(/,/g, '');
      var amounts = amount.split('.');
      if(amount.match(/^\d+(\.\d{1,8})?$/)) {
        amount_elm.closest('.field').removeClass('error warning');
        var value = '';
        if(amounts.length == 1) {
          if(amounts[0] != '0') {
            value = amounts[0] + '00000000';
          } else {
            value = amounts[0];
          }
        } else if(amounts.length == 2) {
          value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
        }
        if(value.length > 0) {
          setSendUtxo(value);
        } else {
          resetSendBallCount();
        }
      } else {
        amount_elm.closest('.field').addClass('error');
      }
    } else {
      amount_elm.closest('.field').removeClass('error warning');
      resetSendBallCount();
    }
  

  
}
function send_form_11690046() {
  var result_11690048 = null;

    var tmp_11690049 = tree_9825445(43, []);
    tmp_11690049.id = "send-coins";
    tmp_11690049.class = "ui center aligned segment hidden";
    var tmp_11690050 = tree_9825445(43, []);
    tmp_11690050.class = "ui top attached label sendcoins";
    add_9815072(tmp_11690050, text_9825601((translate_10867372("Send Coins") + " ")));
    var tmp_11690051 = tree_9825445(70, []);
    var tmp_11690052 = tree_9825445(61, []);
    tmp_11690052.class = "close icon btn-close";
    add_event_handler_10790154(tmp_11690052, 0, btn_send_close_11580192(), kxi_10172283[0]);
    add_9815072(tmp_11690051, tmp_11690052);
    add_9815072(tmp_11690050, tmp_11690051);
    add_9815072(tmp_11690049, tmp_11690050);
    var tmp_11690053 = tree_9825445(43, []);
    tmp_11690053.class = "ui right floated mini basic icon buttons";
    var tmp_11690054 = tree_9825445(104, []);
    tmp_11690054.id = "btn-send-lock";
    tmp_11690054.class = "ui button";
    set_attr_9765105(tmp_11690054, "title", translate_10867372("Locked"));
    var tmp_11690055 = tree_9825445(61, []);
    tmp_11690055.class = "lock icon";
    add_9815072(tmp_11690054, tmp_11690055);
    add_9815072(tmp_11690053, tmp_11690054);
    add_9815072(tmp_11690049, tmp_11690053);
    var tmp_11690056 = tree_9825445(43, []);
    tmp_11690056.class = "ui mini basic icon buttons btn-send-tools";
    var tmp_11690057 = tree_9825445(104, []);
    tmp_11690057.id = "btn-send-clear";
    tmp_11690057.class = "ui button";
    set_attr_9765105(tmp_11690057, "title", translate_10867372("Clear"));
    var tmp_11690058 = tree_9825445(61, []);
    tmp_11690058.class = "eraser icon";
    add_9815072(tmp_11690057, tmp_11690058);
    add_9815072(tmp_11690056, tmp_11690057);
    var tmp_11690059 = tree_9825445(104, []);
    tmp_11690059.id = "btn-send-qrcode";
    tmp_11690059.class = "ui button";
    set_attr_9765105(tmp_11690059, "title", translate_10867372("Scan QR Code"));
    var tmp_11690060 = tree_9825445(61, []);
    tmp_11690060.class = "camera icon";
    add_9815072(tmp_11690059, tmp_11690060);
    add_9815072(tmp_11690056, tmp_11690059);
    add_9815072(tmp_11690049, tmp_11690056);
    var tmp_11690061 = tree_9825445(43, []);
    tmp_11690061.class = "ui form";
    var tmp_11690062 = tree_9825445(43, []);
    tmp_11690062.class = "field";
    var tmp_11690063 = tree_9825445(102, []);
    add_9815072(tmp_11690063, text_9825601(translate_10867372("Send Address")));
    add_9815072(tmp_11690062, tmp_11690063);
    var tmp_11690064 = tree_9825445(43, []);
    tmp_11690064.class = "ui small input";
    var tmp_11690065 = tree_9825445(103, []);
    tmp_11690065.class = "center";
    set_attr_9765105(tmp_11690065, "type", "text");
    set_attr_9765105(tmp_11690065, "name", "address");
    set_attr_9765105(tmp_11690065, "placeholder", translate_10867372("Address"));
    set_attr_9765105(tmp_11690065, "spellcheck", "false");
    add_9815072(tmp_11690064, tmp_11690065);
    add_9815072(tmp_11690062, tmp_11690064);
    add_9815072(tmp_11690061, tmp_11690062);
    var tmp_11690066 = tree_9825445(43, []);
    tmp_11690066.class = "field";
    var tmp_11690067 = tree_9825445(102, []);
    add_9815072(tmp_11690067, text_9825601(translate_10867372("Amount")));
    add_9815072(tmp_11690066, tmp_11690067);
    var tmp_11690068 = tree_9825445(43, []);
    tmp_11690068.class = "ui small input";
    var tmp_11690069 = tree_9825445(103, []);
    tmp_11690069.class = "center";
    set_attr_9765105(tmp_11690069, "type", "text");
    set_attr_9765105(tmp_11690069, "name", "amount");
    set_attr_9765105(tmp_11690069, "placeholder", translate_10867372("Amount"));
    add_event_handler_10790118(tmp_11690069, 3, check_send_amount_11690014, kxi_10172283[0]);
    set_attr_9765105(tmp_11690069, "spellcheck", "false");
    add_9815072(tmp_11690068, tmp_11690069);
    var tmp_11690070 = tree_9825445(43, []);
    tmp_11690070.class = "ui mini basic icon buttons utxoctrl";
    var tmp_11690071 = tree_9825445(104, []);
    tmp_11690071.id = "btn-utxo-minus";
    tmp_11690071.class = "ui button";
    set_attr_9765105(tmp_11690071, "title", translate_10867372("-1 Ball"));
    var tmp_11690072 = tree_9825445(61, []);
    tmp_11690072.class = "minus circle icon";
    add_9815072(tmp_11690071, tmp_11690072);
    add_9815072(tmp_11690070, tmp_11690071);
    var tmp_11690073 = tree_9825445(104, []);
    tmp_11690073.id = "btn-utxo-count";
    tmp_11690073.class = "ui button sendutxos";
    set_attr_9765105(tmp_11690073, "tabindex", "-1");
    set_attr_9765105(tmp_11690073, "data-tabindex", "-1");
    add_9815072(tmp_11690073, text_9825548(makeNimstrLit("...")));
    add_9815072(tmp_11690070, tmp_11690073);
    var tmp_11690074 = tree_9825445(104, []);
    tmp_11690074.id = "btn-utxo-plus";
    tmp_11690074.class = "ui button";
    set_attr_9765105(tmp_11690074, "title", translate_10867372("+1 Ball"));
    var tmp_11690075 = tree_9825445(61, []);
    tmp_11690075.class = "plus circle icon";
    add_9815072(tmp_11690074, tmp_11690075);
    add_9815072(tmp_11690070, tmp_11690074);
    add_9815072(tmp_11690068, tmp_11690070);
    add_9815072(tmp_11690066, tmp_11690068);
    add_9815072(tmp_11690061, tmp_11690066);
    var tmp_11690076 = tree_9825445(43, []);
    tmp_11690076.class = "ui list uri-options";
    L1: do {
      var d_11795009 = null;
      var v_12155548 = null;
      for (var k in uriOptions) {
        if (!uriOptions.hasOwnProperty(k)) continue;
        v_12155548=uriOptions[k];
      d_11795009 = v_12155548;
      var tmp_11690077 = tree_9825445(43, []);
      tmp_11690077.class = "item";
      var tmp_11690078 = tree_9825445(43, []);
      tmp_11690078.class = "content";
      var tmp_11690079 = tree_9825445(43, []);
      tmp_11690079.class = "header";
      add_9815072(tmp_11690079, text_9825601(translate_10867372(toJSStr(cstrToNimstr(d_11795009.key)))));
      add_9815072(tmp_11690078, tmp_11690079);
      var tmp_11690080 = tree_9825445(43, []);
      tmp_11690080.class = "description";
      add_9815072(tmp_11690080, text_9825601(d_11795009.value));
      add_9815072(tmp_11690078, tmp_11690080);
      add_9815072(tmp_11690077, tmp_11690078);
      add_9815072(tmp_11690076, tmp_11690077);
      }
    } while(false);
    add_9815072(tmp_11690061, tmp_11690076);
    var tmp_11690081 = tree_9825445(43, []);
    tmp_11690081.class = "fluid ui buttons";
    var tmp_11690082 = tree_9825445(104, []);
    tmp_11690082.id = "btn-tx-send";
    tmp_11690082.class = "ui inverted olive button center btn-tx-send";
    add_9815072(tmp_11690082, text_9825601(translate_10867372("Send")));
    add_9815072(tmp_11690081, tmp_11690082);
    add_9815072(tmp_11690061, tmp_11690081);
    add_9815072(tmp_11690049, tmp_11690061);
    result_11690048 = tmp_11690049;

  return result_11690048;

}
function go_settings_11580014() {
    function HEX3Aanonymous_11580019() {
        if (!(show_page4_11086085[0])) {
        view_selector_11086137(14, false);
        supress_redraw_11086089[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          view_selector_11086137(14, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_11580018 = null;

    result_11580018 = HEX3Aanonymous_11580019;

  return result_11580018;

}
function go_logs_11580047() {
    function HEX3Aanonymous_11580052() {
        if (!(show_page4_11086085[0])) {
        view_selector_11086137(13, false);
        supress_redraw_11086089[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          view_selector_11086137(13, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_11580051 = null;

    result_11580051 = HEX3Aanonymous_11580052;

  return result_11580051;

}
function back_wallet_11580080() {
    function HEX3Aanonymous_11580085() {
        view_selector_11086137(12, true);
              goSection('#section3', page_scroll_done);
    

      
    }

  var result_11580084 = null;

    result_11580084 = HEX3Aanonymous_11580085;

  return result_11580084;

}
function settings_page_11870014() {
  var result_11870016 = null;

    var tmp_11870017 = tree_9825445(43, []);
    tmp_11870017.id = "settings";
    tmp_11870017.class = "ui container";
    var tmp_11870018 = tree_9825445(23, []);
    tmp_11870018.class = "ui dividing header";
    add_9815072(tmp_11870018, text_9825601(translate_10867372("Settings")));
    add_9815072(tmp_11870017, tmp_11870018);
    var tmp_11870019 = tree_9825445(104, []);
    tmp_11870019.id = "btn-reset";
    tmp_11870019.class = "ui inverted red button";
    add_9815072(tmp_11870019, text_9825601(translate_10867372("Reset Wallet")));
    add_9815072(tmp_11870017, tmp_11870019);
    var tmp_11870020 = tree_9825445(43, []);
    tmp_11870020.class = "ui pink inverted segment";
    add_9815072(tmp_11870020, text_9825601(translate_10867372("Delete all your wallet data in your web browser, including your encrypted secret keys.\n If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\n or mnemonics before deleting it. Otherwise you may lost your coins forever.\n")));
    add_9815072(tmp_11870017, tmp_11870020);
    var tmp_11870021 = tree_9825445(43, []);
    tmp_11870021.class = "ui checkbox";
    var tmp_11870022 = tree_9825445(103, []);
    set_attr_9765105(tmp_11870022, "type", "checkbox");
    set_attr_9765105(tmp_11870022, "name", "confirm");
    add_9815072(tmp_11870021, tmp_11870022);
    var tmp_11870023 = tree_9825445(102, []);
    add_9815072(tmp_11870023, text_9825601(translate_10867372("I confirmed that I have the seed cards or mnemonics or no coins in my wallet.")));
    add_9815072(tmp_11870021, tmp_11870023);
    add_9815072(tmp_11870017, tmp_11870021);
    result_11870016 = tmp_11870017;

  return result_11870016;

}
function settings_modal_11825015() {
  var result_11825017 = null;

    var tmp_11825018 = tree_9825445(43, []);
    tmp_11825018.id = "settings-modal";
    tmp_11825018.class = "ui basic modal";
    var tmp_11825019 = tree_9825445(43, []);
    tmp_11825019.class = "ui icon header";
    var tmp_11825020 = tree_9825445(61, []);
    tmp_11825020.class = "trash icon";
    add_9815072(tmp_11825019, tmp_11825020);
    add_9815072(tmp_11825019, text_9825601(translate_10867372("Reset Wallet")));
    add_9815072(tmp_11825018, tmp_11825019);
    var tmp_11825021 = tree_9825445(43, []);
    tmp_11825021.class = "content";
    var tmp_11825022 = tree_9825445(31, []);
    add_9815072(tmp_11825022, text_9825601(translate_10867372("Are you sure to reset your wallet?")));
    add_9815072(tmp_11825021, tmp_11825022);
    add_9815072(tmp_11825018, tmp_11825021);
    var tmp_11825023 = tree_9825445(43, []);
    tmp_11825023.class = "actions";
    var tmp_11825024 = tree_9825445(104, []);
    tmp_11825024.class = "ui basic cancel inverted button";
    var tmp_11825025 = tree_9825445(61, []);
    tmp_11825025.class = "remove icon";
    add_9815072(tmp_11825024, tmp_11825025);
    add_9815072(tmp_11825024, text_9825601(translate_10867372("Cancel")));
    add_9815072(tmp_11825023, tmp_11825024);
    var tmp_11825026 = tree_9825445(104, []);
    tmp_11825026.class = "ui red ok inverted button";
    var tmp_11825027 = tree_9825445(61, []);
    tmp_11825027.class = "checkmark icon";
    add_9815072(tmp_11825026, tmp_11825027);
    add_9815072(tmp_11825026, text_9825601(translate_10867372("Reset")));
    add_9815072(tmp_11825023, tmp_11825026);
    add_9815072(tmp_11825018, tmp_11825023);
    result_11825017 = tmp_11825018;

  return result_11825017;

}
function app_main_11915014(data_11915016) {
  var result_11915017 = null;

    var tmp_11915018 = tree_9825445(43, []);
    if (show_page1_11086082[0]) {
    var tmp_11915019 = tree_9825445(17, []);
    tmp_11915019.id = "section1";
    tmp_11915019.class = "section";
    var tmp_11915020 = tree_9825445(43, []);
    tmp_11915020.class = "intro";
    var tmp_11915021 = tree_9825445(43, []);
    tmp_11915021.class = "intro-head";
    var tmp_11915022 = tree_9825445(43, []);
    tmp_11915022.class = "caption";
    add_9815072(tmp_11915022, text_9825548(makeNimstrLit("Pastel Wallet")));
    add_9815072(tmp_11915021, tmp_11915022);
    var tmp_11915023 = tree_9825445(43, []);
    tmp_11915023.class = "ui container method-selector";
    var tmp_11915024 = tree_9825445(43, []);
    tmp_11915024.class = "title";
    add_9815072(tmp_11915024, text_9825601(translate_10867372("Scan your seed cards or input your mnemonic to start.")));
    add_9815072(tmp_11915023, tmp_11915024);
    var tmp_11915025 = tree_9825445(43, []);
    tmp_11915025.class = "ui buttons";
    var tmp_11915026 = tree_9825445(104, []);
    tmp_11915026.id = "seedselector";
    tmp_11915026.class = "ui olive button";
    add_event_handler_10790154(tmp_11915026, 0, import_selector_11086315(0), kxi_10172283[0]);
    var tmp_11915027 = tree_9825445(61, []);
    tmp_11915027.class = "qrcode icon";
    add_9815072(tmp_11915026, tmp_11915027);
    add_9815072(tmp_11915026, text_9825601(translate_10867372("Seed card")));
    add_9815072(tmp_11915025, tmp_11915026);
    var tmp_11915028 = tree_9825445(43, []);
    tmp_11915028.class = "or";
    add_9815072(tmp_11915025, tmp_11915028);
    var tmp_11915029 = tree_9825445(104, []);
    tmp_11915029.id = "mnemonicselector";
    tmp_11915029.class = "ui grey button";
    add_event_handler_10790154(tmp_11915029, 0, import_selector_11086315(1), kxi_10172283[0]);
    var tmp_11915030 = tree_9825445(61, []);
    tmp_11915030.class = "list alternate icon";
    add_9815072(tmp_11915029, tmp_11915030);
    add_9815072(tmp_11915029, text_9825601(translate_10867372("Mnemonic")));
    add_9815072(tmp_11915025, tmp_11915029);
    add_9815072(tmp_11915023, tmp_11915025);
    add_9815072(tmp_11915021, tmp_11915023);
    add_9815072(tmp_11915020, tmp_11915021);
    var tmp_11915031 = tree_9825445(43, []);
    tmp_11915031.class = "intro-body";
    if ((current_import_type_11086050[0] == 0)) {
    var tmp_11915032 = tree_9825445(43, []);
    tmp_11915032.id = "seed-seg";
    tmp_11915032.class = "ui left aligned segment seed-seg";
    if (show_scan_result_11086077[0]) {
    var tmp_11915033 = tree_9825445(43, []);
    tmp_11915033.class = "ui link cards seed-card-holder";
    tmp_11915033.id = "seed-card-holder";
    L1: do {
      var idx_11960229 = 0;
      var seed_card_info_11960230 = null;
      var i_12155086 = 0;
      var l_12155087 = (seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_12155086 < l_12155087)) break L3;
            idx_11960229 = i_12155086;
            seed_card_info_11960230 = seed_card_infos_11086417[0][chckIndx(i_12155086, 0, (seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0)+0-1)-0];
            add_9815072(tmp_11915033, seed_card_11430089(seed_card_info_11960230, idx_11960229));
            i_12155086 = addInt(i_12155086, 1);
            if (!(((seed_card_infos_11086417[0] != null ? seed_card_infos_11086417[0].length : 0) == l_12155087))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    var tmp_11915034 = tree_9825445(43, []);
    tmp_11915034.class = "seed-add-container";
    var tmp_11915035 = tree_9825445(104, []);
    tmp_11915035.class = "circular ui icon button bt-add-seed";
    add_event_handler_10790154(tmp_11915035, 0, show_seed_qr_11215014(), kxi_10172283[0]);
    var tmp_11915036 = tree_9825445(61, []);
    tmp_11915036.class = "plus icon";
    add_9815072(tmp_11915035, tmp_11915036);
    add_9815072(tmp_11915034, tmp_11915035);
    add_9815072(tmp_11915033, tmp_11915034);
    add_9815072(tmp_11915032, tmp_11915033);
    var tmp_11915037 = tree_9825445(44, []);
    tmp_11915037.class = "pagenext";
    set_attr_9765105(tmp_11915037, "href", "#section2");
    var tmp_11915038 = tree_9825445(70, []);
    add_9815072(tmp_11915037, tmp_11915038);
    add_9815072(tmp_11915037, text_9825601(translate_10867372("Next")));
    add_9815072(tmp_11915032, tmp_11915037);
    }
    
    if (show_scanning_11086075[0]) {
    var tmp_11915039 = tree_9825445(43, []);
    tmp_11915039.class = "qr-scanning";
    var tmp_11915040 = tree_9825445(43, []);
    add_9815072(tmp_11915039, tmp_11915040);
    var tmp_11915041 = tree_9825445(43, []);
    add_9815072(tmp_11915039, tmp_11915041);
    add_9815072(tmp_11915032, tmp_11915039);
    }
    
    if (show_scan_seed_btn_11086074[0]) {
    var tmp_11915042 = tree_9825445(104, []);
    tmp_11915042.class = "ui teal labeled icon button bt-scan-seed";
    add_event_handler_10790154(tmp_11915042, 0, show_seed_qr_11215014(), kxi_10172283[0]);
    add_9815072(tmp_11915042, text_9825601(translate_10867372("Scan seed card with camera")));
    var tmp_11915043 = tree_9825445(61, []);
    tmp_11915043.class = "camera icon";
    add_9815072(tmp_11915042, tmp_11915043);
    add_9815072(tmp_11915032, tmp_11915042);
    }
    
    if (show_cam_tools_11086076[0]) {
    var tmp_11915044 = tree_9825445(43, []);
    tmp_11915044.class = "ui small basic icon buttons camtools";
    var tmp_11915045 = tree_9825445(104, []);
    tmp_11915045.class = "ui button";
    add_event_handler_10790154(tmp_11915045, 0, cam_change_11215098(), kxi_10172283[0]);
    var tmp_11915046 = tree_9825445(61, []);
    tmp_11915046.class = "camera icon";
    add_9815072(tmp_11915045, tmp_11915046);
    add_9815072(tmp_11915044, tmp_11915045);
    var tmp_11915047 = tree_9825445(104, []);
    tmp_11915047.class = "ui button";
    add_event_handler_10790154(tmp_11915047, 0, cam_close_11215131(), kxi_10172283[0]);
    var tmp_11915048 = tree_9825445(61, []);
    tmp_11915048.class = "window close icon";
    add_9815072(tmp_11915047, tmp_11915048);
    add_9815072(tmp_11915044, tmp_11915047);
    add_9815072(tmp_11915032, tmp_11915044);
    }
    
    var tmp_11915049 = tree_9825445(84, []);
    tmp_11915049.id = "qrcanvas";
    add_9815072(tmp_11915032, tmp_11915049);
    var tmp_11915050 = tree_9825445(43, []);
    tmp_11915050.class = "ui dimmer qrcamera-loader";
    var tmp_11915051 = tree_9825445(43, []);
    tmp_11915051.class = "ui indeterminate text loader";
    add_9815072(tmp_11915051, text_9825601(translate_10867372("Preparing Camera")));
    add_9815072(tmp_11915050, tmp_11915051);
    add_9815072(tmp_11915032, tmp_11915050);
    var tmp_11915052 = tree_9825445(43, []);
    tmp_11915052.class = "ui dimmer qrcamera-shutter";
    add_9815072(tmp_11915032, tmp_11915052);
    add_9815072(tmp_11915031, tmp_11915032);
    }
    else {
      var tmp_11915053 = tree_9825445(43, []);
      tmp_11915053.class = "ui left aligned segment mnemonic-seg";
      add_9815072(tmp_11915053, mnemonic_editor_11350047());
      if (mnemonic_fulfill_11086086[0]) {
      var tmp_11915054 = tree_9825445(44, []);
      tmp_11915054.class = "pagenext";
      set_attr_9765105(tmp_11915054, "href", "#section2");
      var tmp_11915055 = tree_9825445(70, []);
      add_9815072(tmp_11915054, tmp_11915055);
      add_9815072(tmp_11915054, text_9825601(translate_10867372("Next")));
      add_9815072(tmp_11915053, tmp_11915054);
      }
      
      add_9815072(tmp_11915031, tmp_11915053);
    }
    
    add_9815072(tmp_11915020, tmp_11915031);
    add_9815072(tmp_11915019, tmp_11915020);
    add_9815072(tmp_11915018, tmp_11915019);
    }
    
    if (show_page2_11086083[0]) {
    var tmp_11915056 = tree_9825445(17, []);
    tmp_11915056.id = "section2";
    tmp_11915056.class = "section";
    var tmp_11915057 = tree_9825445(43, []);
    tmp_11915057.class = "intro";
    var tmp_11915058 = tree_9825445(43, []);
    tmp_11915058.class = "intro-head";
    var tmp_11915059 = tree_9825445(43, []);
    tmp_11915059.class = "caption";
    add_9815072(tmp_11915059, text_9825548(makeNimstrLit("Pastel Wallet")));
    add_9815072(tmp_11915058, tmp_11915059);
    var tmp_11915060 = tree_9825445(43, []);
    tmp_11915060.class = "ui container method-selector";
    var tmp_11915061 = tree_9825445(43, []);
    tmp_11915061.class = "title";
    add_9815072(tmp_11915061, text_9825601(translate_10867372("A key card or passphrase is required to encrypt and save the private key in your browser.\n You will need it before sending your coins.\n")));
    add_9815072(tmp_11915060, tmp_11915061);
    var tmp_11915062 = tree_9825445(43, []);
    tmp_11915062.class = "ui buttons";
    var tmp_11915063 = tree_9825445(104, []);
    tmp_11915063.id = "keyselector";
    tmp_11915063.class = "ui olive button";
    add_event_handler_10790154(tmp_11915063, 0, protect_selector_11086367(0), kxi_10172283[0]);
    var tmp_11915064 = tree_9825445(61, []);
    tmp_11915064.class = "qrcode icon";
    add_9815072(tmp_11915063, tmp_11915064);
    add_9815072(tmp_11915063, text_9825601(translate_10867372("Key card")));
    add_9815072(tmp_11915062, tmp_11915063);
    var tmp_11915065 = tree_9825445(43, []);
    tmp_11915065.class = "or";
    add_9815072(tmp_11915062, tmp_11915065);
    var tmp_11915066 = tree_9825445(104, []);
    tmp_11915066.id = "passselector";
    tmp_11915066.class = "ui grey button";
    add_event_handler_10790154(tmp_11915066, 0, protect_selector_11086367(1), kxi_10172283[0]);
    var tmp_11915067 = tree_9825445(61, []);
    tmp_11915067.class = "list alternate icon";
    add_9815072(tmp_11915066, tmp_11915067);
    add_9815072(tmp_11915066, text_9825601(translate_10867372("Passphrase")));
    add_9815072(tmp_11915062, tmp_11915066);
    add_9815072(tmp_11915060, tmp_11915062);
    add_9815072(tmp_11915058, tmp_11915060);
    add_9815072(tmp_11915057, tmp_11915058);
    var tmp_11915068 = tree_9825445(43, []);
    tmp_11915068.class = "intro-body";
    if ((current_protect_type_11086056[0] == 0)) {
    var tmp_11915069 = tree_9825445(43, []);
    tmp_11915069.id = "seed-seg";
    tmp_11915069.class = "ui left aligned segment seed-seg";
    if (show_scan_result2_11086081[0]) {
    var tmp_11915070 = tree_9825445(43, []);
    tmp_11915070.class = "ui clearing segment keycard-seg";
    var tmp_11915071 = tree_9825445(43, []);
    tmp_11915071.class = "ui inverted segment";
    var tmp_11915072 = tree_9825445(24, []);
    tmp_11915072.class = "ui grey inverted header center";
    add_9815072(tmp_11915072, text_9825601(translate_10867372("Scanned key card")));
    add_9815072(tmp_11915071, tmp_11915072);
    var tmp_11915073 = tree_9825445(31, []);
    tmp_11915073.class = "center";
    add_9815072(tmp_11915073, text_9825601(key_card_val_11210235[0]));
    add_9815072(tmp_11915071, tmp_11915073);
    add_9815072(tmp_11915070, tmp_11915071);
    var tmp_11915074 = tree_9825445(104, []);
    tmp_11915074.class = "ui right floated olive button";
    add_event_handler_10790118(tmp_11915074, 0, confirm_key_card_11215080, kxi_10172283[0]);
    add_9815072(tmp_11915074, text_9825601(translate_10867372("Apply")));
    add_9815072(tmp_11915070, tmp_11915074);
    var tmp_11915075 = tree_9825445(104, []);
    tmp_11915075.class = "ui right floated grey button";
    add_event_handler_10790154(tmp_11915075, 0, show_key_qr_11215047(), kxi_10172283[0]);
    add_9815072(tmp_11915075, text_9825601(translate_10867372("Rescan")));
    add_9815072(tmp_11915070, tmp_11915075);
    add_9815072(tmp_11915069, tmp_11915070);
    }
    
    if (key_card_fulfill_11086087[0]) {
    var tmp_11915076 = tree_9825445(44, []);
    tmp_11915076.class = "pagenext";
    set_attr_9765105(tmp_11915076, "href", "#section3");
    var tmp_11915077 = tree_9825445(70, []);
    add_9815072(tmp_11915076, tmp_11915077);
    add_9815072(tmp_11915076, text_9825601(translate_10867372("Next")));
    add_9815072(tmp_11915069, tmp_11915076);
    }
    
    if (show_scanning2_11086079[0]) {
    var tmp_11915078 = tree_9825445(43, []);
    tmp_11915078.class = "qr-scanning";
    var tmp_11915079 = tree_9825445(43, []);
    add_9815072(tmp_11915078, tmp_11915079);
    var tmp_11915080 = tree_9825445(43, []);
    add_9815072(tmp_11915078, tmp_11915080);
    add_9815072(tmp_11915069, tmp_11915078);
    }
    
    if (show_scan_seed_btn2_11086078[0]) {
    var tmp_11915081 = tree_9825445(104, []);
    tmp_11915081.class = "ui teal labeled icon button bt-scan-seed";
    add_event_handler_10790154(tmp_11915081, 0, show_key_qr_11215047(), kxi_10172283[0]);
    add_9815072(tmp_11915081, text_9825601(translate_10867372("Scan key card with camera")));
    var tmp_11915082 = tree_9825445(61, []);
    tmp_11915082.class = "camera icon";
    add_9815072(tmp_11915081, tmp_11915082);
    add_9815072(tmp_11915069, tmp_11915081);
    }
    
    if (show_cam_tools2_11086080[0]) {
    var tmp_11915083 = tree_9825445(43, []);
    tmp_11915083.class = "ui small basic icon buttons camtools";
    var tmp_11915084 = tree_9825445(104, []);
    tmp_11915084.class = "ui button";
    add_event_handler_10790154(tmp_11915084, 0, cam_change_11215098(), kxi_10172283[0]);
    var tmp_11915085 = tree_9825445(61, []);
    tmp_11915085.class = "camera icon";
    add_9815072(tmp_11915084, tmp_11915085);
    add_9815072(tmp_11915083, tmp_11915084);
    var tmp_11915086 = tree_9825445(104, []);
    tmp_11915086.class = "ui button";
    add_event_handler_10790154(tmp_11915086, 0, cam_close_11215131(), kxi_10172283[0]);
    var tmp_11915087 = tree_9825445(61, []);
    tmp_11915087.class = "window close icon";
    add_9815072(tmp_11915086, tmp_11915087);
    add_9815072(tmp_11915083, tmp_11915086);
    add_9815072(tmp_11915069, tmp_11915083);
    }
    
    var tmp_11915088 = tree_9825445(84, []);
    tmp_11915088.id = "qrcanvas";
    add_9815072(tmp_11915069, tmp_11915088);
    var tmp_11915089 = tree_9825445(43, []);
    tmp_11915089.class = "ui dimmer qrcamera-loader";
    var tmp_11915090 = tree_9825445(43, []);
    tmp_11915090.class = "ui indeterminate text loader";
    add_9815072(tmp_11915090, text_9825601(translate_10867372("Preparing Camera")));
    add_9815072(tmp_11915089, tmp_11915090);
    add_9815072(tmp_11915069, tmp_11915089);
    var tmp_11915091 = tree_9825445(43, []);
    tmp_11915091.class = "ui dimmer qrcamera-shutter";
    add_9815072(tmp_11915069, tmp_11915091);
    add_9815072(tmp_11915068, tmp_11915069);
    }
    else {
      var tmp_11915092 = tree_9825445(43, []);
      tmp_11915092.class = "ui left aligned segment mnemonic-seg";
      add_9815072(tmp_11915092, passphrase_editor_11545014());
      if (passphrase_fulfill_11086088[0]) {
      var tmp_11915093 = tree_9825445(44, []);
      tmp_11915093.class = "pagenext";
      set_attr_9765105(tmp_11915093, "href", "#section3");
      var tmp_11915094 = tree_9825445(70, []);
      add_9815072(tmp_11915093, tmp_11915094);
      add_9815072(tmp_11915093, text_9825601(translate_10867372("Next")));
      add_9815072(tmp_11915092, tmp_11915093);
      }
      
      add_9815072(tmp_11915068, tmp_11915092);
    }
    
    add_9815072(tmp_11915057, tmp_11915068);
    add_9815072(tmp_11915056, tmp_11915057);
    add_9815072(tmp_11915018, tmp_11915056);
    }
    
    if (show_page3_11086084[0]) {
    var tmp_11915095 = tree_9825445(17, []);
    tmp_11915095.id = "section3";
    tmp_11915095.class = "section";
    var tmp_11915096 = tree_9825445(43, []);
    tmp_11915096.class = "intro";
    var tmp_11915097 = tree_9825445(43, []);
    tmp_11915097.class = "intro-head wallet-head";
    var tmp_11915098 = tree_9825445(43, []);
    tmp_11915098.class = "caption";
    add_9815072(tmp_11915098, text_9825548(makeNimstrLit("Pastel Wallet")));
    add_9815072(tmp_11915097, tmp_11915098);
    var tmp_11915099 = tree_9825445(43, []);
    tmp_11915099.class = "ui container wallet-btns";
    var tmp_11915100 = tree_9825445(43, []);
    tmp_11915100.class = "two ui basic buttons sendrecv";
    var tmp_11915101 = tree_9825445(104, []);
    tmp_11915101.id = "btn-send";
    tmp_11915101.class = "ui small button send";
    add_event_handler_10790154(tmp_11915101, 0, btn_send_11580126(), kxi_10172283[0]);
    var tmp_11915102 = tree_9825445(61, []);
    tmp_11915102.class = "counterclockwise rotated sign-out icon send";
    add_9815072(tmp_11915101, tmp_11915102);
    add_9815072(tmp_11915101, text_9825601((" " + translate_10867372("Send"))));
    add_9815072(tmp_11915100, tmp_11915101);
    var tmp_11915103 = tree_9825445(104, []);
    tmp_11915103.id = "btn-receive";
    tmp_11915103.class = "ui small button receive";
    add_event_handler_10790154(tmp_11915103, 0, btn_receive_11580159(), kxi_10172283[0]);
    var tmp_11915104 = tree_9825445(61, []);
    tmp_11915104.class = "clockwise rotated sign-in icon receive";
    add_9815072(tmp_11915103, tmp_11915104);
    add_9815072(tmp_11915103, text_9825601((" " + translate_10867372("Receive"))));
    add_9815072(tmp_11915100, tmp_11915103);
    add_9815072(tmp_11915099, tmp_11915100);
    add_9815072(tmp_11915097, tmp_11915099);
    add_9815072(tmp_11915096, tmp_11915097);
    var tmp_11915105 = tree_9825445(43, []);
    tmp_11915105.class = "intro-body wallet-body";
    var tmp_11915106 = tree_9825445(43, []);
    tmp_11915106.id = "wallet-balance";
    tmp_11915106.class = "ui center aligned segment";
    var tmp_11915107 = tree_9825445(43, []);
    tmp_11915107.class = "ui top left attached tiny label send";
    var tmp_11915108 = tree_9825445(70, []);
    add_9815072(tmp_11915108, text_9825548(makeNimstrLit("0")));
    add_9815072(tmp_11915107, tmp_11915108);
    add_9815072(tmp_11915107, text_9825548(makeNimstrLit(" ")));
    var tmp_11915109 = tree_9825445(61, []);
    tmp_11915109.class = "counterclockwise rotated sign-out icon";
    add_9815072(tmp_11915107, tmp_11915109);
    add_9815072(tmp_11915106, tmp_11915107);
    var tmp_11915110 = tree_9825445(43, []);
    tmp_11915110.class = "ui top right attached tiny label receive";
    var tmp_11915111 = tree_9825445(61, []);
    tmp_11915111.class = "clockwise rotated sign-in icon";
    add_9815072(tmp_11915110, tmp_11915111);
    var tmp_11915112 = tree_9825445(70, []);
    add_9815072(tmp_11915112, text_9825548(makeNimstrLit("0")));
    add_9815072(tmp_11915110, tmp_11915112);
    add_9815072(tmp_11915106, tmp_11915110);
    var tmp_11915113 = tree_9825445(43, []);
    tmp_11915113.class = "balance";
    add_9815072(tmp_11915113, text_9825548(makeNimstrLit("0")));
    add_9815072(tmp_11915106, tmp_11915113);
    var tmp_11915114 = tree_9825445(43, []);
    tmp_11915114.class = "ui bottom right attached tiny label symbol";
    add_9815072(tmp_11915114, text_9825548(makeNimstrLit("ZNY")));
    add_9815072(tmp_11915106, tmp_11915114);
    add_9815072(tmp_11915105, tmp_11915106);
    if (show_recv_address_selector_11086090[0]) {
    add_9815072(tmp_11915105, recv_address_selector_11580258());
    }
    
    if (show_recv_address_modal_11086091[0]) {
    add_9815072(tmp_11915105, recv_address_modal_11615083());
    }
    
    add_9815072(tmp_11915105, send_form_11690046());
    var tmp_11915115 = tree_9825445(43, []);
    tmp_11915115.id = "ball-info";
    tmp_11915115.class = "ui center aligned segment";
    add_9815072(tmp_11915115, text_9825548([]));
    var tmp_11915116 = tree_9825445(71, []);
    add_9815072(tmp_11915115, tmp_11915116);
    add_9815072(tmp_11915115, text_9825548([]));
    add_9815072(tmp_11915105, tmp_11915115);
    var tmp_11915117 = tree_9825445(43, []);
    tmp_11915117.id = "wallet-seg";
    tmp_11915117.class = "ui center aligned segment seed-seg";
    var tmp_11915118 = tree_9825445(84, []);
    set_attr_9765105(tmp_11915118, "width", "0");
    set_attr_9765105(tmp_11915118, "height", "0");
    add_9815072(tmp_11915117, tmp_11915118);
    add_9815072(tmp_11915105, tmp_11915117);
    add_9815072(tmp_11915096, tmp_11915105);
    var tmp_11915119 = tree_9825445(43, []);
    tmp_11915119.class = "ui two bottom attached buttons settings";
    var tmp_11915120 = tree_9825445(104, []);
    tmp_11915120.class = "ui button";
    add_event_handler_10790154(tmp_11915120, 0, go_settings_11580014(), kxi_10172283[0]);
    var tmp_11915121 = tree_9825445(61, []);
    tmp_11915121.class = "cog icon";
    add_9815072(tmp_11915120, tmp_11915121);
    add_9815072(tmp_11915120, text_9825601(translate_10867372("Settings")));
    var tmp_11915122 = tree_9825445(70, []);
    var tmp_11915123 = tree_9825445(61, []);
    tmp_11915123.class = "chevron down icon";
    add_9815072(tmp_11915122, tmp_11915123);
    add_9815072(tmp_11915120, tmp_11915122);
    add_9815072(tmp_11915119, tmp_11915120);
    var tmp_11915124 = tree_9825445(104, []);
    tmp_11915124.class = "ui button";
    add_event_handler_10790154(tmp_11915124, 0, go_logs_11580047(), kxi_10172283[0]);
    var tmp_11915125 = tree_9825445(61, []);
    tmp_11915125.class = "list alternate outline icon";
    add_9815072(tmp_11915124, tmp_11915125);
    add_9815072(tmp_11915124, text_9825601(translate_10867372("Logs")));
    var tmp_11915126 = tree_9825445(70, []);
    var tmp_11915127 = tree_9825445(61, []);
    tmp_11915127.class = "chevron down icon";
    add_9815072(tmp_11915126, tmp_11915127);
    add_9815072(tmp_11915124, tmp_11915126);
    add_9815072(tmp_11915119, tmp_11915124);
    var tmp_11915128 = tree_9825445(43, []);
    tmp_11915128.id = "bottom-blink";
    add_9815072(tmp_11915119, tmp_11915128);
    add_9815072(tmp_11915096, tmp_11915119);
    add_9815072(tmp_11915095, tmp_11915096);
    var tmp_11915129 = tree_9825445(109, []);
    tmp_11915129.id = "clipboard";
    set_attr_9765105(tmp_11915129, "rows", "1");
    set_attr_9765105(tmp_11915129, "tabindex", "-1");
    set_attr_9765105(tmp_11915129, "data-tabindex", "-1");
    set_attr_9765105(tmp_11915129, "readOnly", "true");
    set_attr_9765105(tmp_11915129, "spellcheck", "false");
    add_9815072(tmp_11915095, tmp_11915129);
    add_9815072(tmp_11915018, tmp_11915095);
    }
    
    if ((show_page3_11086084[0] || show_page4_11086085[0])) {
    var tmp_11915130 = tree_9825445(17, []);
    tmp_11915130.id = "section4";
    tmp_11915130.class = "tradelogs-section";
    var tmp_11915131 = tree_9825445(43, []);
    tmp_11915131.class = "ui buttons settings backpage";
    var tmp_11915132 = tree_9825445(104, []);
    tmp_11915132.class = "ui button backwallet";
    add_event_handler_10790154(tmp_11915132, 0, back_wallet_11580080(), kxi_10172283[0]);
    var tmp_11915133 = tree_9825445(61, []);
    tmp_11915133.class = "dot circle icon";
    add_9815072(tmp_11915132, tmp_11915133);
    add_9815072(tmp_11915132, text_9825601(translate_10867372("Back")));
    var tmp_11915134 = tree_9825445(70, []);
    var tmp_11915135 = tree_9825445(61, []);
    tmp_11915135.class = "chevron up icon";
    add_9815072(tmp_11915134, tmp_11915135);
    add_9815072(tmp_11915132, tmp_11915134);
    add_9815072(tmp_11915131, tmp_11915132);
    add_9815072(tmp_11915130, tmp_11915131);
    if (show_trade_logs_11086092[0]) {
    var tmp_11915136 = tree_9825445(43, []);
    tmp_11915136.class = "ui container";
    var tmp_11915137 = tree_9825445(43, []);
    tmp_11915137.id = "tradeunconfs";
    tmp_11915137.class = "ui cards tradelogs";
    add_9815072(tmp_11915136, tmp_11915137);
    var tmp_11915138 = tree_9825445(43, []);
    tmp_11915138.id = "tradelogs";
    tmp_11915138.class = "ui cards tradelogs";
    add_9815072(tmp_11915136, tmp_11915138);
    add_9815072(tmp_11915130, tmp_11915136);
    }
    
    if (show_settings_11086093[0]) {
    add_9815072(tmp_11915130, settings_page_11870014());
    add_9815072(tmp_11915130, settings_modal_11825015());
    }
    
    add_9815072(tmp_11915018, tmp_11915130);
    }
    
    result_11915017 = tmp_11915018;

  return result_11915017;

}
function after_script_12150051(data_12150053) {
    $(".ui.dropdown").dropdown();
    if (show_scan_result_11086077[0]) {
          function seedCardQrUpdate(vivid) {
        $('.seed-qrcode').each(function() {
          $(this).find('canvas').remove();
          var fillcolor;
          var fillStyleFn;
          if($(this).hasClass('active')) {
            fillcolor = vivid ? '#000' : '#7f7f7f';
            if(!vivid) {
              fillStyleFn = function(ctx) {
                var w = ctx.canvas.width;
                var h = ctx.canvas.height;
                var grd = ctx.createLinearGradient(0, 0, w, h);
                grd.addColorStop(0, "#666");
                grd.addColorStop(0.3, "#aaa");
                grd.addColorStop(1, "#555");
                return grd;
              }
            }
          } else {
            fillcolor = '#f8f8f8';
          }
          $(this).qrcode({
            render: 'canvas',
            ecLevel: 'Q',
            radius: 0.39,
            text: $(this).data('orig'),
            size: 188,
            mode: 2,
            label: '',
            fontname: 'sans',
            fontcolor: '#393939',
            fill: fillcolor,
            fillStyleFn: fillStyleFn
          });
        });
      }
      if(!$('.seed-qrcode .active').length) {
        $('.seed-qrcode').last().addClass('active');
      }
      seedCardQrUpdate();

      $('.seed-card').off('click').on('click', function() {
        $('.seed-card').not(this).each(function() {
          $(this).find('.seed-qrcode').removeClass('active');
        });
        $(this).find('.seed-qrcode').addClass('active');
        seedCardQrUpdate(true);
      });
      $('.seed-card').off('mouseleave').mouseleave(function() {
        $('.seed-qrcode').addClass('active');
        seedCardQrUpdate();
      });
      var holder = document.getElementById('seed-card-holder');
      if(holder) {
        holder.scrollLeft = holder.scrollWidth - holder.clientWidth;
      }
    
    }
    
    if ((show_scan_result_11086077[0] || mnemonic_fulfill_11086086[0])) {
          disable_caret_browsing($('#section2'));
      target_page_scroll = '#section2';
      page_scroll_done = function() {
        $('a.pagenext').css('visibility', 'hidden');
        $('#section1').hide();
        enable_caret_browsing($('#section2'));
        window.scrollTo(0, 0);
        jsSeedToKeys();
        jsViewSelector(5);
        page_scroll_done = function() {};
      }
    
    }
    
    if ((key_card_fulfill_11086087[0] || passphrase_fulfill_11086088[0])) {
          disable_caret_browsing($('#section3'));
      target_page_scroll = '#section3';
      page_scroll_done = function() {
        var wallet = pastel.wallet;
        var ret = wallet.lockShieldedKeys();
        if(!ret) {
          Notify.show(__t('Error'), __t('Failed to lock keys.'), Notify.msgtype.error);
        }
        jsClearSensitive();
        $('a.pagenext').css('visibility', 'hidden');
        $('#section2').hide();
        enable_caret_browsing($('#section3'));
        window.scrollTo(0, 0);
        jsViewSelector(12);
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        }
        page_scroll_done = function() {};
      }
    
    }
    
    if ((((show_scan_result_11086077[0] || mnemonic_fulfill_11086086[0]) || key_card_fulfill_11086087[0]) || passphrase_fulfill_11086088[0])) {
          for(var i in registerEventList) {
        var ev = registerEventList[i];
        ev.elm.removeEventListener(ev.type, ev.cb);
      }
      var elms = document.querySelectorAll('a.pagenext');
      Array.prototype.forEach.call(elms, function(elm) {
        var href = elm.getAttribute("href");
        if(href && href.startsWith('#')) {
          var cb = function(e) {
            e.preventDefault();
            var href = this.getAttribute('href');
            if(href == '#section2') {
              goSection(href, page_scroll_done);
            } else if(href == '#section3') {
              goSection(href, page_scroll_done);
            }
          }
          registerEventList.push({elm: elm, type: 'click', cb: cb});
          elm.addEventListener('click', cb);
        }
      });
    
    }
    
    if ((show_page2_11086083[0] && !(passphrase_fulfill_11086088[0]))) {
          $('input[name="input-passphrase"]').focus();
    
    }
    
    if (show_page4_11086085[0]) {
          pastel.utxoballs.pause();
      //$.fn.visibility.settings.silent = true;
      $('.backpage').visibility({
        type: 'fixed',
        offset: 0
      });
    
    if (show_trade_logs_11086092[0]) {
            TradeLogs.start();
      
    }
    
    if (show_settings_11086093[0]) {
            Settings.init();
      
    }
    
          goSection('#section4', function() {
        disable_caret_browsing($('#section3'));
        target_page_scroll = '#section3';
        page_scroll_done = function() {
          TradeLogs.stop();
          $('.backpage').visibility({silent: true});
          $('#tradeunconfs').empty();
          $('#tradelogs').empty();
          $('#section4').hide();
          enable_caret_browsing($('#section3'));
          window.scrollTo(0, 0);
          setSupressRedraw(false);
          reloadViewSafeStart();
          jsViewSelector(12);
          page_scroll_done = function() {};
          pastel.utxoballs.resume();
          show_page4_11086085[0] = false;
          $('#bottom-blink').fadeIn(100).fadeOut(400);
        }
      });
    
    }
    else {
            $('#section4').hide();
    
    }
    
    if ((show_page3_11086084[0] || show_page4_11086085[0])) {
          reloadViewSafeEnd();
    
    }
    

  
}
var wallet_setup_12155017 = [false];
  var stor  = new Stor();
  var xpubs = stor.get_xpubs();
  stor = null;
  if(xpubs.length > 0) {
    wallet_setup_12155017[0] = true;
    function check_stream_ready() {
      setTimeout(function() {
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        } else {
          check_stream_ready();
        }
      }, 50);
    }
    check_stream_ready();
  }

if (wallet_setup_12155017[0]) {
view_selector_11086137(12, true);
}

app_inst_11086027[0] = set_initializer_10790032(app_main_11915014, "main", after_script_12150051);
