/* Generated by the Nim Compiler v1.6.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI469762586 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762672 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762661 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI469762639 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762601 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762549 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762512 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762505 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762714 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762703 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306706 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1006633032 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1006633039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638077 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI637534477 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762282 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762281 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI469762347 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762336 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762266 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI469762265 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI469762325 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762289 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI603979783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865892 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865893 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI637534320 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI637534319 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI637534214 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI637534309 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI637534305 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI637534312 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI637534311 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI637534211 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI637534310 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI637534307 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420405 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420403 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420402 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420401 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420394 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420393 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420391 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420390 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420389 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420293 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420336 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420473 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI721420472 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420385 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420386 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420325 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420324 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420437 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420327 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420326 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420436 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420335 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420334 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420434 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420329 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420328 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420432 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420439 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420331 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420330 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420438 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI721420442 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420333 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420332 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI721420306 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420305 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420313 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420312 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420311 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420310 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420307 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI721420431 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420430 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420429 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420309 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420308 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI603979781 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI603979782 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420337 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI687865863 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865864 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NNI687865863 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI687865863.node = NNI687865863;
NTI687865864.base = NTI687865863;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI721420337 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554440, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554440, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554440, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554440, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554440, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554440, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554440, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554440, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554440, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554440, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554440, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554440, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554440, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554440, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554440, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554440, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554440, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554440, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554440, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554440, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554440, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554440, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554440, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554440, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554440, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554440, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554440, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554440, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554440, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554440, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554440, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554440, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554440, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554440, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554440, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554440, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554440, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554440, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554440, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554440, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554440, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554440, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554440, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554440, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554440, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554440, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554440, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554440, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554440, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554440, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554440, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554440, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554440, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554440, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554440, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554440, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554440, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554440, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554440, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554440, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554440, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554440, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554440, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554440, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554440, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554440, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554440, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554440, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554440, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554440, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554440, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554440, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554440, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554440, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554440, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554440, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554440, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554440, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554440, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554440, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554440, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554440, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554440, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554440, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554440, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554440, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554440, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554440, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554440, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554440, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554440, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554440, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554440, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554440, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554440, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554440, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554440, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554440, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554440, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554440, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554440, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554440, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554440, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554440, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554440, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554440, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554440, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554440, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554440, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554440, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554440, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554440, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554440, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554440, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554440, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554440, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554440, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554440, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554440, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554440, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554440, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554440, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554440, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554440, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554440, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554440, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554440, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554440, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554440, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554440, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554440, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554440, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554440, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554440, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554440, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554440, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554440, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554440, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554440, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554440, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554440, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554440, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554440, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554440, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554440, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554440, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554440, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554440, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554440, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554440, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554440, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554440, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554440, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554440, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554440, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554440, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554440, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554440, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554440, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554440, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554440, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554440, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554440, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554440, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554440, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554440, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554440, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554440, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554440, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554440, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554440, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554440, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554440, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554440, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554440, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554440, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554440, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554440, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554440, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554440, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554440, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554440, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554440, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554440, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554440, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554440, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554440, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554440, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554440, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554440, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554440, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554440, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554440, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554440, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554440, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554440, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554440, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554440, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554440, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554440, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554440, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554440, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554440, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554440, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554440, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554440, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554440, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554440, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554440, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554440, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554440, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554440, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554440, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554440, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554440, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554440, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554440, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554440, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554440, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554440, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554440, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554440, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554440, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554440, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554440, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554440, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554440, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554440, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554440, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554440, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554440, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554440, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554440, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554440, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554440, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554440, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554440, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554440, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554440, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554440, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554440, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554440, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554440, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554440, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554440, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554440, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554440, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554440, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554440, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554440, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554440, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554440, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554440, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554440, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554440, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554440, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554440, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554440, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554440, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554440, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554440, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554440, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554440, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554440, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554440, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554440, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554440, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554440, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554440, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554440, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554440, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554440, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554440, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554440, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554440, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554440, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554440, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554440, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554440, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554440, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554440, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554440, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554440, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554440, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554440, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554440, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554440, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554440, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554440, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554440, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554440, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554440, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554440, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554440, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554440, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554440, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554440, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554440, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554440, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554440, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554440, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554440, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554440, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554440, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554440, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554440, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554440, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554440, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554440, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554440, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554440, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554440, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554440, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554440, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554440, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554440, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554440, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554440, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554440, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554440, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554440, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554440, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554440, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554440, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554440, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554440, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554440, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554440, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554440, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554440, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554440, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554440, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554440, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554440, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554440, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554440, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554440, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554440, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554440, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554440, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554440, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554440, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554440, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554440, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554440, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554440, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554440, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554440, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554440, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554440, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554440, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554440, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554440, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554440, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554440, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554440, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554440, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554440, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554440, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554440, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554440, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554440, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554440, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554440, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554440, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554440, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554440, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554440, name: "zIndex", sons: null}]};
NTI721420337.node = NNI721420337;
NTI721420337.base = NTI33555083;
var NNI603979781 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI603979781, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI603979781, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI603979781, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI603979781, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI603979781, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI603979781, name: "pkSame", len: 0, sons: null}}};
NTI603979781.node = NNI603979781;
NTI721420429.base = NTI721420308;
NTI721420430.base = NTI721420308;
NTI721420431.base = NTI721420308;
var NNI721420307 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI721420307, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI721420307, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI721420307, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI721420307, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI721420307, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI721420307, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI721420307, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI721420307, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI721420307, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI721420307, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI721420307, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI721420307, name: "NotationNode", len: 0, sons: null}}};
NTI721420307.node = NNI721420307;
var NNI721420306 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI721420306.node = NNI721420306;
NTI721420306.base = NTI33555083;
NTI721420305.base = NTI721420306;
NTI721420442.base = NTI721420312;
var NNI721420333 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554440, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554440, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554440, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI721420442, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554440, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554440, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554456, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554440, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554440, name: "target", sons: null}]};
NTI721420333.node = NNI721420333;
NTI721420333.base = NTI721420313;
NTI721420332.base = NTI721420333;
var NNI721420331 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554456, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554440, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554440, name: "value", sons: null}]};
NTI721420331.node = NNI721420331;
NTI721420331.base = NTI721420313;
NTI721420330.base = NTI721420331;
NTI721420438.base = NTI721420330;
NTI721420439.base = NTI721420330;
var NNI721420313 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554440, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI721420305, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554440, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI721420332, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI721420438, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI721420439, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554456, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554456, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554440, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554440, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554456, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554456, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554456, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554456, name: "offsetTop", sons: null}]};
NTI721420313.node = NNI721420313;
NTI721420313.base = NTI721420309;
NTI721420312.base = NTI721420313;
var NNI721420329 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554440, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554456, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554456, name: "y", sons: null}]};
NTI721420329.node = NNI721420329;
NTI721420329.base = NTI721420313;
NTI721420328.base = NTI721420329;
NTI721420432.base = NTI721420328;
NTI721420433.base = NTI721420332;
var NNI721420335 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554456, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554456, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554456, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554440, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554440, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554456, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554456, name: "width", sons: null}]};
NTI721420335.node = NNI721420335;
NTI721420335.base = NTI721420313;
NTI721420334.base = NTI721420335;
NTI721420434.base = NTI721420334;
NTI721420435.base = NTI721420312;
var NNI721420327 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554456, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554456, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554440, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554456, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554440, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554456, name: "vspace", sons: null}]};
NTI721420327.node = NNI721420327;
NTI721420327.base = NTI721420313;
NTI721420326.base = NTI721420327;
NTI721420436.base = NTI721420326;
var NNI721420325 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554440, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554440, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554456, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554456, name: "y", sons: null}]};
NTI721420325.node = NNI721420325;
NTI721420325.base = NTI721420313;
NTI721420324.base = NTI721420325;
NTI721420437.base = NTI721420324;
var NNI721420472 = {kind: 1, offset: "then", len: 0, typ: NTI721420473, name: "then", sons: null};
NTI721420472.node = NNI721420472;
NTI721420385.base = NTI721420472;
var NNI721420475 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI721420385, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI721420476, name: "onloadingdone", sons: null}]};
NTI721420475.node = NNI721420475;
NTI721420386.base = NTI721420475;
var NNI721420311 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI721420312, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI721420312, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554440, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554440, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI721420312, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554440, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554440, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554440, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554440, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI721420312, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554440, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554440, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554440, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554440, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554440, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554440, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI721420432, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI721420433, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI721420434, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI721420435, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI721420436, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI721420437, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI721420386, name: "fonts", sons: null}]};
NTI721420311.node = NNI721420311;
NTI721420311.base = NTI721420309;
NTI721420310.base = NTI721420311;
NTI721420336.base = NTI721420337;
var NNI721420309 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI721420429, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI721420430, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI721420431, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554440, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI721420308, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI721420308, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI721420308, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554440, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI721420307, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554440, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI721420308, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI721420308, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI721420308, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI721420310, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554440, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554440, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554440, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554440, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI721420336, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554440, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI721420312, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI721420309.node = NNI721420309;
var NNI721420293 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI721420388, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI721420389, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI721420390, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI721420391, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI721420392, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI721420393, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI721420394, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI721420395, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI721420396, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI721420397, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI721420398, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI721420399, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI721420400, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI721420401, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI721420402, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI721420403, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI721420404, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI721420405, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI721420406, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI721420407, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI721420408, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI721420409, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI721420410, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI721420411, name: "onloadend", sons: null}]};
NTI721420293.node = NNI721420293;
NTI721420293.base = NTI33555083;
NTI721420309.base = NTI721420293;
NTI721420308.base = NTI721420309;
var NNI637534211 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI637534211, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI637534211, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI637534211, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI637534211, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI637534211, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI637534211, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI637534211, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI637534211, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI637534211, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI637534211, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI637534211, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI637534211, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI637534211, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI637534211, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI637534211, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI637534211, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI637534211, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI637534211, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI637534211, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI637534211, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI637534211, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI637534211, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI637534211, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI637534211, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI637534211, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI637534211, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI637534211, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI637534211, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI637534211, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI637534211, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI637534211, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI637534211, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI637534211, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI637534211, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI637534211, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI637534211, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI637534211, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI637534211, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI637534211, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI637534211, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI637534211, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI637534211, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI637534211, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI637534211, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI637534211, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI637534211, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI637534211, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI637534211, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI637534211, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI637534211, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI637534211, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI637534211, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI637534211, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI637534211, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI637534211, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI637534211, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI637534211, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI637534211, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI637534211, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI637534211, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI637534211, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI637534211, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI637534211, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI637534211, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI637534211, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI637534211, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI637534211, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI637534211, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI637534211, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI637534211, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI637534211, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI637534211, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI637534211, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI637534211, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI637534211, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI637534211, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI637534211, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI637534211, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI637534211, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI637534211, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI637534211, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI637534211, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI637534211, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI637534211, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI637534211, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI637534211, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI637534211, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI637534211, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI637534211, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI637534211, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI637534211, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI637534211, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI637534211, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI637534211, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI637534211, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI637534211, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI637534211, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI637534211, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI637534211, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI637534211, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI637534211, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI637534211, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI637534211, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI637534211, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI637534211, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI637534211, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI637534211, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI637534211, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI637534211, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI637534211, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI637534211, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI637534211, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI637534211, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI637534211, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI637534211, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI637534211, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI637534211, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI637534211, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI637534211, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI637534211, name: "menu", len: 0, sons: null}}};
NTI637534211.node = NNI637534211;
NTI637534311.base = NTI637534307;
NTI637534312.base = NTI33554440;
var NNI637534214 = {kind: 2, offset: 0, typ: null, name: null, len: 32, sons: {"0": {kind: 1, offset: 0, typ: NTI637534214, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI637534214, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI637534214, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI637534214, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI637534214, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI637534214, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI637534214, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI637534214, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI637534214, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI637534214, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI637534214, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI637534214, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI637534214, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI637534214, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI637534214, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI637534214, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI637534214, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI637534214, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI637534214, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI637534214, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI637534214, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI637534214, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI637534214, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI637534214, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI637534214, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI637534214, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI637534214, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI637534214, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI637534214, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI637534214, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI637534214, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI637534214, name: "onload", len: 0, sons: null}}};
NTI637534214.node = NNI637534214;
var NNI637534309 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534214, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI637534319, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI637534320, name: "Field2", sons: null}]};
NTI637534309.node = NNI637534309;
NTI637534305.base = NTI637534309;
var NNI687865892 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI687865892.node = NNI687865892;
NTI687865893.base = NTI687865892;
var NNI637534310 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI637534211, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI33554456, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554440, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI33554440, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554440, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI637534311, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI637534312, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI637534305, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI687865893, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI721420308, name: "dom", sons: null}]};
NTI637534310.node = NNI637534310;
NTI637534310.base = NTI33555083;
NTI637534307.base = NTI637534310;
var NNI603979782 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI603979781, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI721420308, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI721420308, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI637534307, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI637534307, name: "oldNode", sons: null}]};
NTI603979782.node = NNI603979782;
var NNI603979783 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI637534307, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI637534307, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554456, name: "pos", sons: null}]};
NTI603979783.node = NNI603979783;
NTI469762289.base = NTI33554440;
var NNI469762266 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seed", len: 0, typ: NTI33554440, name: "seed", sons: null}, 
{kind: 1, offset: "gen", len: 0, typ: NTI33554440, name: "gen", sons: null}, 
{kind: 1, offset: "tag", len: 0, typ: NTI33554440, name: "tag", sons: null}, 
{kind: 1, offset: "orig", len: 0, typ: NTI33554440, name: "orig", sons: null}, 
{kind: 1, offset: "sv", len: 0, typ: NTI33554440, name: "sv", sons: null}]};
NTI469762266.node = NNI469762266;
NTI469762265.base = NTI469762266;
NTI469762325.base = NTI469762265;
NTI469762336.base = NTI33554440;
NTI469762282.base = NTI33554440;
var NNI469762281 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554440, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554466, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI469762282, name: "Field3", sons: null}]};
NTI469762281.node = NNI469762281;
NTI469762347.base = NTI469762281;
NTI637534477.base = NTI33554440;
var NNI855638077 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI855638077.node = NNI855638077;
var NNI1006633039 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1006633032, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI1006633039.node = NNI1006633039;
NTI805306706.base = NTI33554439;
NTI469762703.base = NTI33554440;
NTI469762714.base = NTI469762281;
NTI469762505.base = NTI469762281;
NTI469762512.base = NTI33554440;
NTI469762538.base = NTI33554440;
NTI469762549.base = NTI33554440;
NTI469762601.base = NTI469762281;
NTI469762615.base = NTI33554440;
NTI469762639.base = NTI33554440;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
NTI469762661.base = NTI469762281;
NTI469762672.base = NTI33554440;
NTI469762586.base = NTI33554440;

function arrayConstr(len_33557180, value_33557181, typ_33557182) {
        var result = new Array(len_33557180);
    for (var i = 0; i < len_33557180; ++i) result[i] = nimCopy(null, value_33557181, typ_33557182);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557141, src_33557142, ti_33557143) {
  var result_33557152 = null;

    switch (ti_33557143.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557132(ti_33557143))) {
      result_33557152 = src_33557142;
      }
      else {
        result_33557152 = [src_33557142[0], src_33557142[1]];
      }
      
      break;
    case 19:
            if (dest_33557141 === null || dest_33557141 === undefined) {
        dest_33557141 = {};
      }
      else {
        for (var key in dest_33557141) { delete dest_33557141[key]; }
      }
      for (var key in src_33557142) { dest_33557141[key] = src_33557142[key]; }
      result_33557152 = dest_33557141;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557143.base == null))) {
      result_33557152 = nimCopy(dest_33557141, src_33557142, ti_33557143.base);
      }
      else {
      if ((ti_33557143.kind == 17)) {
      result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {m_type: ti_33557143} : dest_33557141;
      }
      else {
        result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {} : dest_33557141;
      }
      }
      nimCopyAux(result_33557152, src_33557142, ti_33557143.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557142 === null) {
        result_33557152 = null;
      }
      else {
        if (dest_33557141 === null || dest_33557141 === undefined || dest_33557141.length != src_33557142.length) {
          dest_33557141 = new Array(src_33557142.length);
        }
        result_33557152 = dest_33557141;
        for (var i = 0; i < src_33557142.length; ++i) {
          result_33557152[i] = nimCopy(result_33557152[i], src_33557142[i], ti_33557143.base);
        }
      }
    
      break;
    case 28:
            if (src_33557142 !== null) {
        result_33557152 = src_33557142.slice(0);
      }
    
      break;
    default: 
      result_33557152 = src_33557142;
      break;
    }

  return result_33557152;

}

function makeNimstrLit(c_33556802) {
      var result = [];
  for (var i = 0; i < c_33556802.length; ++i) {
    result[i] = c_33556802.charCodeAt(i);
  }
  return result;
  

  
}

function mnewString(len_33556894) {
        return new Array(len_33556894);
  

  
}

function toJSStr(s_33556808) {
                    var Temporary5;
            var Temporary7;

  var result_33556809 = null;

    var res_33556843 = newSeq_33556826((s_33556808).length);
    var i_33556844 = 0;
    var j_33556845 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556844 < (s_33556808).length)) break Label2;
          var c_33556846 = s_33556808[i_33556844];
          if ((c_33556846 < 128)) {
          res_33556843[j_33556845] = String.fromCharCode(c_33556846);
          i_33556844 += 1;
          }
          else {
            var helper_33556858 = newSeq_33556826(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556859 = c_33556846.toString(16);
                  if ((((code_33556859) == null ? 0 : (code_33556859).length) == 1)) {
                  helper_33556858.push("%0");;
                  }
                  else {
                  helper_33556858.push("%");;
                  }
                  
                  helper_33556858.push(code_33556859);;
                  i_33556844 += 1;
                    if (((s_33556808).length <= i_33556844)) Temporary5 = true; else {                      Temporary5 = (s_33556808[i_33556844] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556846 = s_33556808[i_33556844];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556843[j_33556845] = decodeURIComponent(helper_33556858.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556843[j_33556845] = helper_33556858.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556845 += 1;
        }
    } while (false);
    if (res_33556843.length < j_33556845) { for (var i = res_33556843.length ; i < j_33556845 ; ++i) res_33556843.push(null); }
               else { res_33556843.length = j_33556845; };
    result_33556809 = res_33556843.join("");

  return result_33556809;

}

function raiseException(e_33556668, ename_33556669) {
    e_33556668.name = ename_33556669;
    if ((excHandler == 0)) {
    unhandledException(e_33556668);
    }
    
    throw e_33556668;

  
}

function addInt(a_33556941, b_33556942) {
        var result = a_33556941 + b_33556942;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557190, a_33557191, b_33557192) {
      var Temporary1;

  var result_33557193 = 0;

  BeforeRet: do {
      if (!(a_33557191 <= i_33557190)) Temporary1 = false; else {        Temporary1 = (i_33557190 <= b_33557192);      }    if (Temporary1) {
    result_33557193 = i_33557190;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557193;

}

function chckIndx(i_33557185, a_33557186, b_33557187) {
      var Temporary1;

  var result_33557188 = 0;

  BeforeRet: do {
      if (!(a_33557186 <= i_33557185)) Temporary1 = false; else {        Temporary1 = (i_33557185 <= b_33557187);      }    if (Temporary1) {
    result_33557188 = i_33557185;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557185, a_33557186, b_33557187);
    }
    
  } while (false);

  return result_33557188;

}

function subInt(a_33556945, b_33556946) {
        var result = a_33556945 - b_33556946;
    checkOverflowInt(result);
    return result;
  

  
}

function mulInt(a_33556949, b_33556950) {
        var result = a_33556949 * b_33556950;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556805) {
      var ln = c_33556805.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556805.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556805.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
      var toTag_637534463 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var toEventName_637534464 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load"];

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimMin(a_33556995, b_33556996) {
    var Temporary1;

  var result_33556997 = 0;

  BeforeRet: do {
    if ((a_33556995 <= b_33556996)) {
    Temporary1 = a_33556995;
    }
    else {
    Temporary1 = b_33556996;
    }
    
    result_33556997 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556997;

}

function nimMax(a_33556999, b_33557000) {
    var Temporary1;

  var result_33557001 = 0;

  BeforeRet: do {
    if ((b_33557000 <= a_33556999)) {
    Temporary1 = a_33556999;
    }
    else {
    Temporary1 = b_33557000;
    }
    
    result_33557001 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557001;

}

function modInt(a_33556957, b_33556958) {
        if (b_33556958 == 0) raiseDivByZero();
    if (b_33556958 == -1 && a_33556957 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556957 % b_33556958);
  

  
}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var gid_637534725 = [0];
var objectID_1174405282 = [0];
var vcomponents_671088653 = [{}];
var kxi_603979840 = [null];
var currentLanguage_1325400068 = [55];

function isFatPointer_33557132(ti_33557133) {
  var result_33557134 = false;

  BeforeRet: do {
    result_33557134 = !((ConstSet1[ti_33557133.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557134;

}

function nimCopyAux(dest_33557145, src_33557146, n_33557147) {
    switch (n_33557147.kind) {
    case 0:
      break;
    case 1:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557147.sons.length; i++) {
      nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i]);
    }
    
      break;
    case 3:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
      for (var i = 0; i < n_33557147.sons.length; ++i) {
        nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i][1]);
      }
    
      break;
    }

  
}
var translations_1325400109 = [arrayConstr(202, null, NTI687865864)];

function add_33556420(x_33556421, x_33556421_Idx, y_33556422) {
          if (x_33556421[x_33556421_Idx] === null) { x_33556421[x_33556421_Idx] = []; }
      var off = x_33556421[x_33556421_Idx].length;
      x_33556421[x_33556421_Idx].length += y_33556422.length;
      for (var i = 0; i < y_33556422.length; ++i) {
        x_33556421[x_33556421_Idx][off+i] = y_33556422.charCodeAt(i);
      }
    

  
}

function newSeq_33556826(len_33556828) {
  var result_33556829 = [];

    result_33556829 = new Array(len_33556828); for (var i = 0 ; i < len_33556828 ; ++i) { result_33556829[i] = null; }
  return result_33556829;

}

function unhandledException(e_33556664) {
    var buf_33556665 = [[]];
    if (!(((e_33556664.message).length == 0))) {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556665[0].push.apply(buf_33556665[0], e_33556664.message);;
    }
    else {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit(" ["));;
    add_33556420(buf_33556665, 0, e_33556664.name);
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556666 = toJSStr(buf_33556665[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556666);
  }
  else {
    throw cbuf_33556666;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556939) {
        if (a_33556939 > 2147483647 || a_33556939 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_469762081 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762081 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_469762081;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_469762081 = addInt(i_469762081, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function raiseIndexError(i_33556755, a_33556756, b_33556757) {
    var Temporary1;

    if ((b_33556757 < a_33556756)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556755) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556756) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556757) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addTranslation_1325400122(lang_1325400123, key_1325400124, val_1325400125) {
    if ((translations_1325400109[0][chckIndx(lang_1325400123, 0, (translations_1325400109[0]).length - 1)] == null)) {
    translations_1325400109[0][chckIndx(lang_1325400123, 0, (translations_1325400109[0]).length - 1)] = {};
    }
    
    translations_1325400109[0][chckIndx(lang_1325400123, 0, (translations_1325400109[0]).length - 1)][key_1325400124] = val_1325400125;

  
}

function add_1325400206(x_1325400208, y_1325400209) {
    Label1: do {
      var i_1325400214 = 0;
      var colontmp__469762090 = 0;
      colontmp__469762090 = ((y_1325400209) == null ? 0 : (y_1325400209).length);
      var i_469762091 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762091 < colontmp__469762090)) break Label3;
            i_1325400214 = i_469762091;
            x_1325400208.push(String.fromCharCode(y_1325400209.charCodeAt(i_1325400214)));
            i_469762091 = addInt(i_469762091, 1);
          }
      } while (false);
    } while (false);

  
}

function raiseInvalidFormat_1325400161(errmsg_1325400162) {
    raiseException({message: nimCopy(null, errmsg_1325400162, NTI33554439), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function parseChoice_1325400171(f_1325400172, i_1325400173, choice_1325400174, r_1325400176) {
                var Temporary5;
                var Temporary6;
                var Temporary9;
                var Temporary10;

    var i_1325400177 = i_1325400173;
    Label1: do {
        Label2: while (true) {
        if (!(i_1325400177 < ((f_1325400172) == null ? 0 : (f_1325400172).length))) break Label2;
          var n_1325400178 = 0;
          var oldI_1325400179 = i_1325400177;
          var toAdd_1325400180 = false;
          Label3: do {
              Label4: while (true) {
                if (!(i_1325400177 < ((f_1325400172) == null ? 0 : (f_1325400172).length))) Temporary6 = false; else {                  Temporary6 = (48 <= f_1325400172.charCodeAt(i_1325400177));                }                if (!Temporary6) Temporary5 = false; else {                  Temporary5 = (f_1325400172.charCodeAt(i_1325400177) <= 57);                }              if (!Temporary5) break Label4;
                n_1325400178 = subInt(addInt(mulInt(n_1325400178, 10), f_1325400172.charCodeAt(i_1325400177)), 48);
                i_1325400177 = addInt(i_1325400177, 1);
              }
          } while (false);
          if (!((oldI_1325400179 == i_1325400177))) {
          if ((f_1325400172.charCodeAt(i_1325400177) == 58)) {
          i_1325400177 = addInt(i_1325400177, 1);
          }
          else {
          raiseInvalidFormat_1325400161(makeNimstrLit("\':\' after number expected"));
          }
          
          toAdd_1325400180 = (choice_1325400174 == n_1325400178);
          }
          else {
            toAdd_1325400180 = true;
          }
          
          Label7: do {
              Label8: while (true) {
                if (!(i_1325400177 < ((f_1325400172) == null ? 0 : (f_1325400172).length))) Temporary10 = false; else {                  Temporary10 = !((f_1325400172.charCodeAt(i_1325400177) == 93));                }                if (!Temporary10) Temporary9 = false; else {                  Temporary9 = !((f_1325400172.charCodeAt(i_1325400177) == 124));                }              if (!Temporary9) break Label8;
                if (toAdd_1325400180) {
                r_1325400176.push(String.fromCharCode(f_1325400172.charCodeAt(i_1325400177)));
                }
                
                i_1325400177 = addInt(i_1325400177, 1);
              }
          } while (false);
          if (toAdd_1325400180) {
          break Label1;
          }
          
          i_1325400177 = addInt(i_1325400177, 1);
        }
    } while (false);

  
}

function HEX25_1325400215(formatString_1325400216, args_1325400217) {
                  var Temporary5;
            var Temporary6;
                  var Temporary9;
                    var Temporary12;
              var Temporary13;

  var result_1325400218 = null;

    var f_1325400219 = formatString_1325400216;
    var i_1325400220 = 0;
    var num_1325400221 = 0;
    var r_1325400225 = new Array(0);
    Label1: do {
        Label2: while (true) {
        if (!(i_1325400220 < ((f_1325400219) == null ? 0 : (f_1325400219).length))) break Label2;
          if (((f_1325400219.charCodeAt(i_1325400220) == 36) && (addInt(i_1325400220, 1) < ((f_1325400219) == null ? 0 : (f_1325400219).length)))) {
          i_1325400220 = addInt(i_1325400220, 1);
          switch (f_1325400219.charCodeAt(i_1325400220)) {
          case 35:
            add_1325400206(r_1325400225, args_1325400217[chckIndx(num_1325400221, 0, (args_1325400217).length - 1)]);
            i_1325400220 = addInt(i_1325400220, 1);
            num_1325400221 = addInt(num_1325400221, 1);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_1325400238 = 0;
            var negative_1325400239 = (f_1325400219.charCodeAt(i_1325400220) == 45);
            if (negative_1325400239) {
            i_1325400220 = addInt(i_1325400220, 1);
            }
            
            Label3: do {
                Label4: while (true) {
                  if (!(48 <= f_1325400219.charCodeAt(i_1325400220))) Temporary5 = false; else {                    Temporary5 = (f_1325400219.charCodeAt(i_1325400220) <= 57);                  }                if (!Temporary5) break Label4;
                  j_1325400238 = subInt(addInt(mulInt(j_1325400238, 10), f_1325400219.charCodeAt(i_1325400220)), 48);
                  i_1325400220 = addInt(i_1325400220, 1);
                }
            } while (false);
            if (!(negative_1325400239)) {
            Temporary6 = subInt(j_1325400238, 1);
            }
            else {
            Temporary6 = subInt((args_1325400217).length, j_1325400238);
            }
            
            var idx_1325400258 = Temporary6;
            add_1325400206(r_1325400225, args_1325400217[chckIndx(idx_1325400258, 0, (args_1325400217).length - 1)]);
            break;
          case 36:
            i_1325400220 = addInt(i_1325400220, 1);
            r_1325400225.push(36);
            break;
          case 91:
            var start_1325400267 = addInt(i_1325400220, 1);
            Label7: do {
                Label8: while (true) {
                  if (!(i_1325400220 < ((f_1325400219) == null ? 0 : (f_1325400219).length))) Temporary9 = false; else {                    Temporary9 = !((f_1325400219.charCodeAt(i_1325400220) == 93));                  }                if (!Temporary9) break Label8;
                  i_1325400220 = addInt(i_1325400220, 1);
                }
            } while (false);
            i_1325400220 = addInt(i_1325400220, 1);
            if ((((f_1325400219) == null ? 0 : (f_1325400219).length) <= i_1325400220)) {
            raiseInvalidFormat_1325400161(makeNimstrLit("\']\' expected"));
            }
            
            switch (f_1325400219.charCodeAt(i_1325400220)) {
            case 35:
              parseChoice_1325400171(f_1325400219, start_1325400267, parseInt(args_1325400217[chckIndx(num_1325400221, 0, (args_1325400217).length - 1)], 10), r_1325400225);
              i_1325400220 = addInt(i_1325400220, 1);
              num_1325400221 = addInt(num_1325400221, 1);
              break;
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 45:
              var j_1325400284 = 0;
              var negative_1325400285 = (f_1325400219.charCodeAt(i_1325400220) == 45);
              if (negative_1325400285) {
              i_1325400220 = addInt(i_1325400220, 1);
              }
              
              Label10: do {
                  Label11: while (true) {
                    if (!(48 <= f_1325400219.charCodeAt(i_1325400220))) Temporary12 = false; else {                      Temporary12 = (f_1325400219.charCodeAt(i_1325400220) <= 57);                    }                  if (!Temporary12) break Label11;
                    j_1325400284 = subInt(addInt(mulInt(j_1325400284, 10), f_1325400219.charCodeAt(i_1325400220)), 48);
                    i_1325400220 = addInt(i_1325400220, 1);
                  }
              } while (false);
              if (!(negative_1325400285)) {
              Temporary13 = subInt(j_1325400284, 1);
              }
              else {
              Temporary13 = subInt((args_1325400217).length, j_1325400284);
              }
              
              var idx_1325400303 = Temporary13;
              parseChoice_1325400171(f_1325400219, start_1325400267, parseInt(args_1325400217[chckIndx(idx_1325400303, 0, (args_1325400217).length - 1)], 10), r_1325400225);
              break;
            default: 
              raiseInvalidFormat_1325400161(makeNimstrLit("argument index expected after \']\'"));
              break;
            }
            break;
          default: 
            raiseInvalidFormat_1325400161(makeNimstrLit("\'#\', \'$\', or number expected"));
            break;
          }
          if (((i_1325400220 < ((f_1325400219) == null ? 0 : (f_1325400219).length)) && (f_1325400219.charCodeAt(i_1325400220) == 36))) {
          i_1325400220 = addInt(i_1325400220, 1);
          }
          
          }
          else {
            r_1325400225.push(String.fromCharCode(f_1325400219.charCodeAt(i_1325400220)));
            i_1325400220 = addInt(i_1325400220, 1);
          }
          
        }
    } while (false);
    result_1325400218 = r_1325400225.join("");

  return result_1325400218;

}

function translate_1325400138(x_1325400139) {
      var Temporary1;

  var result_1325400140 = null;

    var y_1325400141 = translations_1325400109[0][chckIndx(currentLanguage_1325400068[0], 0, (translations_1325400109[0]).length - 1)];
      if (!!((y_1325400141 == null))) Temporary1 = false; else {        Temporary1 = y_1325400141.hasOwnProperty(x_1325400139);      }    if (Temporary1) {
    result_1325400140 = y_1325400141[x_1325400139];
    }
    else {
      result_1325400140 = x_1325400139;
    }
    

  return result_1325400140;

}

function jstrans2_469762063(x_469762064, param_469762065) {
  var result_469762066 = null;

    result_469762066 = HEX25_1325400215(translate_1325400138(toJSStr(cstrToNimstr(x_469762064))), param_469762065);

  return result_469762066;

}

function jstrans1_469762060(x_469762061) {
  var result_469762062 = null;

    result_469762062 = translate_1325400138(toJSStr(cstrToNimstr(x_469762061)));

  return result_469762062;

}

function setCurrentLanguage_1325400102(newLanguage_1325400103) {
    currentLanguage_1325400068[0] = newLanguage_1325400103;

  
}

function setlang_469762067(lang_469762068) {
    if (lang_469762068.startsWith("ja")) {
    setCurrentLanguage_1325400102(111);
    }
    else {
    if (lang_469762068.startsWith("en")) {
    setCurrentLanguage_1325400102(55);
    }
    else {
    setCurrentLanguage_1325400102(55);
    }
    }
        if(pastel && pastel.utxoballs) {
      pastel.utxoballs.update();
    }
  

  
}

function getCurrentLanguage_1325400104() {
  var result_1325400105 = 0;

    result_1325400105 = currentLanguage_1325400068[0];

  return result_1325400105;

}

function getlang_469762069() {
    var Temporary1;

  var result_469762070 = null;

    var lang_469762071 = getCurrentLanguage_1325400104();
    if ((lang_469762071 == 111)) {
    Temporary1 = "ja";
    }
    else {
    Temporary1 = "en";
    }
    
    result_469762070 = Temporary1;

  return result_469762070;

}
addTranslation_1325400122(111, "Scan your seed cards or input your mnemonic to start.", "はじめるにはSeedカードを読み取るか、またはニーモニックを入力してしてください。");
addTranslation_1325400122(111, "Seed card", "Seedカード");
addTranslation_1325400122(111, "Mnemonic", "ニーモニック");
addTranslation_1325400122(111, "Scan seed card with camera", "カメラでSeedカードを読み取る");
addTranslation_1325400122(111, "Select mnemonic language", "ニーモニックの言語選択");
addTranslation_1325400122(111, "Japanese", "日本語");
addTranslation_1325400122(111, "English", "英語");
addTranslation_1325400122(111, "Import your mnemonic you already have", "所有しているニーモニックのインポート");
addTranslation_1325400122(111, "Check", "確認");
addTranslation_1325400122(111, "Advanced Check", "高度な確認");
addTranslation_1325400122(111, "Preparing Camera", "カメラの準備中");
addTranslation_1325400122(111, "Seed", "Seed");
addTranslation_1325400122(111, "unknown", "不明");
addTranslation_1325400122(111, "Seed Vector:", "Seedベクター:");
addTranslation_1325400122(111, "Type your seed vector", "Seedベクターを入力");
addTranslation_1325400122(111, "Next", "次へ");
addTranslation_1325400122(111, "Back", "戻る");
addTranslation_1325400122(111, "A key card or passphrase is required to encrypt and save the private key in your browser.\n You will need it before sending your coins.\n", "秘密鍵を暗号化しブラウザ内に保存するためにキーカードまたはパスフレーズを設定してください。\n キーカードまたはパスフレーズはコインを送信するときに必要になります。\n");
addTranslation_1325400122(111, "Key card", "キーカード");
addTranslation_1325400122(111, "Passphrase", "パスフレーズ");
addTranslation_1325400122(111, "Scan key card with camera", "カメラでキーカードを読み取る");
addTranslation_1325400122(111, "Input passphrase", "パスフレーズの入力");
addTranslation_1325400122(111, "Apply", "設定");
addTranslation_1325400122(111, "Scanned key card", "読み取ったキーカード");
addTranslation_1325400122(111, "Rescan", "再読み取り");
addTranslation_1325400122(111, "Send", "送信");
addTranslation_1325400122(111, "Receive", "受信");
addTranslation_1325400122(111, "Settings", "設定");
addTranslation_1325400122(111, "Logs", "履歴");
addTranslation_1325400122(111, "Send Coins", "コイン送信");
addTranslation_1325400122(111, "Locked", "ロック中");
addTranslation_1325400122(111, "Unlocked", "ロック解除済み");
addTranslation_1325400122(111, "Please unlock your wallet before sending coins.", "コインを送信する前にウォレットのロックを解除してください。");
addTranslation_1325400122(111, "Scan your key card", "キーカード読み取り");
addTranslation_1325400122(111, "Input your passphrase", "パスフレーズ入力");
addTranslation_1325400122(111, "Clear", "削除");
addTranslation_1325400122(111, "Scan QR Code", "QRコード読み取り");
addTranslation_1325400122(111, "-1 Ball", "-1 ボール");
addTranslation_1325400122(111, "+1 Ball", "+1 ボール");
addTranslation_1325400122(111, "Send Address", "送信アドレス");
addTranslation_1325400122(111, "Address", "アドレス");
addTranslation_1325400122(111, "Send", "送信");
addTranslation_1325400122(111, "Receive Address", "受信アドレス");
addTranslation_1325400122(111, "Copy", "コピー");
addTranslation_1325400122(111, "Copied to clipboard", "クリップボードにコピーしました。");
addTranslation_1325400122(111, "Create QR Code", "QRコード作成");
addTranslation_1325400122(111, "Amount", "数量");
addTranslation_1325400122(111, "Label", "ラベル");
addTranslation_1325400122(111, "Message", "メッセージ");
addTranslation_1325400122(111, "Cancel", "キャンセル");
addTranslation_1325400122(111, "Change-", "おつり-");
addTranslation_1325400122(111, "Too Much Balls", "多すぎるボール");
addTranslation_1325400122(111, "$#$ years ago", "$#$ 年前");
addTranslation_1325400122(111, "$#$ year ago", "$#$ 年前");
addTranslation_1325400122(111, "$#$ years $#$ months ago", "$#$ 年 $#$ヶ月前");
addTranslation_1325400122(111, "$#$ year $#$ months ago", "$#$ 年 $#$ヶ月前");
addTranslation_1325400122(111, "$#$ years $#$ month ago", "$#$ 年 $#$ヶ月前");
addTranslation_1325400122(111, "$#$ year $#$ month ago", "$#$ 年 $#$ヶ月前");
addTranslation_1325400122(111, "$#$ months ago", "$#$ ヶ月前");
addTranslation_1325400122(111, "$#$ month ago", "$#$ ヶ月前");
addTranslation_1325400122(111, "$#$ weeks ago", "$#$ 週間前");
addTranslation_1325400122(111, "$#$ week ago", "$#$ 週間前");
addTranslation_1325400122(111, "$#$ days ago", "$#$ 日前");
addTranslation_1325400122(111, "$#$ day ago", "$#$ 日前");
addTranslation_1325400122(111, "$#$ hours ago", "$#$ 時間前");
addTranslation_1325400122(111, "$#$ hour ago", "$#$ 時間前");
addTranslation_1325400122(111, "$#$ minutes ago", "$#$ 分前");
addTranslation_1325400122(111, "$#$ minute ago", "$#$ 分前");
addTranslation_1325400122(111, "just now", "新着");
addTranslation_1325400122(111, "SEND", "送信");
addTranslation_1325400122(111, "RECEIVE", "受信");
addTranslation_1325400122(111, "Confirmed", "確認済");
addTranslation_1325400122(111, "Unconfirmed", "未確認");
addTranslation_1325400122(111, "Reset Wallet", "ウォレットのリセット");
addTranslation_1325400122(111, "Are you sure to reset your wallet?", "本当にウォレットをリセットしますか？");
addTranslation_1325400122(111, "Reset", "リセット");
addTranslation_1325400122(111, "Delete all your wallet data in your web browser, including your encrypted secret keys.\n If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\n or mnemonics before deleting it. Otherwise you may lost your coins forever.\n", "ブラウザ内の暗号化した秘密鍵を含むすべてのウォレットデータを削除します。\n もしウォレットにコインが残っていたり、受信予定のコインがある場合は、削除前にSeedカードまたはニーモニックを持っていることを確認してください。\n そうしないとコインを永久に失うかもしれません。\n");
addTranslation_1325400122(111, "I confirmed that I have the seed cards or mnemonics or no coins in my wallet.", "私はSeedカードやニーモニックを持っています。またはウォレットにコインがありません。");
addTranslation_1325400122(111, "Confirmation", "確認");
addTranslation_1325400122(111, "Please read and check here before resetting your wallet.", "ウォレットをリセットする前に内容を読んでチェックをしてください。");
addTranslation_1325400122(111, "Error", "エラー");
addTranslation_1325400122(111, "Warning", "警告");
addTranslation_1325400122(111, "Unsupported seed card was scanned.", "サポートしていないシードカードを読み取りました。");
addTranslation_1325400122(111, "The seed card has already been scanned.", "すでに読み取り済みのシードカードです。");
addTranslation_1325400122(111, "Failed to lock your wallet with the key card.", "キーカードによるウォレットのロックに失敗しました。");
addTranslation_1325400122(111, "There are no misspellings, but some words seem to be wrong.", "不正なワードはありませんが、いくつかのワードが間違えています。");
addTranslation_1325400122(111, "Try to use [Advanced Check]", "[高度な確認] を試してみてください。");
addTranslation_1325400122(111, "Failed to lock your wallet with the passphrase.", "パスフレーズによるウォレットのロックに失敗しました。");
addTranslation_1325400122(111, "Failed to unlock. Wrong key card was scanned.", "ロック解除に失敗しました。 キーカードが間違えています。");
addTranslation_1325400122(111, "Failed to unlock. Passphrase is incorrect.", "ロック解除に失敗しました。 パスフレーズが間違えています。");
addTranslation_1325400122(111, "Failed to unlock. Camera error. Please connect the camera and reload the page.", "ロック解除に失敗しました。 カメラが利用できませんでした。 カメラを接続してページをリロードしてください。");
addTranslation_1325400122(111, "Camera error. Please connect the camera and reload the page.", "カメラが利用できませんでした。 カメラを接続してページをリロードしてください。");
addTranslation_1325400122(111, "Coins sent successfully.", "コインを送信しました。");
addTranslation_1325400122(111, "Failed to send coins.", "コインの送信に失敗しました。");
addTranslation_1325400122(111, "Address is invalid.", "アドレスが不正です。");
addTranslation_1325400122(111, "Balance is insufficient.", "残高が不足しています。");
addTranslation_1325400122(111, "Amount is zero.", "数量が 0 です。");
addTranslation_1325400122(111, "Amount is too small.", "数量が小さすぎます。");
addTranslation_1325400122(111, "Failed to send coins. Busy.", "コインの送信に失敗しました。 ビジー");
addTranslation_1325400122(111, "Server is not responding. Coins may have been sent.", "サーバーが応答しません。 コインの送信に成功している可能性もあります。");
addTranslation_1325400122(111, "Failed to send coins. Server error.", "コインの送信に失敗しました。 サーバーエラー");
addTranslation_1325400122(111, "Failed to send coins. Server is not responding.", "サーバーが応答しません。");
addTranslation_1325400122(111, "Amount is invalid. The decimal places is too long. Please set it 8 or less.", "数量が不正です。 小数点以下が長すぎます。 小数点以下の桁数は8以内にしてください。");
addTranslation_1325400122(111, "Amount is invalid.", "数量が不正です。");
addTranslation_1325400122(111, "Failed to lock keys.", "ロックに失敗しました。");
addTranslation_1325400122(111, "Language", "言語選択");
var __t = function(x, params) {
  if(params) {
    return jstrans2_469762063(x, params);
  } else {
    return jstrans1_469762060(x);
  }
};
var setlang = setlang_469762067;
var getlang = getlang_469762069;
var navlang = window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage;
(function() {
  var stor  = new Stor();
  var lang = stor.get_lang();
  stor = null;
  lang = lang || navlang || 'en';
  lang = lang.substring(0, 2);
  setlang(lang);
  LangSelector.show(lang);
})();

var appInst_469762098 = [null];
var currentImportType_469762108 = [0];
var currentProtectType_469762115 = [0];
var showScanSeedBtn_469762135 = [true];
var showScanning_469762136 = [true];
var showCamTools_469762137 = [true];
var showScanResult_469762138 = [false];
var showScanSeedBtn2_469762139 = [true];
var showScanning2_469762140 = [true];
var showCamTools2_469762141 = [true];
var showScanResult2_469762142 = [false];
var showPage1_469762143 = [true];
var showPage2_469762144 = [false];
var showPage3_469762145 = [false];
var showPage4_469762146 = [false];
var mnemonicFulfill_469762147 = [false];
var keyCardFulfill_469762148 = [false];
var passphraseFulfill_469762149 = [false];
var supressRedraw_469762150 = [false];
var showRecvAddressSelector_469762151 = [true];
var showRecvAddressModal_469762152 = [true];
var showTradeLogs_469762153 = [false];
var showSettings_469762154 = [false];
var jsViewSelector = function() {}


function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function valueHEX3D_637534533(n_637534534, v_637534535) {
    n_637534534.text = v_637534535;

  
}

function value_637534530(n_637534531) {
  var result_637534532 = null;

    result_637534532 = n_637534531.text;

  return result_637534532;

}

function addEventShell_603979868(d_603979869, name_603979870, h_603979871) {
    d_603979869.addEventListener(name_603979870, h_603979871, false);
    if ((d_603979869.karaxEvents == null)) {
    d_603979869.karaxEvents = new Array(0);
    }
    
    d_603979869.karaxEvents.push({Field0: name_603979870, Field1: h_603979871});

  
}

function wrapEvent_603979928(d_603979929, n_603979930, k_603979931, action_603979932) {
      
function laterWrapper_603979998() {
          
function HEX3Aanonymous_603980003(ev_603980004) {
              
function wrapper_603980005() {
                  var vHEX60gensym15_603980007 = ev_603980004.target.value;
                  valueHEX3D_637534533(n_603980001, vHEX60gensym15_603980007);
                  if (!(!((action_603980000 == null)))) {
                  failedAssertImpl_218103864(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_603980000(ev_603980004, n_603980001);
                  if (!((value_637534530(n_603980001) == vHEX60gensym15_603980007))) {
                  ev_603980004.target.value = value_637534530(n_603980001);
                  }
                  

                
              }

              if (!((timer_603980002 == null))) {
              clearTimeout(timer_603980002);
              }
              
              timer_603980002 = setTimeout(wrapper_603980005, 400);

            
          }

        var result_603979999 = null;

          var action_603980000 = action_603979932;
          var n_603980001 = n_603979930;
          var timer_603980002 = null;
          result_603979999 = HEX3Aanonymous_603980003;

        return result_603979999;

      }
      
function enterWrapper_603979972() {
          
function HEX3Aanonymous_603979976(ev_603979977) {
              if ((ev_603979977.keyCode == 13)) {
              var vHEX60gensym8_603979979 = ev_603979977.target.value;
              valueHEX3D_637534533(n_603979975, vHEX60gensym8_603979979);
              if (!(!((action_603979974 == null)))) {
              failedAssertImpl_218103864(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_603979974(ev_603979977, n_603979975);
              if (!((value_637534530(n_603979975) == vHEX60gensym8_603979979))) {
              ev_603979977.target.value = value_637534530(n_603979975);
              }
              
              }
              

            
          }

        var result_603979973 = null;

          var action_603979974 = action_603979932;
          var n_603979975 = n_603979930;
          result_603979973 = HEX3Aanonymous_603979976;

        return result_603979973;

      }
      
function stdWrapper_603979934() {
          
function HEX3Aanonymous_603979938(ev_603979939) {
                var Temporary1;
                var Temporary2;

                if ((n_603979937.kind == 111)) Temporary2 = true; else {                  Temporary2 = (n_603979937.kind == 105);                }                if (Temporary2) Temporary1 = true; else {                  Temporary1 = (n_603979937.kind == 107);                }              if (Temporary1) {
              var vHEX60gensym1_603979953 = ev_603979939.target.value;
              valueHEX3D_637534533(n_603979937, vHEX60gensym1_603979953);
              if (!(!((action_603979936 == null)))) {
              failedAssertImpl_218103864(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_603979936(ev_603979939, n_603979937);
              if (!((value_637534530(n_603979937) == vHEX60gensym1_603979953))) {
              ev_603979939.target.value = value_637534530(n_603979937);
              }
              
              }
              else {
              action_603979936(ev_603979939, n_603979937);
              }
              

            
          }

        var result_603979935 = null;

          var action_603979936 = action_603979932;
          var n_603979937 = n_603979930;
          result_603979935 = HEX3Aanonymous_603979938;

        return result_603979935;

      }

  var result_603979933 = null;

    switch (k_603979931) {
    case 30:
      result_603979933 = laterWrapper_603979998();
      addEventShell_603979868(d_603979929, "keyup", result_603979933);
      break;
    case 29:
      result_603979933 = enterWrapper_603979972();
      addEventShell_603979868(d_603979929, "keyup", result_603979933);
      break;
    default: 
      result_603979933 = stdWrapper_603979934();
      addEventShell_603979868(d_603979929, toEventName_637534464[chckIndx(k_603979931, 0, (toEventName_637534464).length - 1)], result_603979933);
      break;
    }

  return result_603979933;

}

function applyEvents_603980034(n_603980035) {
    var dest_603980036 = n_603980035.dom;
    Label1: do {
      var i_603980044 = 0;
      var colontmp__469762197 = 0;
      colontmp__469762197 = (n_603980035.events).length;
      var i_469762198 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762198 < colontmp__469762197)) break Label3;
            i_603980044 = i_469762198;
            n_603980035.events[chckIndx(i_603980044, 0, (n_603980035.events).length - 1)]["Field2"] = wrapEvent_603979928(dest_603980036, n_603980035, n_603980035.events[chckIndx(i_603980044, 0, (n_603980035.events).length - 1)]["Field0"], n_603980035.events[chckIndx(i_603980044, 0, (n_603980035.events).length - 1)]["Field1"]);
            i_469762198 = addInt(i_469762198, 1);
          }
      } while (false);
    } while (false);

  
}

function applyStyle_704643544(n_704643545, s_704643546) {
    n_704643545.style = {};
    Label1: do {
      var i_704643565 = 0;
      var colontmp__469762201 = 0;
      colontmp__469762201 = subInt(s_704643546.length, 1);
      var res_469762202 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762202 <= colontmp__469762201)) break Label3;
            i_704643565 = res_469762202;
            n_704643545.style[s_704643546[i_704643565]] = s_704643546[addInt(i_704643565, 1)];
            res_469762202 = addInt(res_469762202, 2);
          }
      } while (false);
    } while (false);

  
}

function toDom_603980062(n_603980063, useAttachedNode_603980064, kxi_603980065) {
      var Temporary9;
      var Temporary10;

  var result_603980066 = null;

  BeforeRet: do {
    if (useAttachedNode_603980064) {
    if (!((n_603980063.dom == null))) {
    if (!((n_603980063.id == null))) {
    kxi_603980065.byId[n_603980063.id] = n_603980063;
    }
    
    result_603980066 = n_603980063.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_603980063.kind == 0)) {
    result_603980066 = document.createTextNode(n_603980063.text);
    n_603980063.dom = result_603980066;
    if (!((n_603980063.id == null))) {
    kxi_603979840[0].byId[n_603980063.id] = n_603980063;
    }
    
    }
    else {
    if ((n_603980063.kind == 6)) {
    result_603980066 = document.createElement("div");
    result_603980066.innerHTML = n_603980063.text;
    n_603980063.dom = result_603980066;
    if (!((n_603980063.id == null))) {
    kxi_603979840[0].byId[n_603980063.id] = n_603980063;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_603980063.kind == 3)) {
    var x_603980106 = vcomponents_671088653[0][n_603980063.text](n_603980063.kids);
    result_603980066 = toDom_603980062(x_603980106, useAttachedNode_603980064, kxi_603980065);
    n_603980063.dom = result_603980066;
    if (!((n_603980063.id == null))) {
    kxi_603979840[0].byId[n_603980063.id] = n_603980063;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_603980063.kind == 4)) {
    result_603980066 = n_603980063.dom;
    if (!(!((result_603980066 == null)))) {
    failedAssertImpl_218103864(makeNimstrLit("karax.nim(176, 12) `result != nil` "));
    }
    
    n_603980063.dom = result_603980066;
    if (!((n_603980063.id == null))) {
    kxi_603979840[0].byId[n_603980063.id] = n_603980063;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_603980063.kind == 5)) {
    var x_603980136 = n_603980063;
    if (!((x_603980136.onAttachImpl == null))) {
    x_603980136.onAttachImpl(x_603980136);
    }
    
    if (!(!((x_603980136.renderImpl == null)))) {
    failedAssertImpl_218103864(makeNimstrLit("karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_603980136.expanded == null)) {
    x_603980136.expanded = x_603980136.renderImpl(x_603980136);
    }
    
    if (!(!((x_603980136.expanded == null)))) {
    failedAssertImpl_218103864(makeNimstrLit("karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    result_603980066 = toDom_603980062(x_603980136.expanded, useAttachedNode_603980064, kxi_603980065);
    n_603980063.dom = result_603980066;
    if (!((n_603980063.id == null))) {
    kxi_603979840[0].byId[n_603980063.id] = n_603980063;
    }
    
    break BeforeRet;
    }
    else {
      result_603980066 = document.createElement(toTag_637534463[chckIndx(n_603980063.kind, 0, (toTag_637534463).length - 1)]);
      n_603980063.dom = result_603980066;
      if (!((n_603980063.id == null))) {
      kxi_603979840[0].byId[n_603980063.id] = n_603980063;
      }
      
      Label1: do {
        var k_603980175 = null;
        Label2: do {
          var i_469762182 = 0;
          var colontmp__469762183 = 0;
          colontmp__469762183 = (n_603980063.kids).length;
          var i_469762184 = 0;
          Label3: do {
              Label4: while (true) {
              if (!(i_469762184 < colontmp__469762183)) break Label4;
                i_469762182 = i_469762184;
                k_603980175 = n_603980063.kids[chckIndx(i_469762182, 0, (n_603980063.kids).length - 1)];
                result_603980066.appendChild(toDom_603980062(k_603980175, useAttachedNode_603980064, kxi_603980065));
                i_469762184 = addInt(i_469762184, 1);
              }
          } while (false);
        } while (false);
      } while (false);
      if (!((n_603980063.text == null))) {
      result_603980066.value = n_603980063.text;
      }
      
    }
    }}}}
    if (!((n_603980063.id == null))) {
    result_603980066.id = n_603980063.id;
    }
    
    if (!((n_603980063.class == null))) {
    result_603980066.className = n_603980063.class;
    }
    
    Label5: do {
      var k_603980176 = null;
      var v_603980177 = null;
      Label6: do {
        var i_469762192 = 0;
        var colontmp__469762193 = 0;
        colontmp__469762193 = subInt((n_603980063.attrs).length, 2);
        var res_469762194 = 0;
        Label7: do {
            Label8: while (true) {
            if (!(res_469762194 <= colontmp__469762193)) break Label8;
              i_469762192 = res_469762194;
              k_603980176 = n_603980063.attrs[chckIndx(i_469762192, 0, (n_603980063.attrs).length - 1)];
              v_603980177 = n_603980063.attrs[chckIndx(addInt(i_469762192, 1), 0, (n_603980063.attrs).length - 1)];
              if (!((v_603980177 == null))) {
              result_603980066.setAttribute(k_603980176, v_603980177);
              }
              
              res_469762194 = addInt(res_469762194, 2);
            }
        } while (false);
      } while (false);
    } while (false);
    applyEvents_603980034(n_603980063);
      if (!!((kxi_603980065 == null))) Temporary10 = false; else {        Temporary10 = (n_603980063 == kxi_603980065.toFocusV);      }      if (!Temporary10) Temporary9 = false; else {        Temporary9 = (kxi_603980065.toFocus == null);      }    if (Temporary9) {
    kxi_603980065.toFocus = result_603980066;
    }
    
    if (!((n_603980063.style == null))) {
    applyStyle_704643544(result_603980066, n_603980063.style);
    }
    
  } while (false);

  return result_603980066;

}

function replaceById_603980275(id_603980276, newTree_603980277) {
    var x_603980278 = document.getElementById(id_603980276);
    x_603980278.parentNode.replaceChild(newTree_603980277, x_603980278);
    newTree_603980277.id = id_603980276;

  
}

function len_637534814(x_637534815) {
  var result_637534816 = 0;

    result_637534816 = (x_637534815.kids).length;

  return result_637534816;

}

function HEX5BHEX5D_637534821(x_637534822, idx_637534823) {
  var result_637534824 = null;

    result_637534824 = x_637534822.kids[chckIndx(idx_637534823, 0, (x_637534822.kids).length - 1)];

  return result_637534824;

}

function same_603980216(n_603980217, e_603980218, nesting_603980219) {
      var Temporary1;
      var Temporary2;

  var result_603980220 = false;

  BeforeRet: do {
    if (kxi_603979840[0].orphans.hasOwnProperty(n_603980217.id)) {
    result_603980220 = true;
    break BeforeRet;
    }
    
    if ((n_603980217.kind == 5)) {
    result_603980220 = same_603980216(n_603980217.expanded, e_603980218, addInt(nesting_603980219, 1));
    }
    else {
    if ((n_603980217.kind == 6)) {
    result_603980220 = true;
    }
    else {
      if ((n_603980217.kind == 3)) Temporary1 = true; else {        Temporary1 = (n_603980217.kind == 4);      }    if (Temporary1) {
    result_603980220 = true;
    }
    else {
    if ((toTag_637534463[chckIndx(n_603980217.kind, 0, (toTag_637534463).length - 1)] == e_603980218.nodeName)) {
    result_603980220 = true;
    if (!((n_603980217.kind == 0))) {
      if (!!((e_603980218.childNodes.length == len_637534814(n_603980217)))) Temporary2 = false; else {        Temporary2 = !((n_603980217.kind == 111));      }    if (Temporary2) {
    rawEcho(makeNimstrLit("expected "), HEX24_335544323(len_637534814(n_603980217)), makeNimstrLit(" real "), HEX24_335544323(e_603980218.childNodes.length), makeNimstrLit(" "), cstrToNimstr(toTag_637534463[chckIndx(n_603980217.kind, 0, (toTag_637534463).length - 1)]), makeNimstrLit(" nesting "), HEX24_335544323(nesting_603980219));
    result_603980220 = false;
    break BeforeRet;
    }
    
    Label3: do {
      var i_603980256 = 0;
      var colontmp__469762205 = 0;
      colontmp__469762205 = len_637534814(n_603980217);
      var i_469762206 = 0;
      Label4: do {
          Label5: while (true) {
          if (!(i_469762206 < colontmp__469762205)) break Label5;
            i_603980256 = i_469762206;
            if (!(same_603980216(HEX5BHEX5D_637534821(n_603980217, i_603980256), e_603980218.childNodes[i_603980256], addInt(nesting_603980219, 1)))) {
            result_603980220 = false;
            break BeforeRet;
            }
            
            i_469762206 = addInt(i_469762206, 1);
          }
      } while (false);
    } while (false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(toTag_637534463[chckIndx(n_603980217.kind, 0, (toTag_637534463).length - 1)]), makeNimstrLit(" DOM: "), cstrToNimstr(e_603980218.nodeName));
    }
    }}}
  } while (false);

  return result_603980220;

}

function eq_704643325(a_704643326, b_704643327) {
  var result_704643328 = false;

  BeforeRet: do {
    if ((a_704643326 == null)) {
    if ((b_704643327 == null)) {
    result_704643328 = true;
    break BeforeRet;
    }
    else {
      result_704643328 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_704643327 == null)) {
    result_704643328 = false;
    break BeforeRet;
    }
    }
    if (!((a_704643326.length == b_704643327.length))) {
    result_704643328 = false;
    break BeforeRet;
    }
    
    Label1: do {
      var i_704643363 = 0;
      var colontmp__469762232 = 0;
      colontmp__469762232 = a_704643326.length;
      var i_469762233 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762233 < colontmp__469762232)) break Label3;
            i_704643363 = i_469762233;
            if (!((a_704643326[i_704643363] == b_704643327[i_704643363]))) {
            result_704643328 = false;
            break BeforeRet;
            }
            
            i_469762233 = addInt(i_469762233, 1);
          }
      } while (false);
    } while (false);
    result_704643328 = true;
    break BeforeRet;
  } while (false);

  return result_704643328;

}

function sameAttrs_637534977(a_637534978, b_637534979) {
  var result_637534980 = false;

  BeforeRet: do {
    if (((a_637534978.attrs).length == (b_637534979.attrs).length)) {
    result_637534980 = true;
    Label1: do {
      var i_637534994 = 0;
      var colontmp__469762236 = 0;
      colontmp__469762236 = (a_637534978.attrs).length;
      var i_469762237 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762237 < colontmp__469762236)) break Label3;
            i_637534994 = i_469762237;
            if (!((a_637534978.attrs[chckIndx(i_637534994, 0, (a_637534978.attrs).length - 1)] == b_637534979.attrs[chckIndx(i_637534994, 0, (b_637534979.attrs).length - 1)]))) {
            result_637534980 = false;
            break BeforeRet;
            }
            
            i_469762237 = addInt(i_469762237, 1);
          }
      } while (false);
    } while (false);
    }
    
  } while (false);

  return result_637534980;

}

function eq_603980288(a_603980289, b_603980290, recursive_603980291) {
      var Temporary4;
      var Temporary5;

  var result_603980292 = 0;

  BeforeRet: do {
    if (!((a_603980289.kind == b_603980290.kind))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    if (!((a_603980289.id == b_603980290.id))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    result_603980292 = 3;
    if (!((a_603980289.index == b_603980290.index))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    if ((a_603980289.kind == 0)) {
    if (!((a_603980289.text == b_603980290.text))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_603980289.kind == 3)) {
    if (!((a_603980289.text == b_603980290.text))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    if (!((len_637534814(a_603980289) == len_637534814(b_603980290)))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    Label1: do {
      var i_603980309 = 0;
      var colontmp__469762224 = 0;
      colontmp__469762224 = len_637534814(a_603980289);
      var i_469762225 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762225 < colontmp__469762224)) break Label3;
            i_603980309 = i_469762225;
            if ((eq_603980288(HEX5BHEX5D_637534821(a_603980289, i_603980309), HEX5BHEX5D_637534821(b_603980290, i_603980309), recursive_603980291) == 1)) {
            result_603980292 = 1;
            break BeforeRet;
            }
            
            i_469762225 = addInt(i_469762225, 1);
          }
      } while (false);
    } while (false);
    }
    else {
    if ((a_603980289.kind == 4)) {
    if ((a_603980289.dom == b_603980290.dom)) {
    result_603980292 = 3;
    break BeforeRet;
    }
    else {
      result_603980292 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_603980289.kind == 6)) {
    if (!((a_603980289.text == b_603980290.text))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_603980290.kind == 5)) {
    if (!((a_603980289.text == b_603980290.text))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    if (!((a_603980289.key == b_603980290.key))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    result_603980292 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_603980289.class == b_603980290.class))) Temporary5 = true; else {        Temporary5 = !(eq_704643325(a_603980289.style, b_603980290.style));      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = !(sameAttrs_637534977(a_603980289, b_603980290));      }    if (Temporary4) {
    result_603980292 = 2;
    break BeforeRet;
    }
    
    if (recursive_603980291) {
    if (!((len_637534814(a_603980289) == len_637534814(b_603980290)))) {
    result_603980292 = 1;
    break BeforeRet;
    }
    
    Label6: do {
      var i_603980335 = 0;
      var colontmp__469762228 = 0;
      colontmp__469762228 = len_637534814(a_603980289);
      var i_469762229 = 0;
      Label7: do {
          Label8: while (true) {
          if (!(i_469762229 < colontmp__469762228)) break Label8;
            i_603980335 = i_469762229;
            if (!((eq_603980288(HEX5BHEX5D_637534821(a_603980289, i_603980335), HEX5BHEX5D_637534821(b_603980290, i_603980335), true) == 3))) {
            result_603980292 = 1;
            break BeforeRet;
            }
            
            i_469762229 = addInt(i_469762229, 1);
          }
      } while (false);
    } while (false);
    }
    
    break BeforeRet;
  } while (false);

  return result_603980292;

}

function updateStyles_603980349(newNode_603980350, oldNode_603980351) {
    if (!((oldNode_603980351.dom == null))) {
    if (!((newNode_603980350.style == null))) {
    applyStyle_704643544(oldNode_603980351.dom, newNode_603980350.style);
    }
    else {
      oldNode_603980351.dom.style = {m_type: NTI721420337, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    oldNode_603980351.dom.className = newNode_603980350.class;
    }
    
    oldNode_603980351.style = newNode_603980350.style;
    oldNode_603980351.class = newNode_603980350.class;

  
}

function takeOverAttr_637534806(newNode_637534807, oldNode_637534808) {
    oldNode_637534808.attrs = newNode_637534807.attrs;

  
}

function updateAttributes_603980378(newNode_603980379, oldNode_603980380) {
    if (!((oldNode_603980380.dom == null))) {
    Label1: do {
      var k_603980385 = null;
      var __603980386 = null;
      Label2: do {
        var i_469762241 = 0;
        var colontmp__469762242 = 0;
        colontmp__469762242 = subInt((oldNode_603980380.attrs).length, 2);
        var res_469762243 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(res_469762243 <= colontmp__469762242)) break Label4;
              i_469762241 = res_469762243;
              k_603980385 = oldNode_603980380.attrs[chckIndx(i_469762241, 0, (oldNode_603980380.attrs).length - 1)];
              __603980386 = oldNode_603980380.attrs[chckIndx(addInt(i_469762241, 1), 0, (oldNode_603980380.attrs).length - 1)];
              oldNode_603980380.dom.removeAttribute(k_603980385);
              res_469762243 = addInt(res_469762243, 2);
            }
        } while (false);
      } while (false);
    } while (false);
    Label5: do {
      var k_603980387 = null;
      var v_603980388 = null;
      Label6: do {
        var i_469762247 = 0;
        var colontmp__469762248 = 0;
        colontmp__469762248 = subInt((newNode_603980379.attrs).length, 2);
        var res_469762249 = 0;
        Label7: do {
            Label8: while (true) {
            if (!(res_469762249 <= colontmp__469762248)) break Label8;
              i_469762247 = res_469762249;
              k_603980387 = newNode_603980379.attrs[chckIndx(i_469762247, 0, (newNode_603980379.attrs).length - 1)];
              v_603980388 = newNode_603980379.attrs[chckIndx(addInt(i_469762247, 1), 0, (newNode_603980379.attrs).length - 1)];
              if (!((v_603980388 == null))) {
              oldNode_603980380.dom.setAttribute(k_603980387, v_603980388);
              }
              
              res_469762249 = addInt(res_469762249, 2);
            }
        } while (false);
      } while (false);
    } while (false);
    }
    
    takeOverAttr_637534806(newNode_603980379, oldNode_603980380);

  
}

function removeAllEventHandlers_603979892(d_603979893) {
    if (!((d_603979893.karaxEvents == null))) {
    Label1: do {
      var i_603979909 = 0;
      var colontmp__469762252 = 0;
      colontmp__469762252 = d_603979893.karaxEvents.length;
      var i_469762253 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762253 < colontmp__469762252)) break Label3;
            i_603979909 = i_469762253;
            d_603979893.removeEventListener(d_603979893.karaxEvents[i_603979909]["Field0"], d_603979893.karaxEvents[i_603979909]["Field1"]);
            i_469762253 = addInt(i_469762253, 1);
          }
      } while (false);
    } while (false);
    }
    

  
}

function mergeEvents_603980389(newNode_603980390, oldNode_603980391, kxi_603980392) {
    var d_603980393 = oldNode_603980391.dom;
    if (!((d_603980393 == null))) {
    removeAllEventHandlers_603979892(d_603980393);
    }
    
    oldNode_603980391.events = newNode_603980390.events;
    applyEvents_603980034(oldNode_603980391);

  
}

function addPatch_603980398(kxi_603980399, ka_603980400, parenta_603980401, currenta_603980402, na_603980403, oldNode_603980404) {
    var L_603980405 = kxi_603980399.patchLen;
    if (((kxi_603980399.patches).length <= L_603980405)) {
    kxi_603980399.patches.push({k: ka_603980400, parent: parenta_603980401, current: currenta_603980402, newNode: na_603980403, oldNode: oldNode_603980404});;
    }
    else {
      kxi_603980399.patches[chckIndx(L_603980405, 0, (kxi_603980399.patches).length - 1)].k = ka_603980400;
      kxi_603980399.patches[chckIndx(L_603980405, 0, (kxi_603980399.patches).length - 1)].parent = parenta_603980401;
      kxi_603980399.patches[chckIndx(L_603980405, 0, (kxi_603980399.patches).length - 1)].current = currenta_603980402;
      kxi_603980399.patches[chckIndx(L_603980405, 0, (kxi_603980399.patches).length - 1)].newNode = na_603980403;
      kxi_603980399.patches[chckIndx(L_603980405, 0, (kxi_603980399.patches).length - 1)].oldNode = oldNode_603980404;
    }
    
    kxi_603980399.patchLen = addInt(kxi_603980399.patchLen, 1);

  
}

function diff_603980533(newNode_603980534, oldNode_603980535, parent_603980536, current_603980537, kxi_603980538) {
        var Temporary1;
            var Temporary6;

  BeforeRet: do {
    var result_603980539 = eq_603980288(newNode_603980534, oldNode_603980535, false);
    switch (result_603980539) {
    case 0:
      kxi_603980538.components.push({oldNode: oldNode_603980535, newNode: newNode_603980534, parent: parent_603980536, current: current_603980537});;
      break;
    case 3:
    case 2:
      newNode_603980534.dom = oldNode_603980535.dom;
      if ((result_603980539 == 2)) {
      updateStyles_603980349(newNode_603980534, oldNode_603980535);
      updateAttributes_603980378(newNode_603980534, oldNode_603980535);
      if ((oldNode_603980535.kind == 0)) {
      oldNode_603980535.text = newNode_603980534.text;
      oldNode_603980535.dom.nodeValue = newNode_603980534.text;
      }
      
      }
      
        if (!(((newNode_603980534.events).length == 0))) Temporary1 = true; else {          Temporary1 = !(((oldNode_603980535.events).length == 0));        }      if (Temporary1) {
      mergeEvents_603980389(newNode_603980534, oldNode_603980535, kxi_603980538);
      }
      
      var newLength_603980558 = len_637534814(newNode_603980534);
      var oldLength_603980559 = len_637534814(oldNode_603980535);
      if (((newLength_603980558 == 0) && (oldLength_603980559 == 0))) {
      break BeforeRet;
      }
      
      var minLength_603980560 = nimMin(newLength_603980558, oldLength_603980559);
      if (!((oldNode_603980535.kind == newNode_603980534.kind))) {
      failedAssertImpl_218103864(makeNimstrLit("karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var commonPrefix_603980570 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(commonPrefix_603980570 < minLength_603980560)) break Label3;
            if ((eq_603980288(HEX5BHEX5D_637534821(newNode_603980534, commonPrefix_603980570), HEX5BHEX5D_637534821(oldNode_603980535, commonPrefix_603980570), true) == 3)) {
            addPatch_603980398(kxi_603980538, 5, null, null, HEX5BHEX5D_637534821(newNode_603980534, commonPrefix_603980570), HEX5BHEX5D_637534821(oldNode_603980535, commonPrefix_603980570));
            commonPrefix_603980570 = addInt(commonPrefix_603980570, 1);
            }
            else {
              break Label2;
            }
            
          }
      } while (false);
      var oldPos_603980579 = subInt(oldLength_603980559, 1);
      var newPos_603980580 = subInt(newLength_603980558, 1);
      Label4: do {
          Label5: while (true) {
            if (!(commonPrefix_603980570 <= oldPos_603980579)) Temporary6 = false; else {              Temporary6 = (commonPrefix_603980570 <= newPos_603980580);            }          if (!Temporary6) break Label5;
            if ((eq_603980288(HEX5BHEX5D_637534821(newNode_603980534, newPos_603980580), HEX5BHEX5D_637534821(oldNode_603980535, oldPos_603980579), true) == 3)) {
            addPatch_603980398(kxi_603980538, 5, null, null, HEX5BHEX5D_637534821(newNode_603980534, newPos_603980580), HEX5BHEX5D_637534821(oldNode_603980535, oldPos_603980579));
            oldPos_603980579 = subInt(oldPos_603980579, 1);
            newPos_603980580 = subInt(newPos_603980580, 1);
            }
            else {
              break Label4;
            }
            
          }
      } while (false);
      var pos_603980593 = addInt(nimMin(oldPos_603980579, newPos_603980580), 1);
      Label7: do {
        var i_603980598 = 0;
        var colontmp__469762211 = 0;
        colontmp__469762211 = subInt(pos_603980593, 1);
        var res_469762212 = commonPrefix_603980570;
        Label8: do {
            Label9: while (true) {
            if (!(res_469762212 <= colontmp__469762211)) break Label9;
              i_603980598 = res_469762212;
              diff_603980533(HEX5BHEX5D_637534821(newNode_603980534, i_603980598), HEX5BHEX5D_637534821(oldNode_603980535, i_603980598), current_603980537, current_603980537.childNodes[chckIndx(i_603980598, 0, (current_603980537.childNodes).length - 1)], kxi_603980538);
              res_469762212 = addInt(res_469762212, 1);
            }
        } while (false);
      } while (false);
      if ((addInt(oldPos_603980579, 1) == oldLength_603980559)) {
      Label10: do {
        var i_603980603 = 0;
        var res_469762215 = pos_603980593;
        Label11: do {
            Label12: while (true) {
            if (!(res_469762215 <= newPos_603980580)) break Label12;
              i_603980603 = res_469762215;
              addPatch_603980398(kxi_603980538, 2, current_603980537, null, HEX5BHEX5D_637534821(newNode_603980534, i_603980603), null);
              res_469762215 = addInt(res_469762215, 1);
            }
        } while (false);
      } while (false);
      }
      else {
        var before_603980604 = current_603980537.childNodes[chckIndx(addInt(oldPos_603980579, 1), 0, (current_603980537.childNodes).length - 1)];
        Label13: do {
          var i_603980609 = 0;
          var res_469762218 = pos_603980593;
          Label14: do {
              Label15: while (true) {
              if (!(res_469762218 <= newPos_603980580)) break Label15;
                i_603980609 = res_469762218;
                addPatch_603980398(kxi_603980538, 3, current_603980537, before_603980604, HEX5BHEX5D_637534821(newNode_603980534, i_603980609), null);
                res_469762218 = addInt(res_469762218, 1);
              }
          } while (false);
        } while (false);
      }
      
      Label16: do {
        var i_603980614 = 0;
        var res_469762221 = pos_603980593;
        Label17: do {
            Label18: while (true) {
            if (!(res_469762221 <= oldPos_603980579)) break Label18;
              i_603980614 = res_469762221;
              addPatch_603980398(kxi_603979840[0], 4, null, null, null, HEX5BHEX5D_637534821(oldNode_603980535, i_603980614));
              addPatch_603980398(kxi_603980538, 1, current_603980537, current_603980537.childNodes[chckIndx(i_603980614, 0, (current_603980537.childNodes).length - 1)], null, null);
              res_469762221 = addInt(res_469762221, 1);
            }
        } while (false);
      } while (false);
      break;
    case 1:
      addPatch_603980398(kxi_603979840[0], 4, null, null, null, oldNode_603980535);
      addPatch_603980398(kxi_603980538, 0, parent_603980536, current_603980537, newNode_603980534, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl_218103864(makeNimstrLit("karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}

function applyComponents_603980629(kxi_603980630) {
            var Temporary3;

    var i_603980631 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_603980631 < (kxi_603980630.components).length)) break Label2;
          var x_603980636 = kxi_603980630.components[chckIndx(i_603980631, 0, (kxi_603980630.components).length - 1)].oldNode;
          var newNode_603980637 = kxi_603980630.components[chckIndx(i_603980631, 0, (kxi_603980630.components).length - 1)].newNode;
            if (!!((x_603980636.changedImpl == null))) Temporary3 = false; else {              Temporary3 = x_603980636.changedImpl(x_603980636, newNode_603980637);            }          if (Temporary3) {
          var current_603980642 = kxi_603980630.components[chckIndx(i_603980631, 0, (kxi_603980630.components).length - 1)].current;
          var parent_603980643 = kxi_603980630.components[chckIndx(i_603980631, 0, (kxi_603980630.components).length - 1)].parent;
          x_603980636.updatedImpl(x_603980636, newNode_603980637);
          var oldExpanded_603980644 = x_603980636.expanded;
          x_603980636.expanded = x_603980636.renderImpl(x_603980636);
          x_603980636.renderedVersion = x_603980636.version;
          if ((oldExpanded_603980644 == null)) {
          addPatch_603980398(kxi_603979840[0], 4, null, null, null, x_603980636);
          addPatch_603980398(kxi_603980630, 0, parent_603980643, current_603980642, x_603980636.expanded, null);
          }
          else {
            diff_603980533(x_603980636.expanded, oldExpanded_603980644, parent_603980643, current_603980642, kxi_603980630);
          }
          
          }
          
          i_603980631 = addInt(i_603980631, 1);
        }
    } while (false);
    if (kxi_603980630.components.length < 0) { for (var i = kxi_603980630.components.length ; i < 0 ; ++i) kxi_603980630.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_603980630.components.length = 0; };

  
}

function moveDom_603980463(dest_603980464, src_603980465) {
    dest_603980464.dom = src_603980465.dom;
    src_603980465.dom = null;
    if (!((dest_603980464.id == null))) {
    kxi_603979840[0].byId[dest_603980464.id] = dest_603980464;
    }
    
    if (!((len_637534814(dest_603980464) == len_637534814(src_603980465)))) {
    failedAssertImpl_218103864(makeNimstrLit("karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    Label1: do {
      var i_603980481 = 0;
      var colontmp__469762263 = 0;
      colontmp__469762263 = len_637534814(dest_603980464);
      var i_469762264 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762264 < colontmp__469762263)) break Label3;
            i_603980481 = i_469762264;
            moveDom_603980463(HEX5BHEX5D_637534821(dest_603980464, i_603980481), HEX5BHEX5D_637534821(src_603980465, i_603980481));
            i_469762264 = addInt(i_469762264, 1);
          }
      } while (false);
    } while (false);

  
}

function HEX5BHEX5DHEX3D_637534825(x_637534826, idx_637534827, y_637534828) {
    x_637534826.kids[chckIndx(idx_637534827, 0, (x_637534826.kids).length - 1)] = y_637534828;

  
}

function applyPatch_603980482(kxi_603980483) {
    Label1: do {
      var i_603980488 = 0;
      var i_469762257 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762257 < kxi_603980483.patchLen)) break Label3;
            i_603980488 = i_469762257;
            var p_603980489 = nimCopy(null, kxi_603980483.patches[chckIndx(i_603980488, 0, (kxi_603980483.patches).length - 1)], NTI603979782);
            switch (p_603980489.k) {
            case 0:
              var nn_603980490 = toDom_603980062(p_603980489.newNode, true, kxi_603980483);
              if ((p_603980489.parent == null)) {
              replaceById_603980275(kxi_603980483.rootId, nn_603980490);
              }
              else {
                if ((p_603980489.current.parentNode == p_603980489.parent)) {
                p_603980489.parent.replaceChild(nn_603980490, p_603980489.current);
                }
                else {
                p_603980489.parent.appendChild(nn_603980490);
                }
                
              }
              
              break;
            case 5:
              moveDom_603980463(p_603980489.newNode, p_603980489.oldNode);
              break;
            case 1:
              p_603980489.parent.removeChild(p_603980489.current);
              break;
            case 2:
              var nn_603980499 = toDom_603980062(p_603980489.newNode, true, kxi_603980483);
              p_603980489.parent.appendChild(nn_603980499);
              break;
            case 3:
              var nn_603980500 = toDom_603980062(p_603980489.newNode, true, kxi_603980483);
              p_603980489.parent.insertBefore(nn_603980500, p_603980489.current);
              break;
            case 4:
              var n_603980501 = p_603980489.oldNode;
              if (!((n_603980501.id == null))) {
              delete kxi_603980483.byId[n_603980501.id];
              }
              
              if ((n_603980501.kind == 5)) {
              var x_603980511 = n_603980501;
              if (!((x_603980511.onDetachImpl == null))) {
              x_603980511.onDetachImpl(x_603980511);
              }
              
              }
              
              if (!(kxi_603980483.surpressRedraws)) {
              n_603980501.dom = null;
              }
              
              break;
            }
            i_469762257 = addInt(i_469762257, 1);
          }
      } while (false);
    } while (false);
    kxi_603980483.patchLen = 0;
    Label4: do {
      var i_603980520 = 0;
      var i_469762260 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(i_469762260 < kxi_603980483.patchLenV)) break Label6;
            i_603980520 = i_469762260;
            var p_603980521 = nimCopy(null, kxi_603980483.patchesV[chckIndx(i_603980520, 0, (kxi_603980483.patchesV).length - 1)], NTI603979783);
            HEX5BHEX5DHEX3D_637534825(p_603980521.parent, p_603980521.pos, p_603980521.newChild);
            if (!(!((p_603980521.newChild.dom == null)))) {
            failedAssertImpl_218103864(makeNimstrLit("karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            i_469762260 = addInt(i_469762260, 1);
          }
      } while (false);
    } while (false);
    kxi_603980483.patchLenV = 0;

  
}

function dodraw_603980722(kxi_603980723) {
  BeforeRet: do {
    if ((kxi_603980723.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_603980727 = {hashPart: window.location.hash};
    var newtree_603980728 = kxi_603980723.renderer(rdata_603980727);
    kxi_603980723.runCount = addInt(kxi_603980723.runCount, 1);
    newtree_603980728.id = kxi_603980723.rootId;
    kxi_603980723.toFocus = null;
    if ((kxi_603980723.currentTree == null)) {
    var asdom_603980737 = toDom_603980062(newtree_603980728, true, kxi_603980723);
    replaceById_603980275(kxi_603980723.rootId, asdom_603980737);
    }
    else {
      if (!(same_603980216(kxi_603980723.currentTree, document.getElementById(kxi_603980723.rootId), 0))) {
      failedAssertImpl_218103864(makeNimstrLit("karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_603980743 = document.getElementById(kxi_603980723.rootId);
      diff_603980533(newtree_603980728, kxi_603980723.currentTree, null, olddom_603980743, kxi_603980723);
    }
    
    applyComponents_603980629(kxi_603980723);
    applyPatch_603980482(kxi_603980723);
    kxi_603980723.currentTree = newtree_603980728;
    if (!(same_603980216(kxi_603980723.currentTree, document.getElementById(kxi_603980723.rootId), 0))) {
    failedAssertImpl_218103864(makeNimstrLit("karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_603980723.postRenderCallback == null))) {
    kxi_603980723.postRenderCallback(rdata_603980727);
    }
    
    if (!((kxi_603980723.toFocus == null))) {
    kxi_603980723.toFocus.focus();
    }
    
    kxi_603980723.renderId = 0;
  } while (false);

  
}

function redraw_603980781(kxi_603980782) {
    
function HEX3Aanonymous_603980783() {
        dodraw_603980722(kxi_603980782);

      
    }

    if ((kxi_603980782.renderId == 0)) {
    kxi_603980782.renderId = window.requestAnimationFrame(HEX3Aanonymous_603980783);
    }
    

  
}

function viewSelector_469762173(view_469762174, no_redraw_469762175) {
    switch (view_469762174) {
    case 0:
      showScanSeedBtn_469762135[0] = true;
      showScanning_469762136[0] = true;
      showCamTools_469762137[0] = true;
      showScanResult_469762138[0] = false;
      showPage2_469762144[0] = false;
      break;
    case 1:
      showScanSeedBtn_469762135[0] = true;
      showScanning_469762136[0] = true;
      showCamTools_469762137[0] = true;
      showScanResult_469762138[0] = false;
      showPage2_469762144[0] = false;
      break;
    case 2:
      showScanSeedBtn_469762135[0] = false;
      showScanning_469762136[0] = true;
      showCamTools_469762137[0] = true;
      showScanResult_469762138[0] = true;
      showPage2_469762144[0] = true;
      break;
    case 3:
      showPage2_469762144[0] = false;
      break;
    case 4:
      showPage2_469762144[0] = true;
      break;
    case 5:
      showScanResult_469762138[0] = false;
      mnemonicFulfill_469762147[0] = false;
      showScanSeedBtn2_469762139[0] = true;
      showScanning2_469762140[0] = true;
      showCamTools2_469762141[0] = true;
      showScanResult2_469762142[0] = false;
      showPage1_469762143[0] = false;
      showPage2_469762144[0] = true;
      break;
    case 8:
      showScanSeedBtn2_469762139[0] = false;
      showScanning2_469762140[0] = true;
      showCamTools2_469762141[0] = true;
      showScanResult2_469762142[0] = true;
      showPage3_469762145[0] = false;
      break;
    case 9:
      showPage3_469762145[0] = true;
      break;
    case 11:
      showPage3_469762145[0] = true;
      break;
    case 12:
      showScanResult2_469762142[0] = false;
      keyCardFulfill_469762148[0] = false;
      passphraseFulfill_469762149[0] = false;
      showPage1_469762143[0] = false;
      showPage2_469762144[0] = false;
      showPage3_469762145[0] = true;
      showPage4_469762146[0] = false;
      break;
    case 13:
      showPage1_469762143[0] = false;
      showPage2_469762144[0] = false;
      showPage3_469762145[0] = true;
      showPage4_469762146[0] = true;
      showSettings_469762154[0] = false;
      showTradeLogs_469762153[0] = true;
      break;
    case 14:
      showPage1_469762143[0] = false;
      showPage2_469762144[0] = false;
      showPage3_469762145[0] = true;
      showPage4_469762146[0] = true;
      showTradeLogs_469762153[0] = false;
      showSettings_469762154[0] = true;
      break;
    default: 
      break;
    }
    if (!(no_redraw_469762175)) {
    redraw_603980781(appInst_469762098[0]);
    }
    

  
}
  jsViewSelector = viewSelector_469762173;
  function setSupressRedraw(flag) {
    supressRedraw_469762150[0] = flag;
  }
  function getSupressRedraw() {
    return supressRedraw_469762150[0];
  }


function viewUpdate_469762266() {
    if (!(supressRedraw_469762150[0])) {
    redraw_603980781(appInst_469762098[0]);
    }
    

  
}
  var jsViewUpdate = viewUpdate_469762266;

var seedCardInfos_469762302 = [[]];
var editingWords_469762303 = [""];
var inputWords_469762304 = [""];
var autocompleteWords_469762309 = [[]];
var chklist_469762314 = [[]];
var prevCheckWord_469762315 = [""];
var passPhrase_469762316 = [""];
var bip39_469762327 = [coinlibs.bip39];
var bip39_wordlist_469762336 = [bip39_469762327[0].wordlists.japanese];
var wl_japanese_469762349 = [(bip39_469762327[0].wordlists.japanese)];
var wl_english_469762362 = [(bip39_469762327[0].wordlists.english)];
var wl_select_469762363 = [nimCopy(null, wl_japanese_469762349[0], NTI469762289)];
var wl_select_id_469762364 = [1];

function seedToKeys_469762436() {
        var wallet = pastel.wallet;
  
    if ((currentImportType_469762108[0] == 0)) {
          wallet.setSeedCard(seedCardInfos_469762302[0]);
    
    }
    else {
    if ((currentImportType_469762108[0] == 1)) {
          wallet.setMnemonic(inputWords_469762304[0], wl_select_id_469762364[0]);
    
    }
    }

  
}

function clearSensitive_469762383() {
    seedCardInfos_469762302[0] = nimCopy(null, [], NTI469762325);
    editingWords_469762303[0] = "";
    inputWords_469762304[0] = "";
    autocompleteWords_469762309[0] = nimCopy(null, [], NTI469762336);
    chklist_469762314[0] = nimCopy(null, [], NTI469762347);
    prevCheckWord_469762315[0] = "";
    passPhrase_469762316[0] = "";

  
}
  var jsSeedToKeys = seedToKeys_469762436;
  var jsClearSensitive = clearSensitive_469762383;

var keyCardVal_469762582 = [""];
// https://github.com/gustf/js-levenshtein
var levenshtein = (function()
{
  function _min(d0, d1, d2, bx, ay)
  {
    return d0 < d1 || d2 < d1
        ? d0 > d2
            ? d2 + 1
            : d0 + 1
        : bx === ay
            ? d1
            : d1 + 1;
  }

  return function(a, b)
  {
    if (a === b) {
      return 0;
    }

    if (a.length > b.length) {
      var tmp = a;
      a = b;
      b = tmp;
    }

    var la = a.length;
    var lb = b.length;

    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {
      la--;
      lb--;
    }

    var offset = 0;

    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {
      offset++;
    }

    la -= offset;
    lb -= offset;

    if (la === 0 || lb < 3) {
      return lb;
    }

    var x = 0;
    var y;
    var d0;
    var d1;
    var d2;
    var d3;
    var dd;
    var dy;
    var ay;
    var bx0;
    var bx1;
    var bx2;
    var bx3;

    var vector = [];

    for (y = 0; y < la; y++) {
      vector.push(y + 1);
      vector.push(a.charCodeAt(offset + y));
    }

    var len = vector.length - 1;

    for (; x < lb - 3;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      bx1 = b.charCodeAt(offset + (d1 = x + 1));
      bx2 = b.charCodeAt(offset + (d2 = x + 2));
      bx3 = b.charCodeAt(offset + (d3 = x + 3));
      dd = (x += 4);
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        ay = vector[y + 1];
        d0 = _min(dy, d0, d1, bx0, ay);
        d1 = _min(d0, d1, d2, bx1, ay);
        d2 = _min(d1, d2, d3, bx2, ay);
        dd = _min(d2, d3, dd, bx3, ay);
        vector[y] = dd;
        d3 = d2;
        d2 = d1;
        d1 = d0;
        d0 = dy;
      }
    }

    for (; x < lb;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      dd = ++x;
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);
        d0 = dy;
      }
    }

    return dd;
  };
})();

function levens(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var similars = [];
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    similars.push(data[score]);
    if(result.length > 0 && score > 0.5) {
      break;
    }
    if((result.length == 0 && data[score].length <= 30) || (result.length + data[score].length) <= 7) {
      result = result.concat(data[score]);
    }
  }
  return result;
}
function levens_one(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    if(lev != 1) {
      continue;
    }
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    result = result.concat(data[score]);
  }
  return result;
}

var confirm_mnemonic_advanced_469762741 = [false];
  var send_balls_count = 0;
  var cur_calc_send_utxo = null;

  function conv_coin(uint64_val) {
    var strval = uint64_val.toString();
    var val = parseInt(strval, 10);
    if(val > Number.MAX_SAFE_INTEGER) {
      var d = strval.slice(-8).replace(/0+$/, '');
      var n = strval.substr(0, strval.length - 8);
      if(d.length > 0) {
        return n + '.' + d;
      } else {
        return n;
      }
    }
    return val / 100000000;
  }

  function resetSendBallCount() {
    send_balls_count = 0;
    cur_calc_send_utxo = null;
    $('#btn-utxo-count').text('...');
    pastel.utxoballs.setSend(0);
  }

  function check_amount_elm() {
    var amount_elm = $('#send-coins input[name="amount"]');
    var amount = amount_elm.val().trim();
    if(amount.length > 0) {
      amount = amount.replace(/,/g, '');
      var amounts = amount.split('.');
      if(amount.match(/^\d+(\.\d{1,8})?$/)) {
        amount_elm.closest('.field').removeClass('error warning');
        var value = '';
        if(amounts.length == 1) {
          if(amounts[0] != '0') {
            value = amounts[0] + '00000000';
          } else {
            value = amounts[0];
          }
        } else if(amounts.length == 2) {
          value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
        }
        if(value.length > 0) {
          setSendUtxo(value);
        } else {
          resetSendBallCount();
        }
      } else {
        amount_elm.closest('.field').addClass('error');
      }
    } else {
      amount_elm.closest('.field').removeClass('error warning');
      resetSendBallCount();
    }
  }

  function updateBallCount() {
    if(sendrecv_switch == 1) {
      check_amount_elm();
    }
  }
  pastel.utxoballs.updateSend(updateBallCount);

  function setSendUtxo(value) {
    var ret = pastel.wallet.calcSendUtxo(value);
    cur_calc_send_utxo = ret;
    var amount_elm = $('#send-coins input[name="amount"]');
    if(ret.err) {
      if(ret.all > ret.max) {
        $('#btn-utxo-count').text('>' + String(ret.max) + ' max');
        pastel.utxoballs.setSend(ret.max);
        send_balls_count = ret.max;
      } else {
        $('#btn-utxo-count').text('>' + String(ret.all) + ' all');
        pastel.utxoballs.setSend(ret.all);
        send_balls_count = ret.all;
      }
      amount_elm.closest('.field').removeClass('warning');
      amount_elm.closest('.field').addClass('error');
    } else {
      if(ret.count > ret.max) {
        $('#btn-utxo-count').text('>' + String(ret.max) + ' max');
        pastel.utxoballs.setSend(ret.max);
        send_balls_count = ret.max;
        amount_elm.closest('.field').removeClass('warning');
        amount_elm.closest('.field').addClass('error');
      } else {
        amount_elm.closest('.field').removeClass('error');
        if(ret.conf != null && ret.count > ret.conf && ret.count > 0) {
          amount_elm.closest('.field').addClass('warning');
        } else {
          amount_elm.closest('.field').removeClass('warning');
        }
        $('#btn-utxo-count').text((ret.sign == 0 ? '' : '≤') + String(ret.count) + (ret.count == ret.all ? ' all' : ''));
        pastel.utxoballs.setSend(ret.count);
        send_balls_count = ret.count;
      }
    }
  }

  function initSendForm() {
    $('#btn-send-clear').off('click').click(function() {
      if(!showPage4_469762146[0]) {
        $('#send-coins input[name="address"]').val('');
        $('#send-coins input[name="amount"]').val('');
        $('#send-coins input[name="address"]').closest('.field').removeClass('error');
        $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
        resetSendBallCount();
        uriOptions = [];
        jsViewSelector(12);
      }
      $(this).blur();
    });
    $('#btn-send-qrcode').off('click').click(function() {
      if(!showPage4_469762146[0]) {
        qrReaderModal.show(function(err, uri) {
          if(!err) {
            var data = bip21reader(uri);
            $('#send-coins input[name="address"]').val(data.address || '');
            if(data.amount != null) {
              $('#send-coins input[name="amount"]').val(data.amount || '');
            }
            uriOptions = [];
            for(var k in data) {
              var p = data[k];
              if(k == 'address' || k == 'amount') {
                continue;
              }
              var key = crlftab_to_html(k);
              key = key.charAt(0).toUpperCase() + key.slice(1);
              uriOptions.push({key: key, value: crlftab_to_html(p)});
            }
            check_amount_elm();
            jsViewSelector(12);
          } else {
            Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
          }
        });
      }
      $(this).blur();
    });
    $('#btn-send-lock').off('click').click(function() {
      var elm = $(this);
      var icon = elm.find('i');
      if(icon.hasClass('open')) {
        if(pastel.wallet && pastel.wallet.lockShieldedKeys()) {
          icon.removeClass('open');
          elm.attr('title', 'Locked');
          PhraseLock.notify_locked();
          PhraseLock.disableInactivity();
        }
        setTimeout(function() {
          elm.focus();
        }, 1000);
      } else {
        Notify.hide_all();
        PhraseLock.showPhraseInput(function(status) {
          if(status == PhraseLock.PLOCK_SUCCESS) {
            icon.addClass('open');
            elm.attr('title', __t('Unlocked'));
            PhraseLock.notify_unlocked();
            var locked_flag = false;
            PhraseLock.enableInactivity(function() {
              if(icon.hasClass('open')) {
                if(pastel.wallet && pastel.wallet.lockShieldedKeys()) {
                  locked_flag = true;
                }
              }
            }, function() {
              if(icon.hasClass('open') && locked_flag) {
                icon.removeClass('open');
                elm.attr('title', 'Locked');
                if(sendrecv_switch == 1) {
                  PhraseLock.notify_locked();
                } else {
                  sendrecv_switch_sendafter = function() {
                    PhraseLock.notify_locked();
                  }
                }
                PhraseLock.disableInactivity();
              }
            });
          } else if(status == PhraseLock.PLOCK_FAILED_QR) {
            Notify.show(__t('Error'), __t('Failed to unlock. Wrong key card was scanned.'), Notify.msgtype.error);
          } else if(status == PhraseLock.PLOCK_FAILED_PHRASE) {
            Notify.show(__t('Error'), __t('Failed to unlock. Passphrase is incorrect.'), Notify.msgtype.error);
          } else if(status == PhraseLock.PLOCK_FAILED_CAMERA) {
            Notify.show(__t('Error'), __t('Failed to unlock. Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
          }
          setTimeout(function() {
            elm.focus();
          }, 1000);
        });
      }
    });
    pastel.utxoballs.setSend(send_balls_count);

    $('#btn-utxo-plus').off('click').click(function() {
      $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
      var cur = cur_calc_send_utxo;
      if(cur) {
        if(cur.err) {
          cur.count = Math.min(cur.all, cur.max);
          cur.sign = 0;
          cur.err = 0;
        } else {
          if(cur.sign == 0) {
            cur.count++;
          } else {
            cur.sign = 0;
          }
        }
      } else {
        cur = {err: 0, count: 1, sign: 0};
        cur_calc_send_utxo = cur;
      }
      var sendval = pastel.wallet.calcSendValue(cur.count);
      cur.all = sendval.all;
      cur.max = sendval.max;
      cur.count = sendval.count;
      send_balls_count = cur.count;
      pastel.utxoballs.setSend(send_balls_count);
      $('#send-coins input[name="amount"]').val(conv_coin(sendval.value));
      if(sendval.conf != null && cur.count > sendval.conf && cur.count > 0) {
        $('#send-coins input[name="amount"]').closest('.field').addClass('warning');
      } else {
        $('#send-coins input[name="amount"]').closest('.field').removeClass('warning');
      }
      var exinfo = '';
      if(sendval.count == sendval.all) {
        exinfo = ' all';
      } else if(sendval.count == sendval.max) {
        exinfo = ' max';
      }
      $('#btn-utxo-count').text(String(sendval.count) + exinfo);
      $(this).blur();
    });
    $('#btn-utxo-minus').off('click').click(function() {
      $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
      var cur = cur_calc_send_utxo;
      if(cur) {
        if(cur.err) {
          cur.count = Math.min(cur.all, cur.max);
          cur.sign = 0;
          cur.err = 0;
        } else {
          if(cur.sign <= 0) {
            if(cur.count > 0) {
              cur.count--;
            }
          }
          cur.sign = 0;
        }
      } else {
        cur = {err: 0, count: 0, sign: 0};
        cur_calc_send_utxo = cur;
      }
      var sendval = pastel.wallet.calcSendValue(cur.count);
      cur.all = sendval.all;
      cur.max = sendval.max;
      cur.count = sendval.count;
      send_balls_count = cur.count;
      pastel.utxoballs.setSend(send_balls_count);
      $('#send-coins input[name="amount"]').val(conv_coin(sendval.value));
      if(sendval.conf != null && cur.count > sendval.conf && cur.count > 0) {
        $('#send-coins input[name="amount"]').closest('.field').addClass('warning');
      } else {
        $('#send-coins input[name="amount"]').closest('.field').removeClass('warning');
      }
      var exinfo = '';
      if(sendval.count == sendval.all) {
        exinfo = ' all';
      } else if(sendval.count == sendval.max) {
        exinfo = ' max';
      }
      $('#btn-utxo-count').text(String(sendval.count) + exinfo);
      $(this).blur();
    });
    var send_busy = false;
    $('#btn-tx-send').off('click').click(function() {
      if(send_busy) {
        return;
      }
      send_busy = true;
      var locked = PhraseLock.notify_if_need_unlock();
      if(!locked && pastel.wallet) {
        var address = String($('#send-coins input[name="address"]').val()).trim();
        var amount = String($('#send-coins input[name="amount"]').val()).trim();
        if(address.length == 0 || amount.length == 0) {
          var address_elm = $('#send-coins input[name="address"]').closest('.field');
          var amount_elm = $('#send-coins input[name="amount"]').closest('.field');
          var flag = true;
          var alert_count = 0;
          function alert_worker() {
            if(address.length == 0) {
              if(flag) {
                address_elm.addClass('error');
              } else {
                address_elm.removeClass('error');
              }
            }
            if(amount.length == 0) {
              if(flag) {
                amount_elm.addClass('error');
              } else {
                amount_elm.removeClass('error');
              }
            }
            alert_count++;
            if(alert_count < 4) {
              flag = !flag;
              setTimeout(alert_worker, 100);
            }
          }
          alert_worker();
          return;
        }
        amount = amount.replace(/,/g, '');
        var amounts = amount.split('.');
        if(amount.match(/^\d+(\.\d{1,8})?$/)) {
          var value = '';
          if(amounts.length == 1) {
            if(amounts[0] != '0') {
              value = amounts[0] + '00000000';
            } else {
              value = amounts[0];
            }
          } else if(amounts.length == 2) {
            value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
          }
          Notify.hide_all();
          var self = $(this);
          $('#btn-tx-send').addClass('loading');
          pastel.wallet.send(address, value, function(result) {
            var ErrSend = pastel.wallet.ERR_SEND;
            switch(result.err) {
            case ErrSend.SUCCESS:
              Notify.show('', __t('Coins sent successfully.'), Notify.msgtype.info);
              pastel.unspents_after_actions.push(function() {
                if(sendrecv_switch == 1) {
                  setSendUtxo(value);
                }
              });
              break;
            case ErrSend.FAILED:
              Notify.show(__t('Error'), __t('Failed to send coins.'), Notify.msgtype.error);
              break;
            case ErrSend.INVALID_ADDRESS:
              Notify.show(__t('Error'), __t('Address is invalid.'), Notify.msgtype.error);
              break;
            case ErrSend.INSUFFICIENT_BALANCE:
              Notify.show(__t('Error'), __t('Balance is insufficient.'), Notify.msgtype.error);
              break;
            case ErrSend.DUST_VALUE:
              if(value == '0') {
                Notify.show(__t('Error'), __t('Amount is zero.'), Notify.msgtype.error);
              } else {
                Notify.show(__t('Error'), __t('Amount is too small.'), Notify.msgtype.error);
              }
              break;
            case ErrSend.BUSY:
              Notify.show(__t('Error'), __t('Failed to send coins. Busy.'), Notify.msgtype.error);
              break;
            case ErrSend.TX_FAILED:
              var msg = '';
              if(result.res && result.res.message) {
                msg = '<br> [' + result.res.message + ']';
              }
              Notify.show(__t('Error'), __t('Failed to send coins.') + msg, Notify.msgtype.error);
              break;
            case ErrSend.TX_TIMEOUT:
              Notify.show(__t('Warning'), __t('Server is not responding. Coins may have been sent.'), Notify.msgtype.warning);
              break;
            case ErrSend.SERVER_ERROR:
              Notify.show(__t('Error'), __t('Failed to send coins. Server error.'), Notify.msgtype.error);
              break;
            case ErrSend.SERVER_TIMEOUT:
              Notify.show(__t('Error'), __t('Failed to send coins. Server is not responding.'), Notify.msgtype.error);
              break;
            default:
              Notify.show(__t('Error'), __t('Failed to send coins.'), Notify.msgtype.error);
            }
            $('#btn-tx-send').removeClass('loading');
            self.blur();
            send_busy = false;
          });
        } else {
          if(amounts.length > 1 && amounts[1].length > 8) {
            Notify.show(__t('Error'), __t('Amount is invalid. The decimal places is too long. Please set it 8 or less.'), Notify.msgtype.error);
          } else {
            Notify.show(__t('Error'), __t('Amount is invalid.'), Notify.msgtype.error);
          }
          send_busy = false;
          $(this).blur();
        }
      } else {
        $('#btn-send-lock').focus();
        send_busy = false;
      }
    });
  }

  var sendrecv_switch = 0;
  var sendrecv_switch_busy = false;
  var sendrecv_switch_tval;
  var sendrecv_last = null;
  var sendrecv_wait = 0;
  var sendrecv_switch_sendafter = function() {}
  function send_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 2) {
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          $('#send-coins').transition({
            animation: 'fade down',
            onComplete : function() {
              sendrecv_last = 1;
              sendrecv_switch_busy = false;
              sendrecv_switch_sendafter();
            }
          });
          initSendForm();
        }
      });
    } else {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 1;
          sendrecv_switch_busy = false;
          sendrecv_switch_sendafter();
        }
      });
      initSendForm();
    }
  }
  function recv_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 1) {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          showRecvAddress(function() {
            $('#receive-address').transition({
              animation: 'fade down',
              onComplete : function() {
                showRecvAddressAfterEffect();
                sendrecv_last = 2;
                sendrecv_switch_busy = false;
              }
            });
          });
        }
      });
    } else {
      showRecvAddress(function() {
        $('#receive-address').transition({
          animation: 'fade down',
          onComplete : function() {
            showRecvAddressAfterEffect();
            sendrecv_last = 2;
            sendrecv_switch_busy = false;
          }
        });
      });
    }
  }
  function reset_switch(switch_id) {
    if(!$('#send-coins').hasClass('hidden') && (switch_id == null || switch_id == 1)) {
      sendrecv_switch_busy = true;
      if(switch_id == 1) {
        pastel.utxoballs.setSend(0);
      }
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
    if(!$('#receive-address').hasClass('hidden') && (switch_id == null || switch_id == 2)) {
      sendrecv_switch_busy = true;
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
  }
  function sendrecv_switch_worker() {
    if(sendrecv_switch_busy) {
      sendrecv_switch_tval = setTimeout(function() {
        sendrecv_wait++;
        if(sendrecv_wait < 300) {
          sendrecv_switch_worker();
        } else {
          sendrecv_switch_busy = false;
        }
      }, 50);
      return;
    }
    sendrecv_wait = 0;
    if(sendrecv_last == sendrecv_switch) {
      return;
    }
    if(sendrecv_switch == 1) {
      send_switch();
    } else if(sendrecv_switch == 2) {
      recv_switch();
    } else {
      reset_switch();
    }
  }
  function sendrecv_select(val) {
    clearTimeout(sendrecv_switch_tval);
    if(sendrecv_switch == 1 && val != 1) {
      pastel.utxoballs.setSend(0);
    }
    sendrecv_switch = val;
    sendrecv_switch_worker();
  }

  function enable_caret_browsing(elm) {
    elm.find('.tabindex:not(:hidden), button:not(:hidden), a:not(:hidden), textarea:not(:hidden), input:not(:hidden)').each(function() {
      $(this).attr('tabindex', $(this).data('tabindex') || 0);
    });
    $('#selectlang .tabindex, #receive-address .tabindex').each(function() {
      $(this).attr('tabindex', $(this).data('tabindex') || 0);
    });
  }
  function disable_caret_browsing(elm) {
    elm.find('.tabindex:not(:hidden), button:not(:hidden), a:not(:hidden), textarea:not(:hidden), input:not(:hidden)').each(function() {
      $(this).attr('tabindex', -1);
    });
    $('#selectlang .tabindex, #receive-address .tabindex').each(function() {
      $(this).attr('tabindex', -1);
    });
  }

  var uriOptions = [];


function newSeq_603980818(len_603980820) {
  var result_603980821 = [];

    result_603980821 = new Array(len_603980820); for (var i = 0 ; i < len_603980820 ; ++i) { result_603980821[i] = ({k: 0, parent: null, current: null, newNode: null, oldNode: null}); }
  return result_603980821;

}

function newSeq_603980839(len_603980841) {
  var result_603980842 = [];

    result_603980842 = new Array(len_603980841); for (var i = 0 ; i < len_603980841 ; ++i) { result_603980842[i] = ({parent: null, newChild: null, pos: 0}); }
  return result_603980842;

}

function init_603980787(ev_603980788) {
    
function HEX3Aanonymous_603980789() {
        dodraw_603980722(kxi_603979840[0]);

      
    }

    kxi_603979840[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_603980789);

  
}

function setInitializer_603980928(renderer_603980931, root_603980932, clientPostRenderCallback_603980935) {
  var result_603980936 = null;

    result_603980936 = {rootId: root_603980932, renderer: renderer_603980931, postRenderCallback: clientPostRenderCallback_603980935, patches: newSeq_603980818(60), patchesV: newSeq_603980839(30), components: [], surpressRedraws: true, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_603979840[0] = result_603980936;
    window.onload = init_603980787;

  return result_603980936;

}

function newVNode_637534889(kind_637534890) {
  var result_637534891 = null;

    result_637534891 = {kind: kind_637534890, index: -1, m_type: NTI637534310, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_637534891;

}

function add_637534829(parent_637534830, kid_637534831) {
    parent_637534830.kids.push(kid_637534831);;

  
}

function tree_637534892(kind_637534893, kids_637534894) {
  var result_637534895 = null;

    result_637534895 = newVNode_637534889(kind_637534893);
    Label1: do {
      var k_637534907 = null;
      var k_637534907_Idx = 0;
      var i_469763716 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469763716 < (kids_637534894).length)) break Label3;
            k_637534907 = kids_637534894; k_637534907_Idx = chckIndx(i_469763716, 0, (kids_637534894).length - 1);
            add_637534829(result_637534895, k_637534907[k_637534907_Idx]);
            i_469763716 = addInt(i_469763716, 1);
          }
      } while (false);
    } while (false);

  return result_637534895;

}

function text_637534944(s_637534945) {
  var result_637534946 = null;

    result_637534946 = {kind: 0, text: toJSStr(s_637534945), index: -1, m_type: NTI637534310, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_637534946;

}

function text_637534947(s_637534948) {
  var result_637534949 = null;

    result_637534949 = {kind: 0, text: s_637534948, index: -1, m_type: NTI637534310, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_637534949;

}

function addEventListener_637534995(n_637534996, event_637534997, handler_637534998) {
    n_637534996.events.push({Field0: event_637534997, Field1: handler_637534998, Field2: null});;

  
}

function addEventHandler_603980969(n_603980970, k_603980971, action_603980973, kxi_603980974) {
    
function wrapper_603980975(ev_603980976, n_603980977) {
        action_603980973();
        if (!(kxi_603980974.surpressRedraws)) {
        redraw_603980781(kxi_603980974);
        }
        

      
    }

    addEventListener_637534995(n_603980970, k_603980971, wrapper_603980975);

  
}

function importSelector_469762267(importType_469762268) {
    
function HEX3Aanonymous_469762271() {
              qrReader.hide();
    
        currentImportType_469762108[0] = importType_469762268;
        if ((currentImportType_469762108[0] == 0)) {
        showPage2_469762144[0] = showScanResult_469762138[0];
        }
        else {
        if ((currentImportType_469762108[0] == 1)) {
        showPage2_469762144[0] = mnemonicFulfill_469762147[0];
        }
        }
        if ((currentImportType_469762108[0] == 0)) {
                $('#seedselector').removeClass('grey').addClass('olive');
        $('#mnemonicselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#mnemonicselector').removeClass('grey').addClass('olive');
        $('#seedselector').removeClass('olive').addClass('grey');
      
        }
        
        viewUpdate_469762266();

      
    }

  var result_469762270 = null;

    result_469762270 = HEX3Aanonymous_469762271;

  return result_469762270;

}

function setAttr_637534755(n_637534756, key_637534757, val_637534758) {
  BeforeRet: do {
    if (((n_637534756.attrs).length == 0)) {
    n_637534756.attrs = nimCopy(null, [key_637534757, val_637534758], NTI637534477);
    }
    else {
      Label1: do {
        var i_637534775 = 0;
        var colontmp__469763719 = 0;
        colontmp__469763719 = subInt((n_637534756.attrs).length, 2);
        var res_469763720 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(res_469763720 <= colontmp__469763719)) break Label3;
              i_637534775 = res_469763720;
              if ((n_637534756.attrs[chckIndx(i_637534775, 0, (n_637534756.attrs).length - 1)] == key_637534757)) {
              n_637534756.attrs[chckIndx(addInt(i_637534775, 1), 0, (n_637534756.attrs).length - 1)] = val_637534758;
              break BeforeRet;
              }
              
              res_469763720 = addInt(res_469763720, 2);
            }
        } while (false);
      } while (false);
      n_637534756.attrs.push(key_637534757);;
      n_637534756.attrs.push(val_637534758);;
    }
    
  } while (false);

  
}

function toInt_33556007(f_33556008) {
    var Temporary1;

  var result_33556009 = 0;

    if ((0.0 <= f_33556008)) {
    Temporary1 = (((f_33556008 + 0.5)) | 0);
    }
    else {
    Temporary1 = (((f_33556008 - 0.5)) | 0);
    }
    
    result_33556009 = Temporary1;

  return result_33556009;

}

function toFloat_33556001(i_33556002) {
  var result_33556003 = 0.0;

    result_33556003 = i_33556002;

  return result_33556003;

}

function HEX2F_33557576(x_33557577, y_33557578) {
  var result_33557579 = 0.0;

    result_33557579 = (toFloat_33556001(x_33557577) / toFloat_33556001(y_33557578));

  return result_33557579;

}

function HEX5BHEX5D_1073742700(s_1073742703, x_1073742704) {
  var result_1073742705 = [];

    var a_1073742707 = x_1073742704.a;
    var L_1073742709 = addInt(subInt(x_1073742704.b, a_1073742707), 1);
    result_1073742705 = nimCopy(null, mnewString(chckRange(L_1073742709, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_1073742714 = 0;
      var i_469763723 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469763723 < L_1073742709)) break Label3;
            i_1073742714 = i_469763723;
            result_1073742705[chckIndx(i_1073742714, 0, (result_1073742705).length - 1)] = s_1073742703[chckIndx(addInt(i_1073742714, a_1073742707), 0, (s_1073742703).length - 1)];
            i_469763723 = addInt(i_469763723, 1);
          }
      } while (false);
    } while (false);

  return result_1073742705;

}

function HEX2EHEX2E_1073742675(a_1073742678, b_1073742679) {
  var result_1073742680 = ({a: 0, b: 0});

    result_1073742680 = nimCopy(result_1073742680, {a: a_1073742678, b: b_1073742679}, NTI855638077);

  return result_1073742680;

}

function HEX5BHEX5D_1073745050(s_1073745053, x_1073745054) {
  var result_1073745055 = [];

    var a_1073745057 = x_1073745054.a;
    var L_1073745059 = addInt(subInt(subInt((s_1073745053).length, x_1073745054.b), a_1073745057), 1);
    result_1073745055 = nimCopy(null, mnewString(chckRange(L_1073745059, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_1073745064 = 0;
      var i_469763726 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469763726 < L_1073745059)) break Label3;
            i_1073745064 = i_469763726;
            result_1073745055[chckIndx(i_1073745064, 0, (result_1073745055).length - 1)] = s_1073745053[chckIndx(addInt(i_1073745064, a_1073745057), 0, (s_1073745053).length - 1)];
            i_469763726 = addInt(i_469763726, 1);
          }
      } while (false);
    } while (false);

  return result_1073745055;

}

function HEX2EHEX2E_1006633040(a_1006633043, b_1006633044) {
  var result_1006633047 = ({a: 0, b: 0});

    result_1006633047 = nimCopy(result_1006633047, {a: a_1006633043, b: b_1006633044}, NTI1006633039);

  return result_1006633047;

}

function addEventHandler_603980961(n_603980962, k_603980963, action_603980964, kxi_603980965) {
    
function wrapper_603980966(ev_603980967, n_603980968) {
        action_603980964(ev_603980967, n_603980968);
        if (!(kxi_603980965.surpressRedraws)) {
        redraw_603980781(kxi_603980965);
        }
        

      
    }

    addEventListener_637534995(n_603980962, k_603980963, wrapper_603980966);

  
}

function delete_469762401(x_469762403, x_469762403_Idx, i_469762404) {
    x_469762403[x_469762403_Idx].splice(i_469762404, 1);

  
}

function removeSeedCard_469762396(idx_469762397) {
    
function HEX3Aanonymous_469762400() {
        delete_469762401(seedCardInfos_469762302, 0, chckRange(idx_469762397, 0, 2147483647));
        if (((seedCardInfos_469762302[0]).length == 0)) {
        viewSelector_469762173(1, false);
        }
        else {
        viewUpdate_469762266();
        }
        

      
    }

  var result_469762399 = null;

    result_469762399 = HEX3Aanonymous_469762400;

  return result_469762399;

}

function seedCard_469762990(cardInfo_469762991, idx_469762992) {
    var Temporary1;
    
function HEX3Aanonymous_469763323(ev_469763324, n_469763325) {
        seedCardInfos_469762302[0][chckIndx(idx_469762992, 0, (seedCardInfos_469762302[0]).length - 1)].sv = value_637534530(n_469763325);

      
    }

  var result_469762993 = null;

    var tmp_469762994 = tree_637534892(43, []);
    tmp_469762994.class = "ui card seed-card";
    var tmp_469762995 = tree_637534892(43, []);
    tmp_469762995.class = "image";
    var tmp_469762996 = tree_637534892(43, []);
    tmp_469762996.class = "seed-qrcode";
    setAttr_637534755(tmp_469762996, "data-orig", cardInfo_469762991.orig);
    var tmp_469762997 = tree_637534892(84, []);
    setAttr_637534755(tmp_469762997, "width", "188");
    setAttr_637534755(tmp_469762997, "height", "188");
    add_637534829(tmp_469762996, tmp_469762997);
    add_637534829(tmp_469762995, tmp_469762996);
    add_637534829(tmp_469762994, tmp_469762995);
    var tmp_469762998 = tree_637534892(43, []);
    tmp_469762998.class = "content";
    if (!((cardInfo_469762991.tag == null))) {
    var tmp_469762999 = tree_637534892(43, []);
    tmp_469762999.class = "ui tag label mini tag";
    add_637534829(tmp_469762999, text_637534947(cardInfo_469762991.tag));
    add_637534829(tmp_469762998, tmp_469762999);
    }
    
    var tmp_469763000 = tree_637534892(43, []);
    tmp_469763000.class = "header";
    add_637534829(tmp_469763000, text_637534947(translate_1325400138("Seed")));
    add_637534829(tmp_469762998, tmp_469763000);
    var tmp_469763001 = tree_637534892(43, []);
    tmp_469763001.class = "meta";
    var tmp_469763002 = tree_637534892(70, []);
    tmp_469763002.class = "date";
    if (!((cardInfo_469762991.gen == null))) {
    Temporary1 = cardInfo_469762991.gen;
    }
    else {
    Temporary1 = translate_1325400138("unknown");
    }
    
    add_637534829(tmp_469763002, text_637534947(Temporary1));
    add_637534829(tmp_469763001, tmp_469763002);
    add_637534829(tmp_469762998, tmp_469763001);
    var clen_469763018 = ((cardInfo_469762991.seed) == null ? 0 : (cardInfo_469762991.seed).length);
    if ((0 < clen_469763018)) {
    var half_469763019 = toInt_33556007(HEX2F_33557576(clen_469763018, 2));
    var seed_469763020 = cstrToNimstr(cardInfo_469762991.seed);
    var seed_upper_469763044 = HEX5BHEX5D_1073742700(seed_469763020, HEX2EHEX2E_1073742675(0, subInt(half_469763019, 1)));
    var seed_lower_469763063 = HEX5BHEX5D_1073745050(seed_469763020, HEX2EHEX2E_1006633040(half_469763019, 1));
    seed_upper_469763044 = nimCopy(null, (HEX5BHEX5D_1073742700(seed_upper_469763044, HEX2EHEX2E_1073742675(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_upper_469763044, HEX2EHEX2E_1073742675(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_upper_469763044, HEX2EHEX2E_1073742675(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_upper_469763044, HEX2EHEX2E_1073742675(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_upper_469763044, HEX2EHEX2E_1073742675(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073745050(seed_upper_469763044, HEX2EHEX2E_1006633040(20, 1)) || []), NTI33554439);
    seed_lower_469763063 = nimCopy(null, (HEX5BHEX5D_1073742700(seed_lower_469763063, HEX2EHEX2E_1073742675(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_lower_469763063, HEX2EHEX2E_1073742675(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_lower_469763063, HEX2EHEX2E_1073742675(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_lower_469763063, HEX2EHEX2E_1073742675(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073742700(seed_lower_469763063, HEX2EHEX2E_1073742675(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_1073745050(seed_lower_469763063, HEX2EHEX2E_1006633040(20, 1)) || []), NTI33554439);
    var tmp_469763003 = tree_637534892(43, []);
    tmp_469763003.class = "seed-body";
    var tmp_469763004 = tree_637534892(43, []);
    tmp_469763004.class = "seed";
    add_637534829(tmp_469763004, text_637534944(seed_upper_469763044));
    add_637534829(tmp_469763003, tmp_469763004);
    var tmp_469763005 = tree_637534892(43, []);
    tmp_469763005.class = "seed";
    add_637534829(tmp_469763005, text_637534944(seed_lower_469763063));
    add_637534829(tmp_469763003, tmp_469763005);
    add_637534829(tmp_469762998, tmp_469763003);
    }
    else {
      var tmp_469763006 = tree_637534892(43, []);
      tmp_469763006.class = "seed-body";
      clen_469763018 = ((cardInfo_469762991.orig) == null ? 0 : (cardInfo_469762991.orig).length);
      if ((20 < clen_469763018)) {
      var half_469763280 = toInt_33556007(HEX2F_33557576(clen_469763018, 2));
      var orig_469763281 = cstrToNimstr(cardInfo_469762991.orig);
      var tmp_469763007 = tree_637534892(43, []);
      tmp_469763007.class = "seed";
      add_637534829(tmp_469763007, text_637534944(HEX5BHEX5D_1073742700(orig_469763281, HEX2EHEX2E_1073742675(0, subInt(half_469763280, 1)))));
      add_637534829(tmp_469763006, tmp_469763007);
      var tmp_469763008 = tree_637534892(43, []);
      tmp_469763008.class = "seed";
      add_637534829(tmp_469763008, text_637534944(HEX5BHEX5D_1073745050(orig_469763281, HEX2EHEX2E_1006633040(half_469763280, 1))));
      add_637534829(tmp_469763006, tmp_469763008);
      }
      else {
        var tmp_469763009 = tree_637534892(43, []);
        tmp_469763009.class = "seed";
        add_637534829(tmp_469763009, text_637534947(cardInfo_469762991.orig));
        add_637534829(tmp_469763006, tmp_469763009);
      }
      
      add_637534829(tmp_469762998, tmp_469763006);
    }
    
    add_637534829(tmp_469762994, tmp_469762998);
    var tmp_469763010 = tree_637534892(43, []);
    tmp_469763010.class = "extra content";
    var tmp_469763011 = tree_637534892(43, []);
    tmp_469763011.class = "inline field";
    var tmp_469763012 = tree_637534892(43, []);
    tmp_469763012.class = "vector-label";
    add_637534829(tmp_469763012, text_637534947(translate_1325400138("Seed Vector:")));
    add_637534829(tmp_469763011, tmp_469763012);
    var tmp_469763013 = tree_637534892(43, []);
    tmp_469763013.class = "ui mini input vector-input";
    var tmp_469763014 = tree_637534892(105, []);
    setAttr_637534755(tmp_469763014, "type", "text");
    setAttr_637534755(tmp_469763014, "placeholder", translate_1325400138("Type your seed vector"));
    setAttr_637534755(tmp_469763014, "spellcheck", "false");
    addEventHandler_603980961(tmp_469763014, 3, HEX3Aanonymous_469763323, kxi_603979840[0]);
    add_637534829(tmp_469763013, tmp_469763014);
    add_637534829(tmp_469763011, tmp_469763013);
    add_637534829(tmp_469763010, tmp_469763011);
    add_637534829(tmp_469762994, tmp_469763010);
    var tmp_469763015 = tree_637534892(43, []);
    tmp_469763015.class = "bt-seed-del";
    var tmp_469763016 = tree_637534892(106, []);
    tmp_469763016.class = "circular ui icon mini button";
    addEventHandler_603980969(tmp_469763016, 0, removeSeedCard_469762396(idx_469762992), kxi_603979840[0]);
    var tmp_469763017 = tree_637534892(61, []);
    tmp_469763017.class = "close icon";
    add_637534829(tmp_469763016, tmp_469763017);
    add_637534829(tmp_469763015, tmp_469763016);
    add_637534829(tmp_469762994, tmp_469763015);
    result_469762993 = tmp_469762994;

  return result_469762993;

}

function substr_33557907(s_33557908, first_33557909, last_33557910) {
  var result_33557911 = [];

    var first_33557912 = nimMax(first_33557909, 0);
    var L_33557913 = nimMax(addInt(subInt(nimMin(last_33557910, (s_33557908).length - 1), first_33557912), 1), 0);
    result_33557911 = nimCopy(null, mnewString(chckRange(L_33557913, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_33557918 = 0;
      var colontmp__637534460 = 0;
      colontmp__637534460 = subInt(L_33557913, 1);
      var res_637534461 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_637534461 <= colontmp__637534460)) break Label3;
            i_33557918 = res_637534461;
            result_33557911[chckIndx(i_33557918, 0, (result_33557911).length - 1)] = s_33557908[chckIndx(addInt(i_33557918, first_33557912), 0, (s_33557908).length - 1)];
            res_637534461 = addInt(res_637534461, 1);
          }
      } while (false);
    } while (false);

  return result_33557911;

}

function nsuSplitChar(s_805306859, sep_805306860, maxsplit_805306861) {
  var result_805306862 = [];

    result_805306862 = nimCopy(null, [], NTI805306706);
    Label1: do {
      var xHEX60gensym67_805306868 = [];
      var lastHEX60gensym34_469763746 = 0;
      var splitsHEX60gensym34_469763747 = maxsplit_805306861;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym34_469763746 <= (s_805306859).length)) break Label3;
            var firstHEX60gensym34_469763749 = lastHEX60gensym34_469763746;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym34_469763746 < (s_805306859).length) && !((s_805306859[chckIndx(lastHEX60gensym34_469763746, 0, (s_805306859).length - 1)] == sep_805306860)))) break Label5;
                  lastHEX60gensym34_469763746 = addInt(lastHEX60gensym34_469763746, 1);
                }
            } while (false);
            if ((splitsHEX60gensym34_469763747 == 0)) {
            lastHEX60gensym34_469763746 = (s_805306859).length;
            }
            
            xHEX60gensym67_805306868 = substr_33557907(s_805306859, firstHEX60gensym34_469763749, subInt(lastHEX60gensym34_469763746, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym67_805306868, NTI33554439);
            result_805306862.push(Temporary6);;
            if ((splitsHEX60gensym34_469763747 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym34_469763747 = subInt(splitsHEX60gensym34_469763747, 1);
            lastHEX60gensym34_469763746 = addInt(lastHEX60gensym34_469763746, 1);
          }
      } while (false);
    } while (false);

  return result_805306862;

}

function new_469762453() {
  var result_469762456 = null;

  BeforeRet: do {
    var r_469762458 = null;
    r_469762458 = ({seed: null, gen: null, tag: null, orig: null, sv: null});
    result_469762456 = r_469762458;
    break BeforeRet;
  } while (false);

  return result_469762456;

}

function nsuStartsWith(s_805307681, prefix_805307682) {
            var Temporary3;

  var result_805307683 = false;

  BeforeRet: do {
    var prefixLenHEX60gensym141_805307688 = (prefix_805307682).length;
    var sLenHEX60gensym141_805307689 = (s_805307681).length;
    var iHEX60gensym141_805307690 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym141_805307688 <= iHEX60gensym141_805307690)) {
          result_805307683 = true;
          break BeforeRet;
          }
          
            if ((sLenHEX60gensym141_805307689 <= iHEX60gensym141_805307690)) Temporary3 = true; else {              Temporary3 = !((s_805307681[chckIndx(iHEX60gensym141_805307690, 0, (s_805307681).length - 1)] == prefix_805307682[chckIndx(iHEX60gensym141_805307690, 0, (prefix_805307682).length - 1)]));            }          if (Temporary3) {
          result_805307683 = false;
          break BeforeRet;
          }
          
          iHEX60gensym141_805307690 = addInt(iHEX60gensym141_805307690, 1);
        }
    } while (false);
  } while (false);

  return result_805307683;

}

function cbSeedQrDone_469762447(err_469762448, data_469762449) {
                var Temporary7;
                var Temporary8;

    if (!((err_469762448 == 0))) {
          Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
      qrReader.hide();
    
    }
    else {
      var escape_data_469762450 = escape_html(data_469762449);
      var sdata_469762451 = cstrToNimstr(escape_data_469762450);
      var ds_469762452 = nsuSplitChar(sdata_469762451, 44, -1);
      var seedCardInfo_469762471 = new_469762453();
      Label1: do {
        var d_469762492 = null;
        var d_469762492_Idx = 0;
        var i_469763735 = 0;
        var L_469763736 = (ds_469762452).length;
        Label2: do {
            Label3: while (true) {
            if (!(i_469763735 < L_469763736)) break Label3;
              d_469762492 = ds_469762452; d_469762492_Idx = chckIndx(i_469763735, 0, (ds_469762452).length - 1);
              if (nsuStartsWith(d_469762492[d_469762492_Idx], makeNimstrLit("seed:"))) {
              seedCardInfo_469762471.seed = toJSStr(HEX5BHEX5D_1073745050(d_469762492[d_469762492_Idx], HEX2EHEX2E_1006633040(5, 1)));
              }
              else {
              if (nsuStartsWith(d_469762492[d_469762492_Idx], makeNimstrLit("tag:"))) {
              seedCardInfo_469762471.tag = toJSStr(HEX5BHEX5D_1073745050(d_469762492[d_469762492_Idx], HEX2EHEX2E_1006633040(4, 1)));
              }
              else {
              if (nsuStartsWith(d_469762492[d_469762492_Idx], makeNimstrLit("gen:"))) {
              seedCardInfo_469762471.gen = toJSStr(HEX5BHEX5D_1073745050(d_469762492[d_469762492_Idx], HEX2EHEX2E_1006633040(4, 1)));
              }
              }}
              i_469763735 = addInt(i_469763735, 1);
              if (!(((ds_469762452).length == L_469763736))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      seedCardInfo_469762471.orig = data_469762449;
            var seed_valid = false;
      if(seedCardInfo_469762471.seed) {
        var dec = base58.dec(seedCardInfo_469762471.seed);
        if(dec && dec.length == 32) {
          seed_valid = true;
        }
      }
      if(!seed_valid) {
        Notify.show(__t('Warning'), __t('Unsupported seed card was scanned.'), Notify.msgtype.warning);
      }

    
      var dupcheck_469762547 = false;
      Label4: do {
        var s_469762568 = null;
        var s_469762568_Idx = 0;
        var i_469763740 = 0;
        var L_469763741 = (seedCardInfos_469762302[0]).length;
        Label5: do {
            Label6: while (true) {
            if (!(i_469763740 < L_469763741)) break Label6;
              s_469762568 = seedCardInfos_469762302[0]; s_469762568_Idx = chckIndx(i_469763740, 0, (seedCardInfos_469762302[0]).length - 1);
                if (!(s_469762568[s_469762568_Idx].seed == null)) Temporary7 = false; else {                  Temporary7 = (seedCardInfo_469762471.seed == null);                }              if (Temporary7) {
              if ((s_469762568[s_469762568_Idx].orig == seedCardInfo_469762471.orig)) {
              dupcheck_469762547 = true;
              break Label4;
              }
              
              }
              else {
                if ((s_469762568[s_469762568_Idx].seed == seedCardInfo_469762471.seed)) Temporary8 = true; else {                  Temporary8 = (s_469762568[s_469762568_Idx].tag == seedCardInfo_469762471.tag);                }              if (Temporary8) {
              dupcheck_469762547 = true;
              break Label4;
              }
              }
              i_469763740 = addInt(i_469763740, 1);
              if (!(((seedCardInfos_469762302[0]).length == L_469763741))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      if (dupcheck_469762547) {
              Notify.show(__t('Error'), __t('The seed card has already been scanned.'), Notify.msgtype.error);
      
      }
      else {
      seedCardInfos_469762302[0].push(seedCardInfo_469762471);;
      }
      
            qrReader.hide();
    
      viewSelector_469762173(2, false);
    }
    

  
}

function showSeedQr_469762586() {
    
function HEX3Aanonymous_469762589() {
              qrReader.show(cbSeedQrDone_469762447);
    

      
    }

  var result_469762588 = null;

    result_469762588 = HEX3Aanonymous_469762589;

  return result_469762588;

}

function camChange_469762598() {
    
function HEX3Aanonymous_469762601() {
              $('.camtools button').blur();
      qrReader.next();
    

      
    }

  var result_469762600 = null;

    result_469762600 = HEX3Aanonymous_469762601;

  return result_469762600;

}

function camClose_469762602() {
    
function HEX3Aanonymous_469762605() {
              qrReader.hide();
    

      
    }

  var result_469762604 = null;

    result_469762604 = HEX3Aanonymous_469762605;

  return result_469762604;

}

function changeLanguage_469762844(ev_469762845, n_469762846) {
    var langId_469762847 = value_637534530(n_469762846);
    if ((langId_469762847 == 0)) {
    bip39_wordlist_469762336[0] = bip39_469762327[0].wordlists.english;
    wl_select_469762363[0] = nimCopy(null, wl_english_469762362[0], NTI469762289);
    wl_select_id_469762364[0] = 0;
    }
    else {
    if ((langId_469762847 == 1)) {
    bip39_wordlist_469762336[0] = bip39_469762327[0].wordlists.japanese;
    wl_select_469762363[0] = nimCopy(null, wl_japanese_469762349[0], NTI469762289);
    wl_select_id_469762364[0] = 1;
    }
    }
    autocompleteWords_469762309[0] = nimCopy(null, [], NTI469762703);
    chklist_469762314[0] = nimCopy(null, [], NTI469762714);
    viewUpdate_469762266();

  
}

function checkMnemonic_469762622(ev_469762623, n_469762624) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

    var s_469762625 = value_637534530(n_469762624);
    if (!((s_469762625 == prevCheckWord_469762315[0]))) {
    chklist_469762314[0] = nimCopy(null, [], NTI469762505);
    }
    
    prevCheckWord_469762315[0] = s_469762625;
      if (!!((s_469762625 == null))) Temporary1 = false; else {        Temporary1 = (0 < ((s_469762625) == null ? 0 : (s_469762625).length));      }    if (Temporary1) {
      if (!mnemonicFulfill_469762147[0]) Temporary2 = false; else {        Temporary2 = !((editingWords_469762303[0] == s_469762625));      }    if (Temporary2) {
    mnemonicFulfill_469762147[0] = false;
    viewSelector_469762173(3, false);
    }
    
    editingWords_469762303[0] = s_469762625;
    var cur_469762649 = document.getElementById((n_469762624.id)).selectionStart;
          s_469762625 = s_469762625.substr(0, cur_469762649).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
    
      if (!!((s_469762625 == null))) Temporary3 = false; else {        Temporary3 = (0 < ((s_469762625) == null ? 0 : (s_469762625).length));      }    if (Temporary3) {
    var tmplist_469762654 = [];
    Label4: do {
      var word_469762655 = null;
      var v_469763771 = null;
      for (var k in bip39_wordlist_469762336[0]) {
        if (!bip39_wordlist_469762336[0].hasOwnProperty(k)) continue;
        v_469763771=bip39_wordlist_469762336[0][k];
      word_469762655 = v_469763771;
      var w_469762656 = word_469762655;
      if (w_469762656.startsWith(s_469762625)) {
      tmplist_469762654.push(w_469762656);;
      }
      
      }
    } while (false);
    autocompleteWords_469762309[0] = nimCopy(null, tmplist_469762654, NTI469762512);
    }
    else {
      autocompleteWords_469762309[0] = nimCopy(null, [], NTI469762538);
    }
    
    }
    else {
      autocompleteWords_469762309[0] = nimCopy(null, [], NTI469762549);
    }
    
    viewUpdate_469762266();

  
}

function getVNodeById_603980046(id_603980047, kxi_603980048) {
  var result_603980049 = null;

    if (kxi_603980048.byId.hasOwnProperty(id_603980047)) {
    result_603980049 = kxi_603980048.byId[id_603980047];
    }
    

  return result_603980049;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function confirmMnemonic_469762742(input_id_469762743, advance_469762744) {
    
function HEX3Aanonymous_469762747() {
          var Temporary1;
          var Temporary5;
          var Temporary6;

        confirm_mnemonic_advanced_469762741[0] = advance_469762744;
        var x_469762748 = getVNodeById_603980046(input_id_469762743, kxi_603979840[0]);
        var s_469762749 = value_637534530(x_469762748);
          if (!!((s_469762749 == null))) Temporary1 = false; else {            Temporary1 = (0 < ((s_469762749) == null ? 0 : (s_469762749).length));          }        if (Temporary1) {
        var words_469762750 = [];
                inputWords_469762304[0] = s_469762749.replace(/[ 　\n\r]+/g, ' ').trim();
        words_469762750 = inputWords_469762304[0].split(' ');
      
        chklist_469762314[0] = nimCopy(null, [], NTI469762601);
        var idx_469762755 = 0;
        var allvalid_469762756 = true;
        Label2: do {
          var word_469762777 = null;
          var word_469762777_Idx = 0;
          var i_469763773 = 0;
          var L_469763774 = (words_469762750).length;
          Label3: do {
              Label4: while (true) {
              if (!(i_469763773 < L_469763774)) break Label4;
                word_469762777 = words_469762750; word_469762777_Idx = chckIndx(i_469763773, 0, (words_469762750).length - 1);
                if (wl_select_469762363[0].includes(word_469762777[word_469762777_Idx])) {
                if (advance_469762744) {
                var levs_469762781 = nimCopy(null, levens_one((word_469762777[word_469762777_Idx]), bip39_wordlist_469762336[0]), NTI469762615);
                chklist_469762314[0].push({Field0: idx_469762755, Field1: word_469762777[word_469762777_Idx], Field2: true, Field3: nimCopy(null, levs_469762781, NTI469762282)});;
                }
                else {
                chklist_469762314[0].push({Field0: idx_469762755, Field1: word_469762777[word_469762777_Idx], Field2: true, Field3: []});;
                }
                
                }
                else {
                  var levs_469762797 = nimCopy(null, levens((word_469762777[word_469762777_Idx]), bip39_wordlist_469762336[0]), NTI469762639);
                  chklist_469762314[0].push({Field0: idx_469762755, Field1: word_469762777[word_469762777_Idx], Field2: false, Field3: nimCopy(null, levs_469762797, NTI469762282)});;
                  allvalid_469762756 = false;
                }
                
                idx_469762755 = addInt(idx_469762755, 1);
                i_469763773 = addInt(i_469763773, 1);
                if (!(((words_469762750).length == L_469763774))) {
                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
          if (!allvalid_469762756) Temporary6 = false; else {            Temporary6 = (12 <= idx_469762755);          }          if (!Temporary6) Temporary5 = false; else {            Temporary5 = (modInt(idx_469762755, 3) == 0);          }        if (Temporary5) {
                  var bip39 = coinlibs.bip39;
          if(bip39.validateMnemonic(inputWords_469762304[0], bip39_wordlist_469762336[0])) {
            mnemonicFulfill_469762147[0] = true
          } else {
            Notify.show(__t('Warning'), __t('There are no misspellings, but some words seem to be wrong.') + (advance_469762744 ? '' : ' ' + __t('Try to use [Advanced Check]')), Notify.msgtype.warning);
          }
        
        if (mnemonicFulfill_469762147[0]) {
        viewSelector_469762173(4, false);
        }
        
        }
        
        }
        else {
          chklist_469762314[0] = nimCopy(null, [], NTI469762661);
        }
        
        autocompleteWords_469762309[0] = nimCopy(null, [], NTI469762672);
        viewUpdate_469762266();

      
    }

  var result_469762746 = null;

    result_469762746 = HEX3Aanonymous_469762747;

  return result_469762746;

}

function setInputText_603981027(n_603981028, s_603981029) {
    n_603981028.text = s_603981029;
    if (!((n_603981028.dom == null))) {
    n_603981028.dom.value = s_603981029;
    }
    

  
}

function selectWord_469762669(input_id_469762670, word_469762671, whole_replace_469762672) {
    
function HEX3Aanonymous_469762675() {
          var Temporary1;

        var x_469762676 = getVNodeById_603980046(input_id_469762670, kxi_603979840[0]);
        var s_469762677 = value_637534530(x_469762676);
          if (!!((s_469762677 == null))) Temporary1 = false; else {            Temporary1 = (0 < ((s_469762677) == null ? 0 : (s_469762677).length));          }        if (Temporary1) {
        var input_elm_469762689 = document.getElementById((input_id_469762670));
        var cur_469762694 = input_elm_469762689.selectionStart;
        var newcur_469762695 = cur_469762694;
        if (whole_replace_469762672) {
                  var t = s_469762677.substr(0, cur_469762694).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            s_469762677 = s_469762677.substr(0, cur_469762694 - t.length) + word_469762671;
            newcur_469762695 = s_469762677.length;
          }
        
        setInputText_603981027(x_469762676, s_469762677);
        editingWords_469762303[0] = s_469762677;
        input_elm_469762689.focus();
        input_elm_469762689.selectionStart = newcur_469762695;
        input_elm_469762689.selectionEnd = newcur_469762695;
        }
        else {
                    var t = s_469762677.substr(0, cur_469762694).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            var tail = s_469762677.substr(cur_469762694) || '';
            s_469762677 = s_469762677.substr(0, cur_469762694 - t.length) + word_469762671 + tail;
            newcur_469762695 = s_469762677.length - tail.length;
          }
        
          setInputText_603981027(x_469762676, s_469762677);
          editingWords_469762303[0] = s_469762677;
          input_elm_469762689.focus();
          input_elm_469762689.selectionEnd = newcur_469762695;
        }
        
        }
        
        autocompleteWords_469762309[0] = nimCopy(null, [], NTI469762586);
        viewUpdate_469762266();

      
    }

  var result_469762674 = null;

    result_469762674 = HEX3Aanonymous_469762675;

  return result_469762674;

}

function fixWord_469762832(input_id_469762833, idx_469762834, word_469762835) {
    
function HEX3Aanonymous_469762838() {
          var Temporary1;

        var x_469762839 = getVNodeById_603980046(input_id_469762833, kxi_603979840[0]);
        var s_469762840 = value_637534530(x_469762839);
          if (!!((s_469762840 == null))) Temporary1 = false; else {            Temporary1 = (0 < ((s_469762840) == null ? 0 : (s_469762840).length));          }        if (Temporary1) {
        var ret_469762841 = null;
                ret_469762841 = "";
        var count = 0;
        var find = false;
        var skip = false;
        for(var t in s_469762840) {
          if(/[ 　\n\r]/.test(s_469762840[t])) {
            ret_469762841 += s_469762840[t];
            if(find) {
              count++;
            }
            find = false;
            skip = false;
          } else {
            find = true;
            if(idx_469762834 == count && skip == false) {
              ret_469762841 += word_469762835;
              skip = true;
            } else {
              if(!skip) {
                ret_469762841 += s_469762840[t];
              }
            }
          }
        }
      
        setInputText_603981027(x_469762839, ret_469762841);
        editingWords_469762303[0] = ret_469762841;
        confirmMnemonic_469762742(input_id_469762833, confirm_mnemonic_advanced_469762741[0])();
        }
        

      
    }

  var result_469762837 = null;

    result_469762837 = HEX3Aanonymous_469762838;

  return result_469762837;

}

function mnemonicEditor_469762872() {
  var result_469762873 = null;

    var input_id_469762874 = "minput";
    var tmp_469762905 = tree_637534892(43, []);
    var tmp_469762906 = tree_637534892(43, []);
    tmp_469762906.class = "ui clearing segment medit-seg";
    var tmp_469762912 = tree_637534892(43, []);
    tmp_469762912.class = "ui form";
    var tmp_469762913 = tree_637534892(43, []);
    tmp_469762913.class = "field";
    var tmp_469762914 = tree_637534892(104, []);
    add_637534829(tmp_469762914, text_637534947(translate_1325400138("Select mnemonic language")));
    add_637534829(tmp_469762913, tmp_469762914);
    var tmp_469762915 = tree_637534892(43, []);
    tmp_469762915.class = "ui selection dropdown";
    var tmp_469762916 = tree_637534892(105, []);
    setAttr_637534755(tmp_469762916, "type", "hidden");
    setAttr_637534755(tmp_469762916, "name", "mnemonic-language");
    valueHEX3D_637534533(tmp_469762916, "1");
    setAttr_637534755(tmp_469762916, "value", "1");
    addEventHandler_603980961(tmp_469762916, 8, changeLanguage_469762844, kxi_603979840[0]);
    add_637534829(tmp_469762915, tmp_469762916);
    var tmp_469762917 = tree_637534892(61, []);
    tmp_469762917.class = "dropdown icon";
    add_637534829(tmp_469762915, tmp_469762917);
    var tmp_469762918 = tree_637534892(43, []);
    tmp_469762918.class = "default text";
    add_637534829(tmp_469762918, text_637534947(translate_1325400138("Mnemonic Language")));
    add_637534829(tmp_469762915, tmp_469762918);
    var tmp_469762919 = tree_637534892(43, []);
    tmp_469762919.class = "menu";
    var tmp_469762920 = tree_637534892(43, []);
    tmp_469762920.class = "item";
    setAttr_637534755(tmp_469762920, "data-value", "1");
    add_637534829(tmp_469762920, text_637534947(translate_1325400138("Japanese")));
    add_637534829(tmp_469762919, tmp_469762920);
    var tmp_469762921 = tree_637534892(43, []);
    tmp_469762921.class = "item";
    setAttr_637534755(tmp_469762921, "data-value", "0");
    add_637534829(tmp_469762921, text_637534947(translate_1325400138("English")));
    add_637534829(tmp_469762919, tmp_469762921);
    add_637534829(tmp_469762915, tmp_469762919);
    add_637534829(tmp_469762913, tmp_469762915);
    add_637534829(tmp_469762912, tmp_469762913);
    var tmp_469762922 = tree_637534892(43, []);
    tmp_469762922.class = "field minput-field";
    var tmp_469762923 = tree_637534892(104, []);
    add_637534829(tmp_469762923, text_637534947(translate_1325400138("Import your mnemonic you already have")));
    add_637534829(tmp_469762922, tmp_469762923);
    var tmp_469762924 = tree_637534892(111, []);
    tmp_469762924.id = input_id_469762874;
    valueHEX3D_637534533(tmp_469762924, editingWords_469762303[0]);
    setAttr_637534755(tmp_469762924, "value", editingWords_469762303[0]);
    addEventHandler_603980961(tmp_469762924, 3, checkMnemonic_469762622, kxi_603979840[0]);
    addEventHandler_603980961(tmp_469762924, 16, checkMnemonic_469762622, kxi_603979840[0]);
    setAttr_637534755(tmp_469762924, "spellcheck", "false");
    add_637534829(tmp_469762922, tmp_469762924);
    add_637534829(tmp_469762912, tmp_469762922);
    add_637534829(tmp_469762906, tmp_469762912);
    var tmp_469762925 = tree_637534892(106, []);
    tmp_469762925.class = "ui right floated primary button";
    addEventHandler_603980969(tmp_469762925, 0, confirmMnemonic_469762742(input_id_469762874, false), kxi_603979840[0]);
    add_637534829(tmp_469762925, text_637534947(translate_1325400138("Check")));
    add_637534829(tmp_469762906, tmp_469762925);
    var tmp_469762926 = tree_637534892(106, []);
    tmp_469762926.class = "ui right floated default button";
    addEventHandler_603980969(tmp_469762926, 0, confirmMnemonic_469762742(input_id_469762874, true), kxi_603979840[0]);
    add_637534829(tmp_469762926, text_637534947(translate_1325400138("Advanced Check")));
    add_637534829(tmp_469762906, tmp_469762926);
    add_637534829(tmp_469762905, tmp_469762906);
    var tmp_469762927 = tree_637534892(43, []);
    tmp_469762927.class = "medit-autocomp";
    Label1: do {
      var word_469762938 = null;
      var word_469762938_Idx = 0;
      var i_469763753 = 0;
      var L_469763754 = (autocompleteWords_469762309[0]).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469763753 < L_469763754)) break Label3;
            word_469762938 = autocompleteWords_469762309[0]; word_469762938_Idx = chckIndx(i_469763753, 0, (autocompleteWords_469762309[0]).length - 1);
            var tmp_469762928 = tree_637534892(106, []);
            tmp_469762928.class = "ui mini teal label";
            addEventHandler_603980969(tmp_469762928, 0, selectWord_469762669(input_id_469762874, word_469762938[word_469762938_Idx], true), kxi_603979840[0]);
            add_637534829(tmp_469762928, text_637534947(word_469762938[word_469762938_Idx]));
            add_637534829(tmp_469762927, tmp_469762928);
            i_469763753 = addInt(i_469763753, 1);
            if (!(((autocompleteWords_469762309[0]).length == L_469763754))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label4: do {
      var i_469762949 = 0;
      var colontmp__469763767 = 0;
      colontmp__469763767 = (chklist_469762314[0]).length - 1;
      var res_469763768 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_469763768 <= colontmp__469763767)) break Label6;
            i_469762949 = res_469763768;
            if (chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field2) {
            var tmp_469762929 = tree_637534892(106, []);
            tmp_469762929.class = "ui mini green label";
            var tmp_469762930 = tree_637534892(61, []);
            tmp_469762930.class = "check circle icon";
            add_637534829(tmp_469762930, text_637534947((" " + chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field1)));
            add_637534829(tmp_469762929, tmp_469762930);
            Label7: do {
              var lev_469762953 = null;
              var lev_469762953_Idx = 0;
              var colontmp__469763758 = [];
              colontmp__469763758 = chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field3;
              var i_469763759 = 0;
              var L_469763760 = (colontmp__469763758).length;
              Label8: do {
                  Label9: while (true) {
                  if (!(i_469763759 < L_469763760)) break Label9;
                    lev_469762953 = colontmp__469763758; lev_469762953_Idx = chckIndx(i_469763759, 0, (colontmp__469763758).length - 1);
                    if (!((chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field1 == lev_469762953[lev_469762953_Idx]))) {
                    var tmp_469762931 = tree_637534892(106, []);
                    tmp_469762931.class = "ui mini blue basic label";
                    addEventHandler_603980969(tmp_469762931, 0, fixWord_469762832(input_id_469762874, chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field0, lev_469762953[lev_469762953_Idx]), kxi_603979840[0]);
                    add_637534829(tmp_469762931, text_637534947(lev_469762953[lev_469762953_Idx]));
                    add_637534829(tmp_469762929, tmp_469762931);
                    }
                    
                    i_469763759 = addInt(i_469763759, 1);
                    if (!(((colontmp__469763758).length == L_469763760))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            add_637534829(tmp_469762927, tmp_469762929);
            }
            else {
              var tmp_469762932 = tree_637534892(106, []);
              tmp_469762932.class = "ui mini pink label";
              var tmp_469762933 = tree_637534892(61, []);
              tmp_469762933.class = "x icon";
              add_637534829(tmp_469762933, text_637534947((" " + chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field1)));
              add_637534829(tmp_469762932, tmp_469762933);
              Label10: do {
                var lev_469762957 = null;
                var lev_469762957_Idx = 0;
                var colontmp__469763763 = [];
                colontmp__469763763 = chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field3;
                var i_469763764 = 0;
                var L_469763765 = (colontmp__469763763).length;
                Label11: do {
                    Label12: while (true) {
                    if (!(i_469763764 < L_469763765)) break Label12;
                      lev_469762957 = colontmp__469763763; lev_469762957_Idx = chckIndx(i_469763764, 0, (colontmp__469763763).length - 1);
                      var tmp_469762934 = tree_637534892(106, []);
                      tmp_469762934.class = "ui mini blue basic label";
                      addEventHandler_603980969(tmp_469762934, 0, fixWord_469762832(input_id_469762874, chklist_469762314[0][chckIndx(i_469762949, 0, (chklist_469762314[0]).length - 1)].Field0, lev_469762957[lev_469762957_Idx]), kxi_603979840[0]);
                      add_637534829(tmp_469762934, text_637534947(lev_469762957[lev_469762957_Idx]));
                      add_637534829(tmp_469762932, tmp_469762934);
                      i_469763764 = addInt(i_469763764, 1);
                      if (!(((colontmp__469763763).length == L_469763765))) {
                      failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
              add_637534829(tmp_469762927, tmp_469762932);
            }
            
            res_469763768 = addInt(res_469763768, 1);
          }
      } while (false);
    } while (false);
    add_637534829(tmp_469762905, tmp_469762927);
    result_469762873 = tmp_469762905;

  return result_469762873;

}

function protectSelector_469762285(protectType_469762286) {
    
function HEX3Aanonymous_469762289() {
              qrReader.hide();
    
        currentProtectType_469762115[0] = protectType_469762286;
        showPage1_469762143[0] = false;
        showPage2_469762144[0] = true;
        if ((currentProtectType_469762115[0] == 0)) {
                $('#keyselector').removeClass('grey').addClass('olive');
        $('#passselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#passselector').removeClass('grey').addClass('olive');
        $('#keyselector').removeClass('olive').addClass('grey');
      
        }
        
        viewUpdate_469762266();

      
    }

  var result_469762288 = null;

    result_469762288 = HEX3Aanonymous_469762289;

  return result_469762288;

}

function confirmKeyCard_469762594(ev_469762595, n_469762596) {
    var ret_lock_469762597 = false;
        var wallet = pastel.wallet;
    ret_lock_469762597 = wallet.lockShieldedKeys(keyCardVal_469762582[0], 1, true);
  
    if (ret_lock_469762597) {
    keyCardFulfill_469762148[0] = true;
    showPage3_469762145[0] = true;
    viewUpdate_469762266();
    }
    else {
            Notify.show(__t('Error'), __t('Failed to lock your wallet with the key card.'), Notify.msgtype.error);
    
    }
    

  
}

function cbKeyQrDone_469762583(err_469762584, data_469762585) {
    if (!((err_469762584 == 0))) {
          Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
      qrReader.hide();
    
    }
    else {
      keyCardVal_469762582[0] = data_469762585;
            qrReader.hide();
    
      viewSelector_469762173(8, false);
    }
    

  
}

function showKeyQr_469762590() {
    
function HEX3Aanonymous_469762593() {
        keyCardFulfill_469762148[0] = false;
        showPage3_469762145[0] = false;
              qrReader.show(cbKeyQrDone_469762583);
    

      
    }

  var result_469762592 = null;

    result_469762592 = HEX3Aanonymous_469762593;

  return result_469762592;

}

function changePassphrase_469763328(ev_469763329, n_469763330) {
    if (!((passPhrase_469762316[0] == value_637534530(n_469763330)))) {
    passphraseFulfill_469762149[0] = false;
    showPage3_469762145[0] = false;
    passPhrase_469762316[0] = value_637534530(n_469763330);
    viewUpdate_469762266();
    }
    

  
}

function confirmPassphrase_469763331(ev_469763332, n_469763333) {
    var ret_lock_469763334 = false;
    var passlen_469763335 = 0;
        var val = $('input[name="input-passphrase"]').val();
    if(val) {
      passlen_469763335 = val.length;
      $('input[name="input-passphrase"]').blur();
      var wallet = pastel.wallet;
      ret_lock_469763334 = wallet.lockShieldedKeys($('input[name="input-passphrase"]').val(), 2, true);
    }
  
    if ((0 < passlen_469763335)) {
    if (ret_lock_469763334) {
    passphraseFulfill_469762149[0] = true;
    showPage3_469762145[0] = true;
    viewUpdate_469762266();
    }
    else {
              Notify.show(__t('Error'), __t('Failed to lock your wallet with the passphrase.'), Notify.msgtype.error);
      
    }
    
    }
    

  
}

function passphraseEditor_469763336() {
  var result_469763337 = null;

    var tmp_469763338 = tree_637534892(43, []);
    var tmp_469763339 = tree_637534892(43, []);
    tmp_469763339.class = "ui clearing segment passphrase-seg";
    var tmp_469763340 = tree_637534892(43, []);
    tmp_469763340.class = "ui inverted segment";
    var tmp_469763341 = tree_637534892(24, []);
    tmp_469763341.class = "ui grey inverted header center";
    add_637534829(tmp_469763341, text_637534947(translate_1325400138("Input passphrase")));
    add_637534829(tmp_469763340, tmp_469763341);
    var tmp_469763342 = tree_637534892(43, []);
    tmp_469763342.class = "ui form";
    var tmp_469763343 = tree_637534892(43, []);
    tmp_469763343.class = "field";
    var tmp_469763344 = tree_637534892(105, []);
    tmp_469763344.class = "center";
    setAttr_637534755(tmp_469763344, "type", "password");
    setAttr_637534755(tmp_469763344, "name", "input-passphrase");
    valueHEX3D_637534533(tmp_469763344, passPhrase_469762316[0]);
    setAttr_637534755(tmp_469763344, "value", passPhrase_469762316[0]);
    setAttr_637534755(tmp_469763344, "placeholder", translate_1325400138("Passphrase"));
    addEventHandler_603980961(tmp_469763344, 3, changePassphrase_469763328, kxi_603979840[0]);
    addEventHandler_603980961(tmp_469763344, 29, confirmPassphrase_469763331, kxi_603979840[0]);
    setAttr_637534755(tmp_469763344, "spellcheck", "false");
    add_637534829(tmp_469763343, tmp_469763344);
    add_637534829(tmp_469763342, tmp_469763343);
    add_637534829(tmp_469763340, tmp_469763342);
    add_637534829(tmp_469763339, tmp_469763340);
    var tmp_469763345 = tree_637534892(106, []);
    tmp_469763345.class = "ui right floated olive button";
    addEventHandler_603980961(tmp_469763345, 0, confirmPassphrase_469763331, kxi_603979840[0]);
    add_637534829(tmp_469763345, text_637534947(translate_1325400138("Apply")));
    add_637534829(tmp_469763339, tmp_469763345);
    add_637534829(tmp_469763338, tmp_469763339);
    result_469763337 = tmp_469763338;

  return result_469763337;

}

function btnSend_469763358() {
    
function HEX3Aanonymous_469763361() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 1) ? 0 : 1);
      document.getElementById('btn-send').blur();
    

      
    }

  var result_469763360 = null;

    result_469763360 = HEX3Aanonymous_469763361;

  return result_469763360;

}

function btnReceive_469763362() {
    
function HEX3Aanonymous_469763365() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 2) ? 0 : 2);
      document.getElementById('btn-receive').blur();
    

      
    }

  var result_469763364 = null;

    result_469763364 = HEX3Aanonymous_469763365;

  return result_469763364;

}

function btnRecvClose_469763370() {
    
function HEX3Aanonymous_469763373() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(2);
    

      
    }

  var result_469763372 = null;

    result_469763372 = HEX3Aanonymous_469763373;

  return result_469763372;

}

function recvAddressSelector_469763374() {
  var result_469763375 = null;

    var tmp_469763376 = tree_637534892(43, []);
    tmp_469763376.id = "receive-address";
    tmp_469763376.class = "ui center aligned segment hidden";
    var tmp_469763377 = tree_637534892(43, []);
    tmp_469763377.class = "ui top attached label recvaddress";
    add_637534829(tmp_469763377, text_637534947((translate_1325400138("Receive Address") + " ")));
    var tmp_469763378 = tree_637534892(70, []);
    var tmp_469763379 = tree_637534892(61, []);
    tmp_469763379.class = "close icon btn-close";
    addEventHandler_603980969(tmp_469763379, 0, btnRecvClose_469763370(), kxi_603979840[0]);
    add_637534829(tmp_469763378, tmp_469763379);
    add_637534829(tmp_469763377, tmp_469763378);
    add_637534829(tmp_469763376, tmp_469763377);
    var tmp_469763380 = tree_637534892(43, []);
    tmp_469763380.class = "ui mini basic icon buttons";
    var tmp_469763381 = tree_637534892(106, []);
    tmp_469763381.id = "btn-recv-copy";
    tmp_469763381.class = "ui button";
    setAttr_637534755(tmp_469763381, "title", translate_1325400138("Copy"));
    var tmp_469763382 = tree_637534892(61, []);
    tmp_469763382.class = "paperclip icon";
    add_637534829(tmp_469763381, tmp_469763382);
    add_637534829(tmp_469763380, tmp_469763381);
    var tmp_469763383 = tree_637534892(106, []);
    tmp_469763383.id = "btn-recv-qrcode";
    tmp_469763383.class = "ui button";
    setAttr_637534755(tmp_469763383, "title", translate_1325400138("Create QR Code"));
    var tmp_469763384 = tree_637534892(61, []);
    tmp_469763384.class = "qrcode icon";
    add_637534829(tmp_469763383, tmp_469763384);
    add_637534829(tmp_469763380, tmp_469763383);
    add_637534829(tmp_469763376, tmp_469763380);
    var tmp_469763385 = tree_637534892(43, []);
    tmp_469763385.id = "address-text";
    tmp_469763385.class = "address";
    add_637534829(tmp_469763385, text_637534944([]));
    add_637534829(tmp_469763376, tmp_469763385);
    var tmp_469763386 = tree_637534892(43, []);
    tmp_469763386.class = "balls";
    var tmp_469763387 = tree_637534892(43, []);
    tmp_469763387.class = "used";
    var tmp_469763388 = tree_637534892(43, []);
    tmp_469763388.class = "circular ui icon mini button ball";
    var tmp_469763389 = tree_637534892(75, []);
    setAttr_637534755(tmp_469763389, "src", "");
    add_637534829(tmp_469763388, tmp_469763389);
    add_637534829(tmp_469763387, tmp_469763388);
    add_637534829(tmp_469763386, tmp_469763387);
    var tmp_469763390 = tree_637534892(43, []);
    tmp_469763390.class = "new";
    var tmp_469763391 = tree_637534892(43, []);
    tmp_469763391.class = "circular ui icon mini button ball";
    var tmp_469763392 = tree_637534892(75, []);
    setAttr_637534755(tmp_469763392, "src", "");
    add_637534829(tmp_469763391, tmp_469763392);
    add_637534829(tmp_469763390, tmp_469763391);
    var tmp_469763393 = tree_637534892(43, []);
    tmp_469763393.class = "circular ui icon mini button ball";
    var tmp_469763394 = tree_637534892(75, []);
    setAttr_637534755(tmp_469763394, "src", "");
    add_637534829(tmp_469763393, tmp_469763394);
    add_637534829(tmp_469763390, tmp_469763393);
    var tmp_469763395 = tree_637534892(43, []);
    tmp_469763395.class = "circular ui icon mini button ball";
    var tmp_469763396 = tree_637534892(75, []);
    setAttr_637534755(tmp_469763396, "src", "");
    add_637534829(tmp_469763395, tmp_469763396);
    add_637534829(tmp_469763390, tmp_469763395);
    var tmp_469763397 = tree_637534892(43, []);
    tmp_469763397.class = "circular ui icon mini button ball";
    var tmp_469763398 = tree_637534892(75, []);
    setAttr_637534755(tmp_469763398, "src", "");
    add_637534829(tmp_469763397, tmp_469763398);
    add_637534829(tmp_469763390, tmp_469763397);
    var tmp_469763399 = tree_637534892(43, []);
    tmp_469763399.class = "circular ui icon mini button ball";
    var tmp_469763400 = tree_637534892(75, []);
    setAttr_637534755(tmp_469763400, "src", "");
    add_637534829(tmp_469763399, tmp_469763400);
    add_637534829(tmp_469763390, tmp_469763399);
    add_637534829(tmp_469763386, tmp_469763390);
    add_637534829(tmp_469763376, tmp_469763386);
    result_469763375 = tmp_469763376;

  return result_469763375;

}

function recvAddressModal_469763402() {
  var result_469763403 = null;

    var tmp_469763404 = tree_637534892(43, []);
    tmp_469763404.id = "recv-modal";
    tmp_469763404.class = "ui";
    var tmp_469763405 = tree_637534892(61, []);
    tmp_469763405.class = "close icon btn-close-arc";
    add_637534829(tmp_469763404, tmp_469763405);
    var tmp_469763406 = tree_637534892(43, []);
    tmp_469763406.class = "close-arc";
    setAttr_637534755(tmp_469763406, "tabindex", "0");
    add_637534829(tmp_469763404, tmp_469763406);
    var tmp_469763407 = tree_637534892(43, []);
    tmp_469763407.id = "recv-qrcode";
    tmp_469763407.class = "qrcode";
    setAttr_637534755(tmp_469763407, "title", "");
    var tmp_469763408 = tree_637534892(84, []);
    setAttr_637534755(tmp_469763408, "width", "0");
    setAttr_637534755(tmp_469763408, "height", "0");
    add_637534829(tmp_469763407, tmp_469763408);
    add_637534829(tmp_469763404, tmp_469763407);
    var tmp_469763409 = tree_637534892(43, []);
    tmp_469763409.id = "recvaddr-form";
    tmp_469763409.class = "ui container";
    var tmp_469763410 = tree_637534892(43, []);
    tmp_469763410.class = "ui form";
    var tmp_469763411 = tree_637534892(43, []);
    tmp_469763411.class = "field";
    var tmp_469763412 = tree_637534892(104, []);
    add_637534829(tmp_469763412, text_637534947(translate_1325400138("Receive Address")));
    add_637534829(tmp_469763411, tmp_469763412);
    var tmp_469763413 = tree_637534892(43, []);
    tmp_469763413.class = "ui selection dropdown addr-selection";
    setAttr_637534755(tmp_469763413, "tabindex", "0");
    var tmp_469763414 = tree_637534892(105, []);
    setAttr_637534755(tmp_469763414, "type", "hidden");
    setAttr_637534755(tmp_469763414, "name", "address");
    valueHEX3D_637534533(tmp_469763414, "");
    setAttr_637534755(tmp_469763414, "value", "");
    add_637534829(tmp_469763413, tmp_469763414);
    var tmp_469763415 = tree_637534892(61, []);
    tmp_469763415.class = "dropdown icon";
    add_637534829(tmp_469763413, tmp_469763415);
    var tmp_469763416 = tree_637534892(43, []);
    tmp_469763416.class = "text";
    var tmp_469763417 = tree_637534892(75, []);
    setAttr_637534755(tmp_469763417, "clsss", "ui mini avatar image");
    setAttr_637534755(tmp_469763417, "src", "");
    add_637534829(tmp_469763416, tmp_469763417);
    add_637534829(tmp_469763416, text_637534944([]));
    add_637534829(tmp_469763413, tmp_469763416);
    var tmp_469763418 = tree_637534892(43, []);
    tmp_469763418.class = "menu";
    setAttr_637534755(tmp_469763418, "tabindex", "-1");
    setAttr_637534755(tmp_469763418, "data-tabindex", "-1");
    add_637534829(tmp_469763413, tmp_469763418);
    add_637534829(tmp_469763411, tmp_469763413);
    add_637534829(tmp_469763410, tmp_469763411);
    var tmp_469763419 = tree_637534892(43, []);
    tmp_469763419.class = "field";
    var tmp_469763420 = tree_637534892(104, []);
    add_637534829(tmp_469763420, text_637534947(translate_1325400138("Amount")));
    add_637534829(tmp_469763419, tmp_469763420);
    var tmp_469763421 = tree_637534892(43, []);
    tmp_469763421.class = "ui right labeled input";
    var tmp_469763422 = tree_637534892(105, []);
    tmp_469763422.class = "right";
    setAttr_637534755(tmp_469763422, "type", "text");
    setAttr_637534755(tmp_469763422, "name", "amount");
    setAttr_637534755(tmp_469763422, "placeholder", translate_1325400138("Amount"));
    setAttr_637534755(tmp_469763422, "spellcheck", "false");
    add_637534829(tmp_469763421, tmp_469763422);
    var tmp_469763423 = tree_637534892(43, []);
    tmp_469763423.class = "ui basic label";
    add_637534829(tmp_469763423, text_637534944(makeNimstrLit("ZNY")));
    add_637534829(tmp_469763421, tmp_469763423);
    add_637534829(tmp_469763419, tmp_469763421);
    add_637534829(tmp_469763410, tmp_469763419);
    var tmp_469763424 = tree_637534892(43, []);
    tmp_469763424.class = "field";
    var tmp_469763425 = tree_637534892(104, []);
    add_637534829(tmp_469763425, text_637534947(translate_1325400138("Label")));
    add_637534829(tmp_469763424, tmp_469763425);
    var tmp_469763426 = tree_637534892(105, []);
    tmp_469763426.class = "ui input";
    setAttr_637534755(tmp_469763426, "type", "text");
    setAttr_637534755(tmp_469763426, "name", "label");
    setAttr_637534755(tmp_469763426, "placeholder", translate_1325400138("Label"));
    add_637534829(tmp_469763424, tmp_469763426);
    add_637534829(tmp_469763410, tmp_469763424);
    var tmp_469763427 = tree_637534892(43, []);
    tmp_469763427.class = "field";
    var tmp_469763428 = tree_637534892(104, []);
    add_637534829(tmp_469763428, text_637534947(translate_1325400138("Message")));
    add_637534829(tmp_469763427, tmp_469763428);
    var tmp_469763429 = tree_637534892(111, []);
    tmp_469763429.class = "ui textarea";
    setAttr_637534755(tmp_469763429, "rows", "2");
    setAttr_637534755(tmp_469763429, "name", "message");
    setAttr_637534755(tmp_469763429, "placeholder", translate_1325400138("Message"));
    add_637534829(tmp_469763427, tmp_469763429);
    add_637534829(tmp_469763410, tmp_469763427);
    add_637534829(tmp_469763409, tmp_469763410);
    add_637534829(tmp_469763404, tmp_469763409);
    result_469763403 = tmp_469763404;

  return result_469763403;

}

function btnSendClose_469763366() {
    
function HEX3Aanonymous_469763369() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(1);
    

      
    }

  var result_469763368 = null;

    result_469763368 = HEX3Aanonymous_469763369;

  return result_469763368;

}

function checkSendAmount_469763430(ev_469763431, n_469763432) {
    var s_469763433 = value_637534530(n_469763432);
        var amount = String(s_469763433).trim();
    var amount_elm = $('#send-coins input[name="amount"]');
    if(amount.length > 0) {
      amount = amount.replace(/,/g, '');
      var amounts = amount.split('.');
      if(amount.match(/^\d+(\.\d{1,8})?$/)) {
        amount_elm.closest('.field').removeClass('error warning');
        var value = '';
        if(amounts.length == 1) {
          if(amounts[0] != '0') {
            value = amounts[0] + '00000000';
          } else {
            value = amounts[0];
          }
        } else if(amounts.length == 2) {
          value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
        }
        if(value.length > 0) {
          setSendUtxo(value);
        } else {
          resetSendBallCount();
        }
      } else {
        amount_elm.closest('.field').addClass('error');
      }
    } else {
      amount_elm.closest('.field').removeClass('error warning');
      resetSendBallCount();
    }
  

  
}

function sendForm_469763435() {
  var result_469763436 = null;

    var tmp_469763437 = tree_637534892(43, []);
    tmp_469763437.id = "send-coins";
    tmp_469763437.class = "ui center aligned segment hidden";
    var tmp_469763438 = tree_637534892(43, []);
    tmp_469763438.class = "ui top attached label sendcoins";
    add_637534829(tmp_469763438, text_637534947((translate_1325400138("Send Coins") + " ")));
    var tmp_469763439 = tree_637534892(70, []);
    var tmp_469763440 = tree_637534892(61, []);
    tmp_469763440.class = "close icon btn-close";
    addEventHandler_603980969(tmp_469763440, 0, btnSendClose_469763366(), kxi_603979840[0]);
    add_637534829(tmp_469763439, tmp_469763440);
    add_637534829(tmp_469763438, tmp_469763439);
    add_637534829(tmp_469763437, tmp_469763438);
    var tmp_469763441 = tree_637534892(43, []);
    tmp_469763441.class = "ui right floated mini basic icon buttons";
    var tmp_469763442 = tree_637534892(106, []);
    tmp_469763442.id = "btn-send-lock";
    tmp_469763442.class = "ui button";
    setAttr_637534755(tmp_469763442, "title", translate_1325400138("Locked"));
    var tmp_469763443 = tree_637534892(61, []);
    tmp_469763443.class = "lock icon";
    add_637534829(tmp_469763442, tmp_469763443);
    add_637534829(tmp_469763441, tmp_469763442);
    add_637534829(tmp_469763437, tmp_469763441);
    var tmp_469763444 = tree_637534892(43, []);
    tmp_469763444.class = "ui mini basic icon buttons btn-send-tools";
    var tmp_469763445 = tree_637534892(106, []);
    tmp_469763445.id = "btn-send-clear";
    tmp_469763445.class = "ui button";
    setAttr_637534755(tmp_469763445, "title", translate_1325400138("Clear"));
    var tmp_469763446 = tree_637534892(61, []);
    tmp_469763446.class = "eraser icon";
    add_637534829(tmp_469763445, tmp_469763446);
    add_637534829(tmp_469763444, tmp_469763445);
    var tmp_469763447 = tree_637534892(106, []);
    tmp_469763447.id = "btn-send-qrcode";
    tmp_469763447.class = "ui button";
    setAttr_637534755(tmp_469763447, "title", translate_1325400138("Scan QR Code"));
    var tmp_469763448 = tree_637534892(61, []);
    tmp_469763448.class = "camera icon";
    add_637534829(tmp_469763447, tmp_469763448);
    add_637534829(tmp_469763444, tmp_469763447);
    add_637534829(tmp_469763437, tmp_469763444);
    var tmp_469763449 = tree_637534892(43, []);
    tmp_469763449.class = "ui form";
    var tmp_469763450 = tree_637534892(43, []);
    tmp_469763450.class = "field";
    var tmp_469763451 = tree_637534892(104, []);
    add_637534829(tmp_469763451, text_637534947(translate_1325400138("Send Address")));
    add_637534829(tmp_469763450, tmp_469763451);
    var tmp_469763452 = tree_637534892(43, []);
    tmp_469763452.class = "ui small input";
    var tmp_469763453 = tree_637534892(105, []);
    tmp_469763453.class = "center";
    setAttr_637534755(tmp_469763453, "type", "text");
    setAttr_637534755(tmp_469763453, "name", "address");
    setAttr_637534755(tmp_469763453, "placeholder", translate_1325400138("Address"));
    setAttr_637534755(tmp_469763453, "spellcheck", "false");
    add_637534829(tmp_469763452, tmp_469763453);
    add_637534829(tmp_469763450, tmp_469763452);
    add_637534829(tmp_469763449, tmp_469763450);
    var tmp_469763454 = tree_637534892(43, []);
    tmp_469763454.class = "field";
    var tmp_469763455 = tree_637534892(104, []);
    add_637534829(tmp_469763455, text_637534947(translate_1325400138("Amount")));
    add_637534829(tmp_469763454, tmp_469763455);
    var tmp_469763456 = tree_637534892(43, []);
    tmp_469763456.class = "ui small input";
    var tmp_469763457 = tree_637534892(105, []);
    tmp_469763457.class = "center";
    setAttr_637534755(tmp_469763457, "type", "text");
    setAttr_637534755(tmp_469763457, "name", "amount");
    setAttr_637534755(tmp_469763457, "placeholder", translate_1325400138("Amount"));
    addEventHandler_603980961(tmp_469763457, 3, checkSendAmount_469763430, kxi_603979840[0]);
    setAttr_637534755(tmp_469763457, "spellcheck", "false");
    add_637534829(tmp_469763456, tmp_469763457);
    var tmp_469763458 = tree_637534892(43, []);
    tmp_469763458.class = "ui mini basic icon buttons utxoctrl";
    var tmp_469763459 = tree_637534892(106, []);
    tmp_469763459.id = "btn-utxo-minus";
    tmp_469763459.class = "ui button";
    setAttr_637534755(tmp_469763459, "title", translate_1325400138("-1 Ball"));
    var tmp_469763460 = tree_637534892(61, []);
    tmp_469763460.class = "minus circle icon";
    add_637534829(tmp_469763459, tmp_469763460);
    add_637534829(tmp_469763458, tmp_469763459);
    var tmp_469763461 = tree_637534892(106, []);
    tmp_469763461.id = "btn-utxo-count";
    tmp_469763461.class = "ui button sendutxos";
    setAttr_637534755(tmp_469763461, "tabindex", "-1");
    setAttr_637534755(tmp_469763461, "data-tabindex", "-1");
    add_637534829(tmp_469763461, text_637534944(makeNimstrLit("...")));
    add_637534829(tmp_469763458, tmp_469763461);
    var tmp_469763462 = tree_637534892(106, []);
    tmp_469763462.id = "btn-utxo-plus";
    tmp_469763462.class = "ui button";
    setAttr_637534755(tmp_469763462, "title", translate_1325400138("+1 Ball"));
    var tmp_469763463 = tree_637534892(61, []);
    tmp_469763463.class = "plus circle icon";
    add_637534829(tmp_469763462, tmp_469763463);
    add_637534829(tmp_469763458, tmp_469763462);
    add_637534829(tmp_469763456, tmp_469763458);
    add_637534829(tmp_469763454, tmp_469763456);
    add_637534829(tmp_469763449, tmp_469763454);
    var tmp_469763464 = tree_637534892(43, []);
    tmp_469763464.class = "ui list uri-options";
    Label1: do {
      var d_469763471 = null;
      var v_469763777 = null;
      for (var k in uriOptions) {
        if (!uriOptions.hasOwnProperty(k)) continue;
        v_469763777=uriOptions[k];
      d_469763471 = v_469763777;
      var tmp_469763465 = tree_637534892(43, []);
      tmp_469763465.class = "item";
      var tmp_469763466 = tree_637534892(43, []);
      tmp_469763466.class = "content";
      var tmp_469763467 = tree_637534892(43, []);
      tmp_469763467.class = "header";
      add_637534829(tmp_469763467, text_637534947(translate_1325400138(toJSStr(cstrToNimstr(d_469763471.key)))));
      add_637534829(tmp_469763466, tmp_469763467);
      var tmp_469763468 = tree_637534892(43, []);
      tmp_469763468.class = "description";
      add_637534829(tmp_469763468, text_637534947(d_469763471.value));
      add_637534829(tmp_469763466, tmp_469763468);
      add_637534829(tmp_469763465, tmp_469763466);
      add_637534829(tmp_469763464, tmp_469763465);
      }
    } while (false);
    add_637534829(tmp_469763449, tmp_469763464);
    var tmp_469763469 = tree_637534892(43, []);
    tmp_469763469.class = "fluid ui buttons";
    var tmp_469763470 = tree_637534892(106, []);
    tmp_469763470.id = "btn-tx-send";
    tmp_469763470.class = "ui inverted olive button center btn-tx-send";
    add_637534829(tmp_469763470, text_637534947(translate_1325400138("Send")));
    add_637534829(tmp_469763469, tmp_469763470);
    add_637534829(tmp_469763449, tmp_469763469);
    add_637534829(tmp_469763437, tmp_469763449);
    result_469763436 = tmp_469763437;

  return result_469763436;

}

function goSettings_469763346() {
    
function HEX3Aanonymous_469763349() {
        if (!(showPage4_469762146[0])) {
        viewSelector_469762173(14, false);
        supressRedraw_469762150[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          viewSelector_469762173(14, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_469763348 = null;

    result_469763348 = HEX3Aanonymous_469763349;

  return result_469763348;

}

function goLogs_469763350() {
    
function HEX3Aanonymous_469763353() {
        if (!(showPage4_469762146[0])) {
        viewSelector_469762173(13, false);
        supressRedraw_469762150[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          viewSelector_469762173(13, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_469763352 = null;

    result_469763352 = HEX3Aanonymous_469763353;

  return result_469763352;

}

function backWallet_469763354() {
    
function HEX3Aanonymous_469763357() {
        viewSelector_469762173(12, true);
              goSection('#section3', page_scroll_done);
    

      
    }

  var result_469763356 = null;

    result_469763356 = HEX3Aanonymous_469763357;

  return result_469763356;

}

function settingsPage_469763493() {
  var result_469763494 = null;

    var tmp_469763495 = tree_637534892(43, []);
    tmp_469763495.id = "settings";
    tmp_469763495.class = "ui container";
    var tmp_469763496 = tree_637534892(23, []);
    tmp_469763496.class = "ui dividing header";
    add_637534829(tmp_469763496, text_637534947(translate_1325400138("Settings")));
    add_637534829(tmp_469763495, tmp_469763496);
    var tmp_469763497 = tree_637534892(106, []);
    tmp_469763497.id = "btn-reset";
    tmp_469763497.class = "ui inverted red button";
    add_637534829(tmp_469763497, text_637534947(translate_1325400138("Reset Wallet")));
    add_637534829(tmp_469763495, tmp_469763497);
    var tmp_469763498 = tree_637534892(43, []);
    tmp_469763498.class = "ui pink inverted segment";
    add_637534829(tmp_469763498, text_637534947(translate_1325400138("Delete all your wallet data in your web browser, including your encrypted secret keys.\n If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\n or mnemonics before deleting it. Otherwise you may lost your coins forever.\n")));
    add_637534829(tmp_469763495, tmp_469763498);
    var tmp_469763499 = tree_637534892(43, []);
    tmp_469763499.class = "ui checkbox";
    var tmp_469763500 = tree_637534892(105, []);
    setAttr_637534755(tmp_469763500, "type", "checkbox");
    setAttr_637534755(tmp_469763500, "name", "confirm");
    add_637534829(tmp_469763499, tmp_469763500);
    var tmp_469763501 = tree_637534892(104, []);
    add_637534829(tmp_469763501, text_637534947(translate_1325400138("I confirmed that I have the seed cards or mnemonics or no coins in my wallet.")));
    add_637534829(tmp_469763499, tmp_469763501);
    add_637534829(tmp_469763495, tmp_469763499);
    result_469763494 = tmp_469763495;

  return result_469763494;

}

function settingsModal_469763481() {
  var result_469763482 = null;

    var tmp_469763483 = tree_637534892(43, []);
    tmp_469763483.id = "settings-modal";
    tmp_469763483.class = "ui basic modal";
    var tmp_469763484 = tree_637534892(43, []);
    tmp_469763484.class = "ui icon header";
    var tmp_469763485 = tree_637534892(61, []);
    tmp_469763485.class = "trash icon";
    add_637534829(tmp_469763484, tmp_469763485);
    add_637534829(tmp_469763484, text_637534947(translate_1325400138("Reset Wallet")));
    add_637534829(tmp_469763483, tmp_469763484);
    var tmp_469763486 = tree_637534892(43, []);
    tmp_469763486.class = "content";
    var tmp_469763487 = tree_637534892(31, []);
    add_637534829(tmp_469763487, text_637534947(translate_1325400138("Are you sure to reset your wallet?")));
    add_637534829(tmp_469763486, tmp_469763487);
    add_637534829(tmp_469763483, tmp_469763486);
    var tmp_469763488 = tree_637534892(43, []);
    tmp_469763488.class = "actions";
    var tmp_469763489 = tree_637534892(106, []);
    tmp_469763489.class = "ui basic cancel inverted button";
    var tmp_469763490 = tree_637534892(61, []);
    tmp_469763490.class = "remove icon";
    add_637534829(tmp_469763489, tmp_469763490);
    add_637534829(tmp_469763489, text_637534947(translate_1325400138("Cancel")));
    add_637534829(tmp_469763488, tmp_469763489);
    var tmp_469763491 = tree_637534892(106, []);
    tmp_469763491.class = "ui red ok inverted button";
    var tmp_469763492 = tree_637534892(61, []);
    tmp_469763492.class = "checkmark icon";
    add_637534829(tmp_469763491, tmp_469763492);
    add_637534829(tmp_469763491, text_637534947(translate_1325400138("Reset")));
    add_637534829(tmp_469763488, tmp_469763491);
    add_637534829(tmp_469763483, tmp_469763488);
    result_469763482 = tmp_469763483;

  return result_469763482;

}

function appMain_469763502(data_469763503) {
  var result_469763504 = null;

    var tmp_469763505 = tree_637534892(43, []);
    if (showPage1_469762143[0]) {
    var tmp_469763506 = tree_637534892(17, []);
    tmp_469763506.id = "section1";
    tmp_469763506.class = "section";
    var tmp_469763507 = tree_637534892(43, []);
    tmp_469763507.class = "intro";
    var tmp_469763508 = tree_637534892(43, []);
    tmp_469763508.class = "intro-head";
    var tmp_469763509 = tree_637534892(43, []);
    tmp_469763509.class = "caption";
    add_637534829(tmp_469763509, text_637534944(makeNimstrLit("Pastel Wallet")));
    add_637534829(tmp_469763508, tmp_469763509);
    var tmp_469763510 = tree_637534892(43, []);
    tmp_469763510.class = "ui container method-selector";
    var tmp_469763511 = tree_637534892(43, []);
    tmp_469763511.class = "title";
    add_637534829(tmp_469763511, text_637534947(translate_1325400138("Scan your seed cards or input your mnemonic to start.")));
    add_637534829(tmp_469763510, tmp_469763511);
    var tmp_469763512 = tree_637534892(43, []);
    tmp_469763512.class = "ui buttons";
    var tmp_469763513 = tree_637534892(106, []);
    tmp_469763513.id = "seedselector";
    tmp_469763513.class = "ui olive button";
    addEventHandler_603980969(tmp_469763513, 0, importSelector_469762267(0), kxi_603979840[0]);
    var tmp_469763514 = tree_637534892(61, []);
    tmp_469763514.class = "qrcode icon";
    add_637534829(tmp_469763513, tmp_469763514);
    add_637534829(tmp_469763513, text_637534947(translate_1325400138("Seed card")));
    add_637534829(tmp_469763512, tmp_469763513);
    var tmp_469763515 = tree_637534892(43, []);
    tmp_469763515.class = "or";
    add_637534829(tmp_469763512, tmp_469763515);
    var tmp_469763516 = tree_637534892(106, []);
    tmp_469763516.id = "mnemonicselector";
    tmp_469763516.class = "ui grey button";
    addEventHandler_603980969(tmp_469763516, 0, importSelector_469762267(1), kxi_603979840[0]);
    var tmp_469763517 = tree_637534892(61, []);
    tmp_469763517.class = "list alternate icon";
    add_637534829(tmp_469763516, tmp_469763517);
    add_637534829(tmp_469763516, text_637534947(translate_1325400138("Mnemonic")));
    add_637534829(tmp_469763512, tmp_469763516);
    add_637534829(tmp_469763510, tmp_469763512);
    add_637534829(tmp_469763508, tmp_469763510);
    add_637534829(tmp_469763507, tmp_469763508);
    var tmp_469763518 = tree_637534892(43, []);
    tmp_469763518.class = "intro-body";
    if ((currentImportType_469762108[0] == 0)) {
    var tmp_469763519 = tree_637534892(43, []);
    tmp_469763519.id = "seed-seg";
    tmp_469763519.class = "ui left aligned segment seed-seg";
    if (showScanResult_469762138[0]) {
    var tmp_469763520 = tree_637534892(43, []);
    tmp_469763520.class = "ui link cards seed-card-holder";
    tmp_469763520.id = "seed-card-holder";
    Label1: do {
      var idx_469763661 = 0;
      var seedCardInfo_469763662 = null;
      var i_469763711 = 0;
      var L_469763712 = (seedCardInfos_469762302[0]).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469763711 < L_469763712)) break Label3;
            idx_469763661 = i_469763711;
            seedCardInfo_469763662 = seedCardInfos_469762302[0][chckIndx(i_469763711, 0, (seedCardInfos_469762302[0]).length - 1)];
            add_637534829(tmp_469763520, seedCard_469762990(seedCardInfo_469763662, idx_469763661));
            i_469763711 = addInt(i_469763711, 1);
            if (!(((seedCardInfos_469762302[0]).length == L_469763712))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    var tmp_469763521 = tree_637534892(43, []);
    tmp_469763521.class = "seed-add-container";
    var tmp_469763522 = tree_637534892(106, []);
    tmp_469763522.class = "circular ui icon button bt-add-seed";
    addEventHandler_603980969(tmp_469763522, 0, showSeedQr_469762586(), kxi_603979840[0]);
    var tmp_469763523 = tree_637534892(61, []);
    tmp_469763523.class = "plus icon";
    add_637534829(tmp_469763522, tmp_469763523);
    add_637534829(tmp_469763521, tmp_469763522);
    add_637534829(tmp_469763520, tmp_469763521);
    add_637534829(tmp_469763519, tmp_469763520);
    var tmp_469763524 = tree_637534892(44, []);
    tmp_469763524.class = "pagenext";
    setAttr_637534755(tmp_469763524, "href", "#section2");
    var tmp_469763525 = tree_637534892(70, []);
    add_637534829(tmp_469763524, tmp_469763525);
    add_637534829(tmp_469763524, text_637534947(translate_1325400138("Next")));
    add_637534829(tmp_469763519, tmp_469763524);
    }
    
    if (showScanning_469762136[0]) {
    var tmp_469763526 = tree_637534892(43, []);
    tmp_469763526.class = "qr-scanning";
    var tmp_469763527 = tree_637534892(43, []);
    add_637534829(tmp_469763526, tmp_469763527);
    var tmp_469763528 = tree_637534892(43, []);
    add_637534829(tmp_469763526, tmp_469763528);
    add_637534829(tmp_469763519, tmp_469763526);
    }
    
    if (showScanSeedBtn_469762135[0]) {
    var tmp_469763529 = tree_637534892(106, []);
    tmp_469763529.class = "ui teal labeled icon button bt-scan-seed";
    addEventHandler_603980969(tmp_469763529, 0, showSeedQr_469762586(), kxi_603979840[0]);
    add_637534829(tmp_469763529, text_637534947(translate_1325400138("Scan seed card with camera")));
    var tmp_469763530 = tree_637534892(61, []);
    tmp_469763530.class = "camera icon";
    add_637534829(tmp_469763529, tmp_469763530);
    add_637534829(tmp_469763519, tmp_469763529);
    }
    
    if (showCamTools_469762137[0]) {
    var tmp_469763531 = tree_637534892(43, []);
    tmp_469763531.class = "ui small basic icon buttons camtools";
    var tmp_469763532 = tree_637534892(106, []);
    tmp_469763532.class = "ui button";
    addEventHandler_603980969(tmp_469763532, 0, camChange_469762598(), kxi_603979840[0]);
    var tmp_469763533 = tree_637534892(61, []);
    tmp_469763533.class = "camera icon";
    add_637534829(tmp_469763532, tmp_469763533);
    add_637534829(tmp_469763531, tmp_469763532);
    var tmp_469763534 = tree_637534892(106, []);
    tmp_469763534.class = "ui button";
    addEventHandler_603980969(tmp_469763534, 0, camClose_469762602(), kxi_603979840[0]);
    var tmp_469763535 = tree_637534892(61, []);
    tmp_469763535.class = "window close icon";
    add_637534829(tmp_469763534, tmp_469763535);
    add_637534829(tmp_469763531, tmp_469763534);
    add_637534829(tmp_469763519, tmp_469763531);
    }
    
    var tmp_469763536 = tree_637534892(84, []);
    tmp_469763536.id = "qrcanvas";
    add_637534829(tmp_469763519, tmp_469763536);
    var tmp_469763537 = tree_637534892(43, []);
    tmp_469763537.class = "ui dimmer qrcamera-loader";
    var tmp_469763538 = tree_637534892(43, []);
    tmp_469763538.class = "ui indeterminate text loader";
    add_637534829(tmp_469763538, text_637534947(translate_1325400138("Preparing Camera")));
    add_637534829(tmp_469763537, tmp_469763538);
    add_637534829(tmp_469763519, tmp_469763537);
    var tmp_469763539 = tree_637534892(43, []);
    tmp_469763539.class = "ui dimmer qrcamera-shutter";
    add_637534829(tmp_469763519, tmp_469763539);
    add_637534829(tmp_469763518, tmp_469763519);
    }
    else {
      var tmp_469763540 = tree_637534892(43, []);
      tmp_469763540.class = "ui left aligned segment mnemonic-seg";
      add_637534829(tmp_469763540, mnemonicEditor_469762872());
      if (mnemonicFulfill_469762147[0]) {
      var tmp_469763541 = tree_637534892(44, []);
      tmp_469763541.class = "pagenext";
      setAttr_637534755(tmp_469763541, "href", "#section2");
      var tmp_469763542 = tree_637534892(70, []);
      add_637534829(tmp_469763541, tmp_469763542);
      add_637534829(tmp_469763541, text_637534947(translate_1325400138("Next")));
      add_637534829(tmp_469763540, tmp_469763541);
      }
      
      add_637534829(tmp_469763518, tmp_469763540);
    }
    
    add_637534829(tmp_469763507, tmp_469763518);
    add_637534829(tmp_469763506, tmp_469763507);
    add_637534829(tmp_469763505, tmp_469763506);
    }
    
    if (showPage2_469762144[0]) {
    var tmp_469763543 = tree_637534892(17, []);
    tmp_469763543.id = "section2";
    tmp_469763543.class = "section";
    var tmp_469763544 = tree_637534892(43, []);
    tmp_469763544.class = "intro";
    var tmp_469763545 = tree_637534892(43, []);
    tmp_469763545.class = "intro-head";
    var tmp_469763546 = tree_637534892(43, []);
    tmp_469763546.class = "caption";
    add_637534829(tmp_469763546, text_637534944(makeNimstrLit("Pastel Wallet")));
    add_637534829(tmp_469763545, tmp_469763546);
    var tmp_469763547 = tree_637534892(43, []);
    tmp_469763547.class = "ui container method-selector";
    var tmp_469763548 = tree_637534892(43, []);
    tmp_469763548.class = "title";
    add_637534829(tmp_469763548, text_637534947(translate_1325400138("A key card or passphrase is required to encrypt and save the private key in your browser.\n You will need it before sending your coins.\n")));
    add_637534829(tmp_469763547, tmp_469763548);
    var tmp_469763549 = tree_637534892(43, []);
    tmp_469763549.class = "ui buttons";
    var tmp_469763550 = tree_637534892(106, []);
    tmp_469763550.id = "keyselector";
    tmp_469763550.class = "ui olive button";
    addEventHandler_603980969(tmp_469763550, 0, protectSelector_469762285(0), kxi_603979840[0]);
    var tmp_469763551 = tree_637534892(61, []);
    tmp_469763551.class = "qrcode icon";
    add_637534829(tmp_469763550, tmp_469763551);
    add_637534829(tmp_469763550, text_637534947(translate_1325400138("Key card")));
    add_637534829(tmp_469763549, tmp_469763550);
    var tmp_469763552 = tree_637534892(43, []);
    tmp_469763552.class = "or";
    add_637534829(tmp_469763549, tmp_469763552);
    var tmp_469763553 = tree_637534892(106, []);
    tmp_469763553.id = "passselector";
    tmp_469763553.class = "ui grey button";
    addEventHandler_603980969(tmp_469763553, 0, protectSelector_469762285(1), kxi_603979840[0]);
    var tmp_469763554 = tree_637534892(61, []);
    tmp_469763554.class = "list alternate icon";
    add_637534829(tmp_469763553, tmp_469763554);
    add_637534829(tmp_469763553, text_637534947(translate_1325400138("Passphrase")));
    add_637534829(tmp_469763549, tmp_469763553);
    add_637534829(tmp_469763547, tmp_469763549);
    add_637534829(tmp_469763545, tmp_469763547);
    add_637534829(tmp_469763544, tmp_469763545);
    var tmp_469763555 = tree_637534892(43, []);
    tmp_469763555.class = "intro-body";
    if ((currentProtectType_469762115[0] == 0)) {
    var tmp_469763556 = tree_637534892(43, []);
    tmp_469763556.id = "seed-seg";
    tmp_469763556.class = "ui left aligned segment seed-seg";
    if (showScanResult2_469762142[0]) {
    var tmp_469763557 = tree_637534892(43, []);
    tmp_469763557.class = "ui clearing segment keycard-seg";
    var tmp_469763558 = tree_637534892(43, []);
    tmp_469763558.class = "ui inverted segment";
    var tmp_469763559 = tree_637534892(24, []);
    tmp_469763559.class = "ui grey inverted header center";
    add_637534829(tmp_469763559, text_637534947(translate_1325400138("Scanned key card")));
    add_637534829(tmp_469763558, tmp_469763559);
    var tmp_469763560 = tree_637534892(31, []);
    tmp_469763560.class = "center";
    add_637534829(tmp_469763560, text_637534947(keyCardVal_469762582[0]));
    add_637534829(tmp_469763558, tmp_469763560);
    add_637534829(tmp_469763557, tmp_469763558);
    var tmp_469763561 = tree_637534892(106, []);
    tmp_469763561.class = "ui right floated olive button";
    addEventHandler_603980961(tmp_469763561, 0, confirmKeyCard_469762594, kxi_603979840[0]);
    add_637534829(tmp_469763561, text_637534947(translate_1325400138("Apply")));
    add_637534829(tmp_469763557, tmp_469763561);
    var tmp_469763562 = tree_637534892(106, []);
    tmp_469763562.class = "ui right floated grey button";
    addEventHandler_603980969(tmp_469763562, 0, showKeyQr_469762590(), kxi_603979840[0]);
    add_637534829(tmp_469763562, text_637534947(translate_1325400138("Rescan")));
    add_637534829(tmp_469763557, tmp_469763562);
    add_637534829(tmp_469763556, tmp_469763557);
    }
    
    if (keyCardFulfill_469762148[0]) {
    var tmp_469763563 = tree_637534892(44, []);
    tmp_469763563.class = "pagenext";
    setAttr_637534755(tmp_469763563, "href", "#section3");
    var tmp_469763564 = tree_637534892(70, []);
    add_637534829(tmp_469763563, tmp_469763564);
    add_637534829(tmp_469763563, text_637534947(translate_1325400138("Next")));
    add_637534829(tmp_469763556, tmp_469763563);
    }
    
    if (showScanning2_469762140[0]) {
    var tmp_469763565 = tree_637534892(43, []);
    tmp_469763565.class = "qr-scanning";
    var tmp_469763566 = tree_637534892(43, []);
    add_637534829(tmp_469763565, tmp_469763566);
    var tmp_469763567 = tree_637534892(43, []);
    add_637534829(tmp_469763565, tmp_469763567);
    add_637534829(tmp_469763556, tmp_469763565);
    }
    
    if (showScanSeedBtn2_469762139[0]) {
    var tmp_469763568 = tree_637534892(106, []);
    tmp_469763568.class = "ui teal labeled icon button bt-scan-seed";
    addEventHandler_603980969(tmp_469763568, 0, showKeyQr_469762590(), kxi_603979840[0]);
    add_637534829(tmp_469763568, text_637534947(translate_1325400138("Scan key card with camera")));
    var tmp_469763569 = tree_637534892(61, []);
    tmp_469763569.class = "camera icon";
    add_637534829(tmp_469763568, tmp_469763569);
    add_637534829(tmp_469763556, tmp_469763568);
    }
    
    if (showCamTools2_469762141[0]) {
    var tmp_469763570 = tree_637534892(43, []);
    tmp_469763570.class = "ui small basic icon buttons camtools";
    var tmp_469763571 = tree_637534892(106, []);
    tmp_469763571.class = "ui button";
    addEventHandler_603980969(tmp_469763571, 0, camChange_469762598(), kxi_603979840[0]);
    var tmp_469763572 = tree_637534892(61, []);
    tmp_469763572.class = "camera icon";
    add_637534829(tmp_469763571, tmp_469763572);
    add_637534829(tmp_469763570, tmp_469763571);
    var tmp_469763573 = tree_637534892(106, []);
    tmp_469763573.class = "ui button";
    addEventHandler_603980969(tmp_469763573, 0, camClose_469762602(), kxi_603979840[0]);
    var tmp_469763574 = tree_637534892(61, []);
    tmp_469763574.class = "window close icon";
    add_637534829(tmp_469763573, tmp_469763574);
    add_637534829(tmp_469763570, tmp_469763573);
    add_637534829(tmp_469763556, tmp_469763570);
    }
    
    var tmp_469763575 = tree_637534892(84, []);
    tmp_469763575.id = "qrcanvas";
    add_637534829(tmp_469763556, tmp_469763575);
    var tmp_469763576 = tree_637534892(43, []);
    tmp_469763576.class = "ui dimmer qrcamera-loader";
    var tmp_469763577 = tree_637534892(43, []);
    tmp_469763577.class = "ui indeterminate text loader";
    add_637534829(tmp_469763577, text_637534947(translate_1325400138("Preparing Camera")));
    add_637534829(tmp_469763576, tmp_469763577);
    add_637534829(tmp_469763556, tmp_469763576);
    var tmp_469763578 = tree_637534892(43, []);
    tmp_469763578.class = "ui dimmer qrcamera-shutter";
    add_637534829(tmp_469763556, tmp_469763578);
    add_637534829(tmp_469763555, tmp_469763556);
    }
    else {
      var tmp_469763579 = tree_637534892(43, []);
      tmp_469763579.class = "ui left aligned segment mnemonic-seg";
      add_637534829(tmp_469763579, passphraseEditor_469763336());
      if (passphraseFulfill_469762149[0]) {
      var tmp_469763580 = tree_637534892(44, []);
      tmp_469763580.class = "pagenext";
      setAttr_637534755(tmp_469763580, "href", "#section3");
      var tmp_469763581 = tree_637534892(70, []);
      add_637534829(tmp_469763580, tmp_469763581);
      add_637534829(tmp_469763580, text_637534947(translate_1325400138("Next")));
      add_637534829(tmp_469763579, tmp_469763580);
      }
      
      add_637534829(tmp_469763555, tmp_469763579);
    }
    
    add_637534829(tmp_469763544, tmp_469763555);
    add_637534829(tmp_469763543, tmp_469763544);
    add_637534829(tmp_469763505, tmp_469763543);
    }
    
    if (showPage3_469762145[0]) {
    var tmp_469763582 = tree_637534892(17, []);
    tmp_469763582.id = "section3";
    tmp_469763582.class = "section";
    var tmp_469763583 = tree_637534892(43, []);
    tmp_469763583.class = "intro";
    var tmp_469763584 = tree_637534892(43, []);
    tmp_469763584.class = "intro-head wallet-head";
    var tmp_469763585 = tree_637534892(43, []);
    tmp_469763585.class = "caption";
    add_637534829(tmp_469763585, text_637534944(makeNimstrLit("Pastel Wallet")));
    add_637534829(tmp_469763584, tmp_469763585);
    var tmp_469763586 = tree_637534892(43, []);
    tmp_469763586.class = "ui container wallet-btns";
    var tmp_469763587 = tree_637534892(43, []);
    tmp_469763587.class = "two ui basic buttons sendrecv";
    var tmp_469763588 = tree_637534892(106, []);
    tmp_469763588.id = "btn-send";
    tmp_469763588.class = "ui small button send";
    addEventHandler_603980969(tmp_469763588, 0, btnSend_469763358(), kxi_603979840[0]);
    var tmp_469763589 = tree_637534892(61, []);
    tmp_469763589.class = "counterclockwise rotated sign-out icon send";
    add_637534829(tmp_469763588, tmp_469763589);
    add_637534829(tmp_469763588, text_637534947((" " + translate_1325400138("Send"))));
    add_637534829(tmp_469763587, tmp_469763588);
    var tmp_469763590 = tree_637534892(106, []);
    tmp_469763590.id = "btn-receive";
    tmp_469763590.class = "ui small button receive";
    addEventHandler_603980969(tmp_469763590, 0, btnReceive_469763362(), kxi_603979840[0]);
    var tmp_469763591 = tree_637534892(61, []);
    tmp_469763591.class = "clockwise rotated sign-in icon receive";
    add_637534829(tmp_469763590, tmp_469763591);
    add_637534829(tmp_469763590, text_637534947((" " + translate_1325400138("Receive"))));
    add_637534829(tmp_469763587, tmp_469763590);
    add_637534829(tmp_469763586, tmp_469763587);
    add_637534829(tmp_469763584, tmp_469763586);
    add_637534829(tmp_469763583, tmp_469763584);
    var tmp_469763592 = tree_637534892(43, []);
    tmp_469763592.class = "intro-body wallet-body";
    var tmp_469763593 = tree_637534892(43, []);
    tmp_469763593.id = "wallet-balance";
    tmp_469763593.class = "ui center aligned segment";
    var tmp_469763594 = tree_637534892(43, []);
    tmp_469763594.class = "ui top left attached tiny label send";
    var tmp_469763595 = tree_637534892(70, []);
    add_637534829(tmp_469763595, text_637534944(makeNimstrLit("0")));
    add_637534829(tmp_469763594, tmp_469763595);
    add_637534829(tmp_469763594, text_637534944(makeNimstrLit(" ")));
    var tmp_469763596 = tree_637534892(61, []);
    tmp_469763596.class = "counterclockwise rotated sign-out icon";
    add_637534829(tmp_469763594, tmp_469763596);
    add_637534829(tmp_469763593, tmp_469763594);
    var tmp_469763597 = tree_637534892(43, []);
    tmp_469763597.class = "ui top right attached tiny label receive";
    var tmp_469763598 = tree_637534892(61, []);
    tmp_469763598.class = "clockwise rotated sign-in icon";
    add_637534829(tmp_469763597, tmp_469763598);
    var tmp_469763599 = tree_637534892(70, []);
    add_637534829(tmp_469763599, text_637534944(makeNimstrLit("0")));
    add_637534829(tmp_469763597, tmp_469763599);
    add_637534829(tmp_469763593, tmp_469763597);
    var tmp_469763600 = tree_637534892(43, []);
    tmp_469763600.class = "balance";
    add_637534829(tmp_469763600, text_637534944(makeNimstrLit("0")));
    add_637534829(tmp_469763593, tmp_469763600);
    var tmp_469763601 = tree_637534892(43, []);
    tmp_469763601.class = "ui bottom right attached tiny label symbol";
    add_637534829(tmp_469763601, text_637534944(makeNimstrLit("ZNY")));
    add_637534829(tmp_469763593, tmp_469763601);
    add_637534829(tmp_469763592, tmp_469763593);
    if (showRecvAddressSelector_469762151[0]) {
    add_637534829(tmp_469763592, recvAddressSelector_469763374());
    }
    
    if (showRecvAddressModal_469762152[0]) {
    add_637534829(tmp_469763592, recvAddressModal_469763402());
    }
    
    add_637534829(tmp_469763592, sendForm_469763435());
    var tmp_469763602 = tree_637534892(43, []);
    tmp_469763602.id = "ball-info";
    tmp_469763602.class = "ui center aligned segment";
    add_637534829(tmp_469763602, text_637534944([]));
    var tmp_469763603 = tree_637534892(71, []);
    add_637534829(tmp_469763602, tmp_469763603);
    add_637534829(tmp_469763602, text_637534944([]));
    add_637534829(tmp_469763592, tmp_469763602);
    var tmp_469763604 = tree_637534892(43, []);
    tmp_469763604.id = "wallet-seg";
    tmp_469763604.class = "ui center aligned segment seed-seg";
    var tmp_469763605 = tree_637534892(84, []);
    setAttr_637534755(tmp_469763605, "width", "0");
    setAttr_637534755(tmp_469763605, "height", "0");
    add_637534829(tmp_469763604, tmp_469763605);
    add_637534829(tmp_469763592, tmp_469763604);
    add_637534829(tmp_469763583, tmp_469763592);
    var tmp_469763606 = tree_637534892(43, []);
    tmp_469763606.class = "ui two bottom attached buttons settings";
    var tmp_469763607 = tree_637534892(106, []);
    tmp_469763607.class = "ui button";
    addEventHandler_603980969(tmp_469763607, 0, goSettings_469763346(), kxi_603979840[0]);
    var tmp_469763608 = tree_637534892(61, []);
    tmp_469763608.class = "cog icon";
    add_637534829(tmp_469763607, tmp_469763608);
    add_637534829(tmp_469763607, text_637534947(translate_1325400138("Settings")));
    var tmp_469763609 = tree_637534892(70, []);
    var tmp_469763610 = tree_637534892(61, []);
    tmp_469763610.class = "chevron down icon";
    add_637534829(tmp_469763609, tmp_469763610);
    add_637534829(tmp_469763607, tmp_469763609);
    add_637534829(tmp_469763606, tmp_469763607);
    var tmp_469763611 = tree_637534892(106, []);
    tmp_469763611.class = "ui button";
    addEventHandler_603980969(tmp_469763611, 0, goLogs_469763350(), kxi_603979840[0]);
    var tmp_469763612 = tree_637534892(61, []);
    tmp_469763612.class = "list alternate outline icon";
    add_637534829(tmp_469763611, tmp_469763612);
    add_637534829(tmp_469763611, text_637534947(translate_1325400138("Logs")));
    var tmp_469763613 = tree_637534892(70, []);
    var tmp_469763614 = tree_637534892(61, []);
    tmp_469763614.class = "chevron down icon";
    add_637534829(tmp_469763613, tmp_469763614);
    add_637534829(tmp_469763611, tmp_469763613);
    add_637534829(tmp_469763606, tmp_469763611);
    var tmp_469763615 = tree_637534892(43, []);
    tmp_469763615.id = "bottom-blink";
    add_637534829(tmp_469763606, tmp_469763615);
    add_637534829(tmp_469763583, tmp_469763606);
    add_637534829(tmp_469763582, tmp_469763583);
    var tmp_469763616 = tree_637534892(111, []);
    tmp_469763616.id = "clipboard";
    setAttr_637534755(tmp_469763616, "rows", "1");
    setAttr_637534755(tmp_469763616, "tabindex", "-1");
    setAttr_637534755(tmp_469763616, "data-tabindex", "-1");
    setAttr_637534755(tmp_469763616, "readOnly", "true");
    setAttr_637534755(tmp_469763616, "spellcheck", "false");
    add_637534829(tmp_469763582, tmp_469763616);
    add_637534829(tmp_469763505, tmp_469763582);
    }
    
    if ((showPage3_469762145[0] || showPage4_469762146[0])) {
    var tmp_469763617 = tree_637534892(17, []);
    tmp_469763617.id = "section4";
    tmp_469763617.class = "tradelogs-section";
    var tmp_469763618 = tree_637534892(43, []);
    tmp_469763618.class = "ui buttons settings backpage";
    var tmp_469763619 = tree_637534892(106, []);
    tmp_469763619.class = "ui button backwallet";
    addEventHandler_603980969(tmp_469763619, 0, backWallet_469763354(), kxi_603979840[0]);
    var tmp_469763620 = tree_637534892(61, []);
    tmp_469763620.class = "dot circle icon";
    add_637534829(tmp_469763619, tmp_469763620);
    add_637534829(tmp_469763619, text_637534947(translate_1325400138("Back")));
    var tmp_469763621 = tree_637534892(70, []);
    var tmp_469763622 = tree_637534892(61, []);
    tmp_469763622.class = "chevron up icon";
    add_637534829(tmp_469763621, tmp_469763622);
    add_637534829(tmp_469763619, tmp_469763621);
    add_637534829(tmp_469763618, tmp_469763619);
    add_637534829(tmp_469763617, tmp_469763618);
    if (showTradeLogs_469762153[0]) {
    var tmp_469763623 = tree_637534892(43, []);
    tmp_469763623.class = "ui container";
    var tmp_469763624 = tree_637534892(43, []);
    tmp_469763624.id = "tradeunconfs";
    tmp_469763624.class = "ui cards tradelogs";
    add_637534829(tmp_469763623, tmp_469763624);
    var tmp_469763625 = tree_637534892(43, []);
    tmp_469763625.id = "tradelogs";
    tmp_469763625.class = "ui cards tradelogs";
    add_637534829(tmp_469763623, tmp_469763625);
    add_637534829(tmp_469763617, tmp_469763623);
    }
    
    if (showSettings_469762154[0]) {
    add_637534829(tmp_469763617, settingsPage_469763493());
    add_637534829(tmp_469763617, settingsModal_469763481());
    }
    
    add_637534829(tmp_469763505, tmp_469763617);
    }
    
    result_469763504 = tmp_469763505;

  return result_469763504;

}

function afterScript_469763684(data_469763685) {
    $(".ui.dropdown").dropdown();
    if (showScanResult_469762138[0]) {
          function seedCardQrUpdate(vivid) {
        $('.seed-qrcode').each(function() {
          $(this).find('canvas').remove();
          var fillcolor;
          var fillStyleFn;
          if($(this).hasClass('active')) {
            fillcolor = vivid ? '#000' : '#7f7f7f';
            if(!vivid) {
              fillStyleFn = function(ctx) {
                var w = ctx.canvas.width;
                var h = ctx.canvas.height;
                var grd = ctx.createLinearGradient(0, 0, w, h);
                grd.addColorStop(0, "#666");
                grd.addColorStop(0.3, "#aaa");
                grd.addColorStop(1, "#555");
                return grd;
              }
            }
          } else {
            fillcolor = '#f8f8f8';
          }
          $(this).qrcode({
            render: 'canvas',
            ecLevel: 'Q',
            radius: 0.39,
            text: $(this).data('orig'),
            size: 188,
            mode: 2,
            label: '',
            fontname: 'sans',
            fontcolor: '#393939',
            fill: fillcolor,
            fillStyleFn: fillStyleFn
          });
        });
      }
      if(!$('.seed-qrcode .active').length) {
        $('.seed-qrcode').last().addClass('active');
      }
      seedCardQrUpdate();

      $('.seed-card').off('click').on('click', function() {
        $('.seed-card').not(this).each(function() {
          $(this).find('.seed-qrcode').removeClass('active');
        });
        $(this).find('.seed-qrcode').addClass('active');
        seedCardQrUpdate(true);
      });
      $('.seed-card').off('mouseleave').mouseleave(function() {
        $('.seed-qrcode').addClass('active');
        seedCardQrUpdate();
      });
      var holder = document.getElementById('seed-card-holder');
      if(holder) {
        holder.scrollLeft = holder.scrollWidth - holder.clientWidth;
      }
    
    }
    
    if ((showScanResult_469762138[0] || mnemonicFulfill_469762147[0])) {
          disable_caret_browsing($('#section2'));
      target_page_scroll = '#section2';
      page_scroll_done = function() {
        $('a.pagenext').css('visibility', 'hidden');
        $('#section1').hide();
        enable_caret_browsing($('#section2'));
        window.scrollTo(0, 0);
        jsSeedToKeys();
        jsViewSelector(5);
        page_scroll_done = function() {};
      }
    
    }
    
    if ((keyCardFulfill_469762148[0] || passphraseFulfill_469762149[0])) {
          disable_caret_browsing($('#section3'));
      target_page_scroll = '#section3';
      page_scroll_done = function() {
        var wallet = pastel.wallet;
        var ret = wallet.lockShieldedKeys();
        if(!ret) {
          Notify.show(__t('Error'), __t('Failed to lock keys.'), Notify.msgtype.error);
        }
        jsClearSensitive();
        $('a.pagenext').css('visibility', 'hidden');
        $('#section2').hide();
        enable_caret_browsing($('#section3'));
        window.scrollTo(0, 0);
        jsViewSelector(12);
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        }
        page_scroll_done = function() {};
      }
    
    }
    
    if ((((showScanResult_469762138[0] || mnemonicFulfill_469762147[0]) || keyCardFulfill_469762148[0]) || passphraseFulfill_469762149[0])) {
          for(var i in registerEventList) {
        var ev = registerEventList[i];
        ev.elm.removeEventListener(ev.type, ev.cb);
      }
      var elms = document.querySelectorAll('a.pagenext');
      Array.prototype.forEach.call(elms, function(elm) {
        var href = elm.getAttribute("href");
        if(href && href.startsWith('#')) {
          var cb = function(e) {
            e.preventDefault();
            var href = this.getAttribute('href');
            if(href == '#section2') {
              goSection(href, page_scroll_done);
            } else if(href == '#section3') {
              goSection(href, page_scroll_done);
            }
          }
          registerEventList.push({elm: elm, type: 'click', cb: cb});
          elm.addEventListener('click', cb);
        }
      });
    
    }
    
    if ((showPage2_469762144[0] && !(passphraseFulfill_469762149[0]))) {
          $('input[name="input-passphrase"]').focus();
    
    }
    
    if (showPage4_469762146[0]) {
          pastel.utxoballs.pause();
      //$.fn.visibility.settings.silent = true;
      $('.backpage').visibility({
        type: 'fixed',
        offset: 0
      });
    
    if (showTradeLogs_469762153[0]) {
            TradeLogs.start();
      
    }
    
    if (showSettings_469762154[0]) {
            Settings.init();
      
    }
    
          goSection('#section4', function() {
        disable_caret_browsing($('#section3'));
        target_page_scroll = '#section3';
        page_scroll_done = function() {
          TradeLogs.stop();
          $('.backpage').visibility({silent: true});
          $('#tradeunconfs').empty();
          $('#tradelogs').empty();
          $('#section4').hide();
          enable_caret_browsing($('#section3'));
          window.scrollTo(0, 0);
          setSupressRedraw(false);
          reloadViewSafeStart();
          jsViewSelector(12);
          page_scroll_done = function() {};
          pastel.utxoballs.resume();
          showPage4_469762146[0] = false;
          $('#bottom-blink').fadeIn(100).fadeOut(400);
        }
      });
    
    }
    else {
            $('#section4').hide();
    
    }
    
    if ((showPage3_469762145[0] || showPage4_469762146[0])) {
          reloadViewSafeEnd();
    
    }
    

  
}
var walletSetup_469763690 = [false];
  var stor  = new Stor();
  var xpubs = stor.get_xpubs();
  stor = null;
  if(xpubs.length > 0) {
    walletSetup_469763690[0] = true;
    function check_stream_ready() {
      setTimeout(function() {
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        } else {
          check_stream_ready();
        }
      }, 50);
    }
    check_stream_ready();
  }

if (walletSetup_469763690[0]) {
viewSelector_469762173(12, true);
}

appInst_469762098[0] = setInitializer_603980928(appMain_469763502, "main", afterScript_469763684);
