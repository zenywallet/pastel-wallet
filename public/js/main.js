/* Generated by the Nim Compiler v1.4.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI11945026 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11965030 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11965015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1194635 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11960255 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11960215 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11950017 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11895057 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11895042 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11895001 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11860015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11990033 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11990018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9725015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI5680232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI5935011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2380020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10500125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11726449 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11726445 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11790102 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11790087 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11726416 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11726415 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11790072 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11765006 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11740005 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10897211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2132083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2132084 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10465076 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10465074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10461139 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10465030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10465018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10465039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10465037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10461015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10465031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10465022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852472 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852468 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852464 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1852205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852291 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853628 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853619 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1853618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1852385 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1853626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1852387 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852269 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852267 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852661 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852273 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852271 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852659 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852657 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852655 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852653 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852275 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852651 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852675 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852281 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852279 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1188044 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1852767 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852285 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852283 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1188064 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1852231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852243 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852239 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1852233 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1852614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852612 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852610 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1852237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1852235 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10897207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10897209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1852293 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194621 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194633 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194637 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194728 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1188015 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1194723 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1194617 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194619 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194649 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1188013 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI2132022 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2132023 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NNI2132022 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2132022.node = NNI2132022;
NTI2132023.base = NTI2132022;
var NNI1194649 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194649.node = NNI1194649;
var NNI1194619 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194619.node = NNI1194619;
NTI1194723.base = NTI1194617;
NTI1194728.base = NTI1194617;
var NNI1194617 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1194723, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1188013, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1188013, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1194728, name: "up", sons: null}]};
NTI1194617.node = NNI1194617;
var NNI1194408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194408.node = NNI1194408;
NTI1194617.base = NTI1194408;
NTI1194619.base = NTI1194617;
NTI1194649.base = NTI1194619;
var NNI1194637 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194637.node = NNI1194637;
var NNI1194633 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194633.node = NNI1194633;
NTI1194633.base = NTI1194619;
NTI1194637.base = NTI1194633;
var NNI1194643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194643.node = NNI1194643;
var NNI1194621 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194621.node = NNI1194621;
NTI1194621.base = NTI1194617;
NTI1194643.base = NTI1194621;
var NNI1194641 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194641.node = NNI1194641;
NTI1194641.base = NTI1194619;
var NNI1852293 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI1188015, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI1188015, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI1188015, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI1188015, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI1188015, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI1188015, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI1188015, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI1188015, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI1188015, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI1188015, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI1188015, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI1188015, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI1188015, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI1188015, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI1188015, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI1188015, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI1188015, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI1188015, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI1188015, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI1188015, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI1188015, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI1188015, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI1188015, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI1188015, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI1188015, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI1188015, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI1188015, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI1188015, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI1188015, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI1188015, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI1188015, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI1188015, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI1188015, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI1188015, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI1188015, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI1188015, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI1188015, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI1188015, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI1188015, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI1188015, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI1188015, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI1188015, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI1188015, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI1188015, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI1188015, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI1188015, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI1188015, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI1188015, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI1188015, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI1188015, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI1188015, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI1188015, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI1188015, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI1188015, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI1188015, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI1188015, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI1188015, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI1188015, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI1188015, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI1188015, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI1188015, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI1188015, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI1188015, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI1188015, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI1188015, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI1188015, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI1188015, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI1188015, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI1188015, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI1188015, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI1188015, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI1188015, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI1188015, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI1188015, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI1188015, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI1188015, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI1188015, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI1188015, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI1188015, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI1188015, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI1188015, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI1188015, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI1188015, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI1188015, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI1188015, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI1188015, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI1188015, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI1188015, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI1188015, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI1188015, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI1188015, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI1188015, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI1188015, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI1188015, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI1188015, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI1188015, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI1188015, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI1188015, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI1188015, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI1188015, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI1188015, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI1188015, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI1188015, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI1188015, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI1188015, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI1188015, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI1188015, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI1188015, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI1188015, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI1188015, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI1188015, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI1188015, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1188015, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI1188015, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI1188015, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI1188015, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI1188015, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI1188015, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI1188015, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI1188015, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI1188015, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI1188015, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI1188015, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI1188015, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI1188015, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI1188015, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI1188015, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI1188015, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI1188015, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI1188015, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI1188015, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI1188015, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI1188015, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI1188015, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI1188015, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI1188015, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI1188015, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI1188015, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI1188015, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI1188015, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI1188015, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI1188015, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI1188015, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI1188015, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI1188015, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI1188015, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI1188015, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI1188015, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI1188015, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI1188015, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI1188015, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI1188015, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI1188015, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI1188015, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI1188015, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI1188015, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI1188015, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI1188015, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI1188015, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI1188015, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI1188015, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI1188015, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI1188015, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI1188015, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI1188015, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI1188015, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1188015, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI1188015, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI1188015, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI1188015, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI1188015, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI1188015, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI1188015, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI1188015, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI1188015, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI1188015, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI1188015, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI1188015, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI1188015, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI1188015, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI1188015, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI1188015, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI1188015, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI1188015, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI1188015, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI1188015, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI1188015, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI1188015, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI1188015, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI1188015, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI1188015, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI1188015, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI1188015, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI1188015, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI1188015, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI1188015, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI1188015, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI1188015, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI1188015, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI1188015, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI1188015, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI1188015, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI1188015, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI1188015, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI1188015, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI1188015, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI1188015, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI1188015, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI1188015, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI1188015, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI1188015, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI1188015, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI1188015, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI1188015, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI1188015, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI1188015, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI1188015, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI1188015, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI1188015, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI1188015, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI1188015, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI1188015, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI1188015, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI1188015, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI1188015, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI1188015, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI1188015, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI1188015, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI1188015, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI1188015, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI1188015, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI1188015, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI1188015, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI1188015, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI1188015, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI1188015, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI1188015, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI1188015, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI1188015, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI1188015, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI1188015, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI1188015, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI1188015, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI1188015, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI1188015, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI1188015, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI1188015, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI1188015, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI1188015, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI1188015, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI1188015, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI1188015, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI1188015, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI1188015, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI1188015, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI1188015, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI1188015, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI1188015, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI1188015, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI1188015, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI1188015, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI1188015, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI1188015, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI1188015, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI1188015, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI1188015, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI1188015, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI1188015, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI1188015, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI1188015, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI1188015, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI1188015, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI1188015, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI1188015, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI1188015, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI1188015, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI1188015, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI1188015, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1188015, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI1188015, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI1188015, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI1188015, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI1188015, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI1188015, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI1188015, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI1188015, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI1188015, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI1188015, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI1188015, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI1188015, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI1188015, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI1188015, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI1188015, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI1188015, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI1188015, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI1188015, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI1188015, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI1188015, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI1188015, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI1188015, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI1188015, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI1188015, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI1188015, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI1188015, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI1188015, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI1188015, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI1188015, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI1188015, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI1188015, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI1188015, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI1188015, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI1188015, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI1188015, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI1188015, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI1188015, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI1188015, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI1188015, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI1188015, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI1188015, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI1188015, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI1188015, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI1188015, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI1188015, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI1188015, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI1188015, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI1188015, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI1188015, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI1188015, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI1188015, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI1188015, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI1188015, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI1188015, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI1188015, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI1188015, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI1188015, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI1188015, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI1188015, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI1188015, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI1188015, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI1188015, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI1188015, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI1188015, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI1188015, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI1188015, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI1188015, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI1188015, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI1188015, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI1188015, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI1188015, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI1188015, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI1188015, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI1188015, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI1188015, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI1188015, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI1188015, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI1188015, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI1188015, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI1188015, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI1188015, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI1188015, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI1188015, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI1188015, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188015, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI1188015, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI1188015, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI1188015, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI1188015, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI1188015, name: "zIndex", sons: null}]};
NTI1852293.node = NNI1852293;
NTI1852293.base = NTI1194408;
var NNI10897207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI10897207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10897207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10897207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10897207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10897207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10897207, name: "pkSame", len: 0, sons: null}}};
NTI10897207.node = NNI10897207;
NTI1852610.base = NTI1852235;
NTI1852612.base = NTI1852235;
NTI1852614.base = NTI1852235;
var NNI1852233 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1852233, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1852233, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1852233, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1852233, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1852233, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1852233, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1852233, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1852233, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1852233, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1852233, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1852233, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1852233, name: "NotationNode", len: 0, sons: null}}};
NTI1852233.node = NNI1852233;
var NNI1852231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1852231.node = NNI1852231;
NTI1852231.base = NTI1194408;
NTI1852229.base = NTI1852231;
NTI1852767.base = NTI1852243;
var NNI1852285 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI1188015, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI1188015, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI1188015, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1852767, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI1188015, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI1188015, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI1188044, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI1188015, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI1188064, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1188015, name: "target", sons: null}]};
NTI1852285.node = NNI1852285;
NTI1852285.base = NTI1852245;
NTI1852283.base = NTI1852285;
var NNI1852281 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI1188064, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI1188064, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI1188044, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI1188015, name: "value", sons: null}]};
NTI1852281.node = NNI1852281;
NTI1852281.base = NTI1852245;
NTI1852279.base = NTI1852281;
NTI1852673.base = NTI1852279;
NTI1852675.base = NTI1852279;
var NNI1852245 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI1188015, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1852229, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI1188064, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI1188064, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI1188015, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI1188064, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1852283, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI1188064, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1852673, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1852675, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI1188044, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI1188044, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI1188015, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI1188064, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI1188015, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI1188044, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI1188044, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI1188044, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI1188044, name: "offsetTop", sons: null}]};
NTI1852245.node = NNI1852245;
NTI1852245.base = NTI1852237;
NTI1852243.base = NTI1852245;
var NNI1852277 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1188044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1188044, name: "y", sons: null}]};
NTI1852277.node = NNI1852277;
NTI1852277.base = NTI1852245;
NTI1852275.base = NTI1852277;
NTI1852651.base = NTI1852275;
NTI1852653.base = NTI1852283;
var NNI1852289 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI1188044, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI1188064, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1188044, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI1188044, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI1188015, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI1188015, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI1188044, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188044, name: "width", sons: null}]};
NTI1852289.node = NNI1852289;
NTI1852289.base = NTI1852245;
NTI1852287.base = NTI1852289;
NTI1852655.base = NTI1852287;
NTI1852657.base = NTI1852243;
var NNI1852273 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI1188044, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI1188044, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI1188015, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188044, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI1188015, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI1188044, name: "vspace", sons: null}]};
NTI1852273.node = NNI1852273;
NTI1852273.base = NTI1852245;
NTI1852271.base = NTI1852273;
NTI1852659.base = NTI1852271;
var NNI1852269 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI1188015, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1188044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1188044, name: "y", sons: null}]};
NTI1852269.node = NNI1852269;
NTI1852269.base = NTI1852245;
NTI1852267.base = NTI1852269;
NTI1852661.base = NTI1852267;
var NNI1853618 = {kind: 1, offset: "then", len: 0, typ: NTI1853619, name: "then", sons: null};
NTI1853618.node = NNI1853618;
NTI1852385.base = NTI1853618;
var NNI1853626 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1852385, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1853628, name: "onloadingdone", sons: null}]};
NTI1853626.node = NNI1853626;
NTI1852387.base = NTI1853626;
var NNI1852241 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1852243, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1852243, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI1188015, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI1188015, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1852243, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI1188015, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI1188015, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI1188015, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI1188015, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1852243, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI1188015, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI1188015, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI1188015, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI1188015, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI1188015, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI1188015, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1852651, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1852653, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1852655, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1852657, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1852659, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1852661, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1852387, name: "fonts", sons: null}]};
NTI1852241.node = NNI1852241;
NTI1852241.base = NTI1852237;
NTI1852239.base = NTI1852241;
NTI1852291.base = NTI1852293;
var NNI1852237 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1852610, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1852612, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1852614, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1188015, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1852235, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1852235, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1852235, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI1188015, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1852233, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI1188015, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1852235, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1852235, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1852235, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1852239, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI1188015, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI1188015, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI1188015, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI1188015, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1852291, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI1188015, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1852243, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI1188064, name: "isConnected", sons: null}]};
NTI1852237.node = NNI1852237;
var NNI1852205 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1852388, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1852392, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1852396, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1852400, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1852404, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1852408, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1852412, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1852416, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1852420, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1852424, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1852428, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1852432, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1852436, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1852440, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1852444, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1852448, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1852452, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1852456, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1852460, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1852464, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1852468, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1852472, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1852476, name: "onloadend", sons: null}]};
NTI1852205.node = NNI1852205;
NTI1852205.base = NTI1194408;
NTI1852237.base = NTI1852205;
NTI1852235.base = NTI1852237;
var NNI10461015 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI10461015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10461015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10461015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10461015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10461015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10461015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10461015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI10461015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI10461015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI10461015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI10461015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI10461015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI10461015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI10461015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI10461015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI10461015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI10461015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI10461015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI10461015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI10461015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI10461015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI10461015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI10461015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI10461015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI10461015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI10461015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI10461015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI10461015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI10461015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI10461015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI10461015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI10461015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI10461015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI10461015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI10461015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI10461015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI10461015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI10461015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI10461015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI10461015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI10461015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI10461015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI10461015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI10461015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI10461015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI10461015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI10461015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI10461015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI10461015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI10461015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI10461015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI10461015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI10461015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI10461015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI10461015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI10461015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI10461015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI10461015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI10461015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI10461015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI10461015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI10461015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI10461015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI10461015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI10461015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI10461015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI10461015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI10461015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI10461015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI10461015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI10461015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI10461015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI10461015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI10461015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI10461015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI10461015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI10461015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI10461015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI10461015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI10461015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI10461015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI10461015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI10461015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI10461015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI10461015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI10461015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI10461015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI10461015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI10461015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI10461015, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI10461015, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI10461015, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI10461015, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI10461015, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI10461015, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI10461015, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI10461015, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI10461015, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI10461015, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI10461015, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI10461015, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI10461015, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI10461015, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI10461015, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI10461015, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI10461015, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI10461015, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI10461015, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI10461015, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI10461015, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI10461015, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI10461015, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI10461015, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI10461015, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI10461015, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI10461015, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI10461015, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI10461015, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI10461015, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI10461015, name: "menu", len: 0, sons: null}}};
NTI10461015.node = NNI10461015;
NTI10465037.base = NTI10465022;
NTI10465039.base = NTI1188015;
var NNI10461139 = {kind: 2, offset: 0, typ: null, name: null, len: 32, sons: {"0": {kind: 1, offset: 0, typ: NTI10461139, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10461139, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10461139, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10461139, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10461139, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10461139, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10461139, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI10461139, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI10461139, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI10461139, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI10461139, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI10461139, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI10461139, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI10461139, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI10461139, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI10461139, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI10461139, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI10461139, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI10461139, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI10461139, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI10461139, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI10461139, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI10461139, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI10461139, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI10461139, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI10461139, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI10461139, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI10461139, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI10461139, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI10461139, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI10461139, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI10461139, name: "onload", len: 0, sons: null}}};
NTI10461139.node = NNI10461139;
var NNI10465030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10461139, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10465074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI10465076, name: "Field2", sons: null}]};
NTI10465030.node = NNI10465030;
NTI10465018.base = NTI10465030;
var NNI2132083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2132083.node = NNI2132083;
NTI2132084.base = NTI2132083;
var NNI10465031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI10461015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI1188044, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI1188015, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1188015, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI10465037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI10465039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI10465018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2132084, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI1852235, name: "dom", sons: null}]};
NTI10465031.node = NNI10465031;
NTI10465031.base = NTI1194408;
NTI10465022.base = NTI10465031;
var NNI10897209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI10897207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI1852235, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI1852235, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI10465022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI10465022, name: "oldNode", sons: null}]};
NTI10897209.node = NNI10897209;
var NNI10897211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI10465022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI10465022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI1188044, name: "pos", sons: null}]};
NTI10897211.node = NNI10897211;
NTI11740005.base = NTI1188015;
NTI11765006.base = NTI1188015;
var NNI11726416 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seed", len: 0, typ: NTI1188015, name: "seed", sons: null}, 
{kind: 1, offset: "gen", len: 0, typ: NTI1188015, name: "gen", sons: null}, 
{kind: 1, offset: "tag", len: 0, typ: NTI1188015, name: "tag", sons: null}, 
{kind: 1, offset: "orig", len: 0, typ: NTI1188015, name: "orig", sons: null}, 
{kind: 1, offset: "sv", len: 0, typ: NTI1188015, name: "sv", sons: null}]};
NTI11726416.node = NNI11726416;
NTI11726415.base = NTI11726416;
NTI11790072.base = NTI11726415;
NTI11790087.base = NTI1188015;
NTI11726449.base = NTI1188015;
var NNI11726445 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188044, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188015, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188064, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI11726449, name: "Field3", sons: null}]};
NTI11726445.node = NNI11726445;
NTI11790102.base = NTI11726445;
NTI10500125.base = NTI1188015;
var NNI1194653 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194653.node = NNI1194653;
NTI1194653.base = NTI1194619;
var NNI2380020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1188044, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188044, name: "b", sons: null}]};
NTI2380020.node = NNI2380020;
var NNI5935011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI5680232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188044, name: "b", sons: null}]};
NTI5935011.node = NNI5935011;
NTI9725015.base = NTI1188013;
NTI11990018.base = NTI1188015;
NTI11990033.base = NTI11726445;
NTI11860015.base = NTI11726445;
NTI11895001.base = NTI1188015;
NTI11895042.base = NTI1188015;
NTI11895057.base = NTI1188015;
NTI11950017.base = NTI11726445;
NTI11960215.base = NTI1188015;
NTI11960255.base = NTI1188015;
var NNI1194635 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194635.node = NNI1194635;
NTI1194635.base = NTI1194633;
NTI11965015.base = NTI11726445;
NTI11965030.base = NTI1188015;
NTI11945026.base = NTI1188015;
function arrayConstr(len_1480067, value_1480068, typ_1480069) {
        var result = new Array(len_1480067);
    for (var i = 0; i < len_1480067; ++i) result[i] = nimCopy(null, value_1480068, typ_1480069);
    return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1470023, src_1470024, ti_1470025) {
  var result_1475219 = null;

    switch (ti_1470025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_1465401(ti_1470025))) {
      result_1475219 = src_1470024;
      }
      else {
        result_1475219 = [src_1470024[0], src_1470024[1]];
      }
      
      break;
    case 19:
            if (dest_1470023 === null || dest_1470023 === undefined) {
        dest_1470023 = {};
      }
      else {
        for (var key in dest_1470023) { delete dest_1470023[key]; }
      }
      for (var key in src_1470024) { dest_1470023[key] = src_1470024[key]; }
      result_1475219 = dest_1470023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1470025.base == null))) {
      result_1475219 = nimCopy(dest_1470023, src_1470024, ti_1470025.base);
      }
      else {
      if ((ti_1470025.kind == 17)) {
      result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {m_type: ti_1470025} : dest_1470023;
      }
      else {
        result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {} : dest_1470023;
      }
      }
      nimCopyAux(result_1475219, src_1470024, ti_1470025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1470024 === null) {
        result_1475219 = null;
      }
      else {
        if (dest_1470023 === null || dest_1470023 === undefined) {
          dest_1470023 = new Array(src_1470024.length);
        }
        else {
          dest_1470023.length = src_1470024.length;
        }
        result_1475219 = dest_1470023;
        for (var i = 0; i < src_1470024.length; ++i) {
          result_1475219[i] = nimCopy(result_1475219[i], src_1470024[i], ti_1470025.base);
        }
      }
    
      break;
    case 28:
            if (src_1470024 !== null) {
        result_1475219 = src_1470024.slice(0);
      }
    
      break;
    default: 
      result_1475219 = src_1470024;
      break;
    }

  return result_1475219;

}
function makeNimstrLit(c_1455062) {
      var ln = c_1455062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1455062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_1455079) {
      var ln = c_1455079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1455079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1455079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function toJSStr(s_1455096) {
                    var Tmp5;
            var Tmp7;

  var result_1455097 = null;

    var res_1455170 = newSeq_1455128((s_1455096).length);
    var i_1455172 = 0;
    var j_1455174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1455172 < (s_1455096).length)) break L2;
          var c_1455175 = s_1455096[i_1455172];
          if ((c_1455175 < 128)) {
          res_1455170[j_1455174] = String.fromCharCode(c_1455175);
          i_1455172 += 1;
          }
          else {
            var helper_1455198 = newSeq_1455128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1455199 = c_1455175.toString(16);
                  if (((code_1455199).length == 1)) {
                  helper_1455198.push("%0");;
                  }
                  else {
                  helper_1455198.push("%");;
                  }
                  
                  helper_1455198.push(code_1455199);;
                  i_1455172 += 1;
                    if (((s_1455096).length <= i_1455172)) Tmp5 = true; else {                      Tmp5 = (s_1455096[i_1455172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1455175 = s_1455096[i_1455172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1455170[j_1455174] = decodeURIComponent(helper_1455198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1455170[j_1455174] = helper_1455198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1455174 += 1;
        }
    } while(false);
    if (res_1455170.length < j_1455174) { for (var i=res_1455170.length;i<j_1455174;++i) res_1455170.push(null); }
               else { res_1455170.length = j_1455174; };
    result_1455097 = res_1455170.join("");

  return result_1455097;

}
function raiseException(e_1420218, ename_1420219) {
    e_1420218.name = ename_1420219;
    if ((excHandler == 0)) {
    unhandledException(e_1420218);
    }
    
    throw e_1420218;

  
}
function chckIndx(i_1480086, a_1480087, b_1480088) {
      var Tmp1;

  var result_1480089 = 0;

  BeforeRet: do {
      if (!(a_1480087 <= i_1480086)) Tmp1 = false; else {        Tmp1 = (i_1480086 <= b_1480088);      }    if (Tmp1) {
    result_1480089 = i_1480086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1480086, a_1480087, b_1480088);
    }
    
  } while (false);

  return result_1480089;

}
function addInt(a_1460419, b_1460420) {
        var result = a_1460419 + b_1460420;
    checkOverflowInt(result);
    return result;
  

  
}
function subInt(a_1460437, b_1460438) {
        var result = a_1460437 - b_1460438;
    checkOverflowInt(result);
    return result;
  

  
}
function mulInt(a_1460455, b_1460456) {
        var result = a_1460455 * b_1460456;
    checkOverflowInt(result);
    return result;
  

  
}
      var toTag_10465006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var toEventName_10465012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load"];
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function nimMin(a_1460803, b_1460804) {
    var Tmp1;

  var result_1460805 = 0;

  BeforeRet: do {
    if ((a_1460803 <= b_1460804)) {
    Tmp1 = a_1460803;
    }
    else {
    Tmp1 = b_1460804;
    }
    
    result_1460805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460805;

}
function mnewString(len_1460044) {
        return new Array(len_1460044);
  

  
}
function chckRange(i_1485016, a_1485017, b_1485018) {
      var Tmp1;

  var result_1485019 = 0;

  BeforeRet: do {
      if (!(a_1485017 <= i_1485016)) Tmp1 = false; else {        Tmp1 = (i_1485016 <= b_1485018);      }    if (Tmp1) {
    result_1485019 = i_1485016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1485019;

}
function nimMax(a_1460821, b_1460822) {
    var Tmp1;

  var result_1460823 = 0;

  BeforeRet: do {
    if ((b_1460822 <= a_1460821)) {
    Tmp1 = a_1460821;
    }
    else {
    Tmp1 = b_1460822;
    }
    
    result_1460823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460823;

}
function modInt(a_1460491, b_1460492) {
        if (b_1460492 == 0) raiseDivByZero();
    if (b_1460492 == -1 && a_1460491 == 2147483647) raiseOverflow();
    return Math.trunc(a_1460491 % b_1460492);
  

  
}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var gid_10500032 = [0];
var objectID_10635031 = [0];
var vcomponents_10806026 = [{}];
var kxi_10897284 = [null];
var currentLanguage_11537015 = [55];
function isFatPointer_1465401(ti_1465403) {
  var result_1465404 = false;

  BeforeRet: do {
    result_1465404 = !((ConstSet1[ti_1465403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1465404;

}
function nimCopyAux(dest_1470028, src_1470029, n_1470031) {
    switch (n_1470031.kind) {
    case 0:
      break;
    case 1:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1470031.sons.length; i++) {
      nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i]);
    }
    
      break;
    case 3:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
      for (var i = 0; i < n_1470031.sons.length; ++i) {
        nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i][1]);
      }
    
      break;
    }

  
}
var translations_11537281 = [arrayConstr(202, null, NTI2132023)];
function add_1357211(x_1357214, x_1357214_Idx, y_1357215) {
          if (x_1357214[x_1357214_Idx] === null) { x_1357214[x_1357214_Idx] = []; }
      var off = x_1357214[x_1357214_Idx].length;
      x_1357214[x_1357214_Idx].length += y_1357215.length;
      for (var i = 0; i < y_1357215.length; ++i) {
        x_1357214[x_1357214_Idx][off+i] = y_1357215.charCodeAt(i);
      }
    

  
}
function newSeq_1455128(len_1455131) {
  var result_1455133 = [];

    result_1455133 = new Array(len_1455131); for (var i=0;i<len_1455131;++i) {result_1455133[i]=null;}
  return result_1455133;

}
function unhandledException(e_1415059) {
    var buf_1415060 = [[]];
    if (!(((e_1415059.message).length == 0))) {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_1415060[0].push.apply(buf_1415060[0], e_1415059.message);;
    }
    else {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit(" ["));;
    add_1357211(buf_1415060, 0, e_1415059.name);
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("]\x0A"));;
    var cbuf_1420201 = toJSStr(buf_1415060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1420201);
  }
  else {
    throw cbuf_1420201;
  }
  

  
}
function raiseIndexError(i_1440047, a_1440048, b_1440049) {
    var Tmp1;

    if ((b_1440049 < a_1440048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1440047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1440048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1440049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1188013), parent: null, m_type: NTI1194649, name: null, trace: [], up: null}, "IndexDefect");

  
}
function addTranslation_11537327(lang_11537329, key_11537330, val_11537331) {
    if ((translations_11537281[0][chckIndx(lang_11537329, 0, (translations_11537281[0]).length-1)] == null)) {
    translations_11537281[0][chckIndx(lang_11537329, 0, (translations_11537281[0]).length-1)] = {};
    }
    
    translations_11537281[0][chckIndx(lang_11537329, 0, (translations_11537281[0]).length-1)][key_11537330] = val_11537331;

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1194637, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_1460403) {
        if (a_1460403 > 2147483647 || a_1460403 < -2147483648) raiseOverflow();
  

  
}
function add_11565033(x_11565039, y_11565040) {
    L1: do {
      var i_11565048 = 0;
      var colontmp__11600196 = 0;
      colontmp__11600196 = (y_11565040).length;
      var i_11600197 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11600197 < colontmp__11600196)) break L3;
            i_11565048 = i_11600197;
            x_11565039.push(String.fromCharCode(y_11565040.charCodeAt(i_11565048)));
            i_11600197 = addInt(i_11600197, 1);
          }
      } while(false);
    } while(false);

  
}
function raiseInvalidFormat_11540061(errmsg_11540063) {
    raiseException({message: nimCopy(null, errmsg_11540063, NTI1188013), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");

  
}
function parseChoice_11545042(f_11545044, i_11545045, choice_11545046, r_11545051) {
                var Tmp5;
                var Tmp6;
                var Tmp9;
                var Tmp10;

    var i_11545052 = i_11545045;
    L1: do {
        L2: while (true) {
        if (!(i_11545052 < (f_11545044).length)) break L2;
          var n_11545054 = 0;
          var oldI_11545055 = i_11545052;
          var toAdd_11545056 = false;
          L3: do {
              L4: while (true) {
                if (!(i_11545052 < (f_11545044).length)) Tmp6 = false; else {                  Tmp6 = (48 <= f_11545044.charCodeAt(i_11545052));                }                if (!Tmp6) Tmp5 = false; else {                  Tmp5 = (f_11545044.charCodeAt(i_11545052) <= 57);                }              if (!Tmp5) break L4;
                n_11545054 = subInt(addInt(mulInt(n_11545054, 10), f_11545044.charCodeAt(i_11545052)), 48);
                i_11545052 = addInt(i_11545052, 1);
              }
          } while(false);
          if (!((oldI_11545055 == i_11545052))) {
          if ((f_11545044.charCodeAt(i_11545052) == 58)) {
          i_11545052 = addInt(i_11545052, 1);
          }
          else {
          raiseInvalidFormat_11540061(makeNimstrLit("\':\' after number expected"));
          }
          
          toAdd_11545056 = (choice_11545046 == n_11545054);
          }
          else {
            toAdd_11545056 = true;
          }
          
          L7: do {
              L8: while (true) {
                if (!(i_11545052 < (f_11545044).length)) Tmp10 = false; else {                  Tmp10 = !((f_11545044.charCodeAt(i_11545052) == 93));                }                if (!Tmp10) Tmp9 = false; else {                  Tmp9 = !((f_11545044.charCodeAt(i_11545052) == 124));                }              if (!Tmp9) break L8;
                if (toAdd_11545056) {
                r_11545051.push(String.fromCharCode(f_11545044.charCodeAt(i_11545052)));
                }
                
                i_11545052 = addInt(i_11545052, 1);
              }
          } while(false);
          if (toAdd_11545056) {
          break L1;
          }
          
          i_11545052 = addInt(i_11545052, 1);
        }
    } while(false);

  
}
function HEX25_11565062(formatString_11565064, args_11565066) {
                  var Tmp5;
            var Tmp6;
                  var Tmp9;
                    var Tmp12;
              var Tmp13;

  var result_11565067 = null;

    var f_11565068 = formatString_11565064;
    var i_11565070 = 0;
    var num_11565072 = 0;
    var r_11565079 = new Array(0);
    L1: do {
        L2: while (true) {
        if (!(i_11565070 < (f_11565068).length)) break L2;
          if (((f_11565068.charCodeAt(i_11565070) == 36) && (addInt(i_11565070, 1) < (f_11565068).length))) {
          i_11565070 = addInt(i_11565070, 1);
          switch (f_11565068.charCodeAt(i_11565070)) {
          case 35:
            add_11565033(r_11565079, args_11565066[chckIndx(num_11565072, 0, (args_11565066).length-1)]);
            i_11565070 = addInt(i_11565070, 1);
            num_11565072 = addInt(num_11565072, 1);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_11565102 = 0;
            var negative_11565103 = (f_11565068.charCodeAt(i_11565070) == 45);
            if (negative_11565103) {
            i_11565070 = addInt(i_11565070, 1);
            }
            
            L3: do {
                L4: while (true) {
                  if (!(48 <= f_11565068.charCodeAt(i_11565070))) Tmp5 = false; else {                    Tmp5 = (f_11565068.charCodeAt(i_11565070) <= 57);                  }                if (!Tmp5) break L4;
                  j_11565102 = subInt(addInt(mulInt(j_11565102, 10), f_11565068.charCodeAt(i_11565070)), 48);
                  i_11565070 = addInt(i_11565070, 1);
                }
            } while(false);
            if (!(negative_11565103)) {
            Tmp6 = subInt(j_11565102, 1);
            }
            else {
            Tmp6 = subInt((args_11565066).length, j_11565102);
            }
            
            var idx_11570019 = Tmp6;
            add_11565033(r_11565079, args_11565066[chckIndx(idx_11570019, 0, (args_11565066).length-1)]);
            break;
          case 36:
            i_11565070 = addInt(i_11565070, 1);
            r_11565079.push(36);
            break;
          case 91:
            var start_11570038 = addInt(i_11565070, 1);
            L7: do {
                L8: while (true) {
                  if (!(i_11565070 < (f_11565068).length)) Tmp9 = false; else {                    Tmp9 = !((f_11565068.charCodeAt(i_11565070) == 93));                  }                if (!Tmp9) break L8;
                  i_11565070 = addInt(i_11565070, 1);
                }
            } while(false);
            i_11565070 = addInt(i_11565070, 1);
            if (((f_11565068).length <= i_11565070)) {
            raiseInvalidFormat_11540061(makeNimstrLit("\']\' expected"));
            }
            
            switch (f_11565068.charCodeAt(i_11565070)) {
            case 35:
              parseChoice_11545042(f_11565068, start_11570038, parseInt(args_11565066[chckIndx(num_11565072, 0, (args_11565066).length-1)], 10), r_11565079);
              i_11565070 = addInt(i_11565070, 1);
              num_11565072 = addInt(num_11565072, 1);
              break;
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 45:
              var j_11580014 = 0;
              var negative_11580015 = (f_11565068.charCodeAt(i_11565070) == 45);
              if (negative_11580015) {
              i_11565070 = addInt(i_11565070, 1);
              }
              
              L10: do {
                  L11: while (true) {
                    if (!(48 <= f_11565068.charCodeAt(i_11565070))) Tmp12 = false; else {                      Tmp12 = (f_11565068.charCodeAt(i_11565070) <= 57);                    }                  if (!Tmp12) break L11;
                    j_11580014 = subInt(addInt(mulInt(j_11580014, 10), f_11565068.charCodeAt(i_11565070)), 48);
                    i_11565070 = addInt(i_11565070, 1);
                  }
              } while(false);
              if (!(negative_11580015)) {
              Tmp13 = subInt(j_11580014, 1);
              }
              else {
              Tmp13 = subInt((args_11565066).length, j_11580014);
              }
              
              var idx_11585019 = Tmp13;
              parseChoice_11545042(f_11565068, start_11570038, parseInt(args_11565066[chckIndx(idx_11585019, 0, (args_11565066).length-1)], 10), r_11565079);
              break;
            default: 
              raiseInvalidFormat_11540061(makeNimstrLit("argument index expected after \']\'"));
              break;
            }
            break;
          default: 
            raiseInvalidFormat_11540061(makeNimstrLit("\'#\', \'$\', or number expected"));
            break;
          }
          if (((i_11565070 < (f_11565068).length) && (f_11565068.charCodeAt(i_11565070) == 36))) {
          i_11565070 = addInt(i_11565070, 1);
          }
          
          }
          else {
            r_11565079.push(String.fromCharCode(f_11565068.charCodeAt(i_11565070)));
            i_11565070 = addInt(i_11565070, 1);
          }
          
        }
    } while(false);
    result_11565067 = r_11565079.join("");

  return result_11565067;

}
function translate_11537372(x_11537374) {
      var Tmp1;

  var result_11537375 = null;

    var y_11537376 = translations_11537281[0][chckIndx(currentLanguage_11537015[0], 0, (translations_11537281[0]).length-1)];
      if (!!((y_11537376 == null))) Tmp1 = false; else {        Tmp1 = y_11537376.hasOwnProperty(x_11537374);      }    if (Tmp1) {
    result_11537375 = y_11537376[x_11537374];
    }
    else {
      result_11537375 = x_11537374;
    }
    

  return result_11537375;

}
function jstrans_11586010(x_11586012, param_11586018) {
    var Tmp1;

  var result_11586019 = null;

    if ((0 < (param_11586018).length)) {
    Tmp1 = HEX25_11565062(translate_11537372(toJSStr(cstrToNimstr(x_11586012))), param_11586018);
    }
    else {
    Tmp1 = translate_11537372(toJSStr(cstrToNimstr(x_11586012)));
    }
    
    result_11586019 = Tmp1;

  return result_11586019;

}
function setCurrentLanguage_11537236(newLanguage_11537238) {
    currentLanguage_11537015[0] = newLanguage_11537238;

  
}
function setlang_11600014(lang_11600016) {
    if (lang_11600016.startsWith("ja")) {
    setCurrentLanguage_11537236(111);
    }
    else {
    if (lang_11600016.startsWith("en")) {
    setCurrentLanguage_11537236(55);
    }
    else {
    setCurrentLanguage_11537236(55);
    }
    }
        if(pastel && pastel.utxoballs) {
      pastel.utxoballs.update();
    }
  

  
}
function getCurrentLanguage_11537252() {
  var result_11537254 = 0;

    result_11537254 = currentLanguage_11537015[0];

  return result_11537254;

}
function getlang_11600033() {
    var Tmp1;

  var result_11600035 = null;

    var lang_11600036 = getCurrentLanguage_11537252();
    if ((lang_11600036 == 111)) {
    Tmp1 = makeNimstrLit("ja");
    }
    else {
    Tmp1 = makeNimstrLit("en");
    }
    
    result_11600035 = toJSStr(Tmp1);

  return result_11600035;

}
addTranslation_11537327(111, "Scan your seed cards or input your mnemonic to start.", "はじめるにはSeedカードを読み取るか、またはニーモニックを入力してしてください。");
addTranslation_11537327(111, "Seed card", "Seedカード");
addTranslation_11537327(111, "Mnemonic", "ニーモニック");
addTranslation_11537327(111, "Scan seed card with camera", "カメラでSeedカードを読み取る");
addTranslation_11537327(111, "Select mnemonic language", "ニーモニックの言語選択");
addTranslation_11537327(111, "Japanese", "日本語");
addTranslation_11537327(111, "English", "英語");
addTranslation_11537327(111, "Import your mnemonic you already have", "所有しているニーモニックのインポート");
addTranslation_11537327(111, "Check", "確認");
addTranslation_11537327(111, "Advanced Check", "高度な確認");
addTranslation_11537327(111, "Preparing Camera", "カメラの準備中");
addTranslation_11537327(111, "Seed", "Seed");
addTranslation_11537327(111, "unknown", "不明");
addTranslation_11537327(111, "Seed Vector:", "Seedベクター:");
addTranslation_11537327(111, "Type your seed vector", "Seedベクターを入力");
addTranslation_11537327(111, "Next", "次へ");
addTranslation_11537327(111, "Back", "戻る");
addTranslation_11537327(111, "A key card or passphrase is required to encrypt and save the private key in your browser.\n You will need it before sending your coins.\n", "秘密鍵を暗号化しブラウザ内に保存するためにキーカードまたはパスフレーズを設定してください。\n キーカードまたはパスフレーズはコインを送信するときに必要になります。\n");
addTranslation_11537327(111, "Key card", "キーカード");
addTranslation_11537327(111, "Passphrase", "パスフレーズ");
addTranslation_11537327(111, "Scan key card with camera", "カメラでキーカードを読み取る");
addTranslation_11537327(111, "Input passphrase", "パスフレーズの入力");
addTranslation_11537327(111, "Apply", "設定");
addTranslation_11537327(111, "Scanned key card", "読み取ったキーカード");
addTranslation_11537327(111, "Rescan", "再読み取り");
addTranslation_11537327(111, "Send", "送信");
addTranslation_11537327(111, "Receive", "受信");
addTranslation_11537327(111, "Settings", "設定");
addTranslation_11537327(111, "Logs", "履歴");
addTranslation_11537327(111, "Send Coins", "コイン送信");
addTranslation_11537327(111, "Locked", "ロック中");
addTranslation_11537327(111, "Unlocked", "ロック解除済み");
addTranslation_11537327(111, "Please unlock your wallet before sending coins.", "コインを送信する前にウォレットのロックを解除してください。");
addTranslation_11537327(111, "Scan your key card", "キーカード読み取り");
addTranslation_11537327(111, "Input your passphrase", "パスフレーズ入力");
addTranslation_11537327(111, "Clear", "削除");
addTranslation_11537327(111, "Scan QR Code", "QRコード読み取り");
addTranslation_11537327(111, "-1 Ball", "-1 ボール");
addTranslation_11537327(111, "+1 Ball", "+1 ボール");
addTranslation_11537327(111, "Send Address", "送信アドレス");
addTranslation_11537327(111, "Address", "アドレス");
addTranslation_11537327(111, "Send", "送信");
addTranslation_11537327(111, "Receive Address", "受信アドレス");
addTranslation_11537327(111, "Copy", "コピー");
addTranslation_11537327(111, "Copied to clipboard", "クリップボードにコピーしました。");
addTranslation_11537327(111, "Create QR Code", "QRコード作成");
addTranslation_11537327(111, "Amount", "数量");
addTranslation_11537327(111, "Label", "ラベル");
addTranslation_11537327(111, "Message", "メッセージ");
addTranslation_11537327(111, "Cancel", "キャンセル");
addTranslation_11537327(111, "Change-", "おつり-");
addTranslation_11537327(111, "Too Much Balls", "多すぎるボール");
addTranslation_11537327(111, "$#$ years ago", "$#$ 年前");
addTranslation_11537327(111, "$#$ year ago", "$#$ 年前");
addTranslation_11537327(111, "$#$ years $#$ months ago", "$#$ 年 $#$ヶ月前");
addTranslation_11537327(111, "$#$ year $#$ months ago", "$#$ 年 $#$ヶ月前");
addTranslation_11537327(111, "$#$ years $#$ month ago", "$#$ 年 $#$ヶ月前");
addTranslation_11537327(111, "$#$ year $#$ month ago", "$#$ 年 $#$ヶ月前");
addTranslation_11537327(111, "$#$ months ago", "$#$ ヶ月前");
addTranslation_11537327(111, "$#$ month ago", "$#$ ヶ月前");
addTranslation_11537327(111, "$#$ weeks ago", "$#$ 週間前");
addTranslation_11537327(111, "$#$ week ago", "$#$ 週間前");
addTranslation_11537327(111, "$#$ days ago", "$#$ 日前");
addTranslation_11537327(111, "$#$ day ago", "$#$ 日前");
addTranslation_11537327(111, "$#$ hours ago", "$#$ 時間前");
addTranslation_11537327(111, "$#$ hour ago", "$#$ 時間前");
addTranslation_11537327(111, "$#$ minutes ago", "$#$ 分前");
addTranslation_11537327(111, "$#$ minute ago", "$#$ 分前");
addTranslation_11537327(111, "just now", "新着");
addTranslation_11537327(111, "SEND", "送信");
addTranslation_11537327(111, "RECEIVE", "受信");
addTranslation_11537327(111, "Confirmed", "確認済");
addTranslation_11537327(111, "Unconfirmed", "未確認");
addTranslation_11537327(111, "Reset Wallet", "ウォレットのリセット");
addTranslation_11537327(111, "Are you sure to reset your wallet?", "本当にウォレットをリセットしますか？");
addTranslation_11537327(111, "Reset", "リセット");
addTranslation_11537327(111, "Delete all your wallet data in your web browser, including your encrypted secret keys.\n If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\n or mnemonics before deleting it. Otherwise you may lost your coins forever.\n", "ブラウザ内の暗号化した秘密鍵を含むすべてのウォレットデータを削除します。\n もしウォレットにコインが残っていたり、受信予定のコインがある場合は、削除前にSeedカードまたはニーモニックを持っていることを確認してください。\n そうしないとコインを永久に失うかもしれません。\n");
addTranslation_11537327(111, "I confirmed that I have the seed cards or mnemonics or no coins in my wallet.", "私はSeedカードやニーモニックを持っています。またはウォレットにコインがありません。");
addTranslation_11537327(111, "Confirmation", "確認");
addTranslation_11537327(111, "Please read and check here before resetting your wallet.", "ウォレットをリセットする前に内容を読んでチェックをしてください。");
addTranslation_11537327(111, "Error", "エラー");
addTranslation_11537327(111, "Warning", "警告");
addTranslation_11537327(111, "Unsupported seed card was scanned.", "サポートしていないシードカードを読み取りました。");
addTranslation_11537327(111, "The seed card has already been scanned.", "すでに読み取り済みのシードカードです。");
addTranslation_11537327(111, "Failed to lock your wallet with the key card.", "キーカードによるウォレットのロックに失敗しました。");
addTranslation_11537327(111, "There are no misspellings, but some words seem to be wrong.", "不正なワードはありませんが、いくつかのワードが間違えています。");
addTranslation_11537327(111, "Try to use [Advanced Check]", "[高度な確認] を試してみてください。");
addTranslation_11537327(111, "Failed to lock your wallet with the passphrase.", "パスフレーズによるウォレットのロックに失敗しました。");
addTranslation_11537327(111, "Failed to unlock. Wrong key card was scanned.", "ロック解除に失敗しました。 キーカードが間違えています。");
addTranslation_11537327(111, "Failed to unlock. Passphrase is incorrect.", "ロック解除に失敗しました。 パスフレーズが間違えています。");
addTranslation_11537327(111, "Failed to unlock. Camera error. Please connect the camera and reload the page.", "ロック解除に失敗しました。 カメラが利用できませんでした。 カメラを接続してページをリロードしてください。");
addTranslation_11537327(111, "Camera error. Please connect the camera and reload the page.", "カメラが利用できませんでした。 カメラを接続してページをリロードしてください。");
addTranslation_11537327(111, "Coins sent successfully.", "コインを送信しました。");
addTranslation_11537327(111, "Failed to send coins.", "コインの送信に失敗しました。");
addTranslation_11537327(111, "Address is invalid.", "アドレスが不正です。");
addTranslation_11537327(111, "Balance is insufficient.", "残高が不足しています。");
addTranslation_11537327(111, "Amount is zero.", "数量が 0 です。");
addTranslation_11537327(111, "Amount is too small.", "数量が小さすぎます。");
addTranslation_11537327(111, "Failed to send coins. Busy.", "コインの送信に失敗しました。 ビジー");
addTranslation_11537327(111, "Server is not responding. Coins may have been sent.", "サーバーが応答しません。 コインの送信に成功している可能性もあります。");
addTranslation_11537327(111, "Failed to send coins. Server error.", "コインの送信に失敗しました。 サーバーエラー");
addTranslation_11537327(111, "Failed to send coins. Server is not responding.", "サーバーが応答しません。");
addTranslation_11537327(111, "Amount is invalid. The decimal places is too long. Please set it 8 or less.", "数量が不正です。 小数点以下が長すぎます。 小数点以下の桁数は8以内にしてください。");
addTranslation_11537327(111, "Amount is invalid.", "数量が不正です。");
addTranslation_11537327(111, "Failed to lock keys.", "ロックに失敗しました。");
addTranslation_11537327(111, "Language", "言語選択");
var __t = jstrans_11586010;
var setlang = setlang_11600014;
var getlang = getlang_11600033;
var navlang = window.navigator.language || window.navigator.userLanguage || window.navigator.browserLanguage;
(function() {
  var stor  = new Stor();
  var lang = stor.get_lang();
  stor = null;
  lang = lang || navlang || 'en';
  lang = lang.substring(0, 2);
  setlang(lang);
  LangSelector.show(lang);
})();

var appInst_11726027 = [null];
var currentImportType_11726050 = [0];
var currentProtectType_11726056 = [0];
var showScanSeedBtn_11726074 = [true];
var showScanning_11726075 = [true];
var showCamTools_11726076 = [true];
var showScanResult_11726077 = [false];
var showScanSeedBtn2_11726078 = [true];
var showScanning2_11726079 = [true];
var showCamTools2_11726080 = [true];
var showScanResult2_11726081 = [false];
var showPage1_11726082 = [true];
var showPage2_11726083 = [false];
var showPage3_11726084 = [false];
var showPage4_11726085 = [false];
var mnemonicFulfill_11726086 = [false];
var keyCardFulfill_11726087 = [false];
var passphraseFulfill_11726088 = [false];
var supressRedraw_11726089 = [false];
var showRecvAddressSelector_11726090 = [true];
var showRecvAddressModal_11726091 = [true];
var showTradeLogs_11726092 = [false];
var showSettings_11726093 = [false];
var jsViewSelector = function() {}

function sysFatal_1305418(message_1305422) {
    raiseException({message: nimCopy(null, message_1305422, NTI1188013), m_type: NTI1194641, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_1305414(msg_1305416) {
    sysFatal_1305418(msg_1305416);

  
}
function failedAssertImpl_1305480(msg_1305482) {
    raiseAssert_1305414(msg_1305482);

  
}
function valueHEX3D_10465140(n_10465142, v_10465143) {
    n_10465142.text = v_10465143;

  
}
function value_10465123(n_10465125) {
  var result_10465126 = null;

    result_10465126 = n_10465125.text;

  return result_10465126;

}
function addEventShell_10897375(d_10897377, name_10897378, h_10897379) {
    d_10897377.addEventListener(name_10897378, h_10897379, false);
    if ((d_10897377.karaxEvents == null)) {
    d_10897377.karaxEvents = new Array(0);
    }
    
    d_10897377.karaxEvents.push({Field0: name_10897378, Field1: h_10897379});

  
}
function wrapEvent_10900097(d_10900099, n_10900100, k_10900101, action_10900102) {
      function laterWrapper_10970042() {
          function HEX3Aanonymous_10970048(ev_10970050) {
              function wrapper_10970051() {
                  var vHEX60gensym15_10980001 = ev_10970050.target.value;
                  valueHEX3D_10465140(n_10970046, vHEX60gensym15_10980001);
                  if (!(!((action_10970045 == null)))) {
                  failedAssertImpl_1305480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_10970045(ev_10970050, n_10970046);
                  if (!((value_10465123(n_10970046) == vHEX60gensym15_10980001))) {
                  ev_10970050.target.value = value_10465123(n_10970046);
                  }
                  

                
              }

              if (!((timer_10970047 == null))) {
              clearTimeout(timer_10970047);
              }
              
              timer_10970047 = setTimeout(wrapper_10970051, 400);

            
          }

        var result_10970044 = null;

          var action_10970045 = action_10900102;
          var n_10970046 = n_10900100;
          var timer_10970047 = null;
          result_10970044 = HEX3Aanonymous_10970048;

        return result_10970044;

      }
      function enterWrapper_10935042() {
          function HEX3Aanonymous_10935047(ev_10935049) {
              if ((ev_10935049.keyCode == 13)) {
              var vHEX60gensym8_10945001 = ev_10935049.target.value;
              valueHEX3D_10465140(n_10935046, vHEX60gensym8_10945001);
              if (!(!((action_10935045 == null)))) {
              failedAssertImpl_1305480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_10935045(ev_10935049, n_10935046);
              if (!((value_10465123(n_10935046) == vHEX60gensym8_10945001))) {
              ev_10935049.target.value = value_10465123(n_10935046);
              }
              
              }
              

            
          }

        var result_10935044 = null;

          var action_10935045 = action_10900102;
          var n_10935046 = n_10900100;
          result_10935044 = HEX3Aanonymous_10935047;

        return result_10935044;

      }
      function stdWrapper_10900104() {
          function HEX3Aanonymous_10900109(ev_10900111) {
                var Tmp1;
                var Tmp2;

                if ((n_10900108.kind == 111)) Tmp2 = true; else {                  Tmp2 = (n_10900108.kind == 105);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_10900108.kind == 107);                }              if (Tmp1) {
              var vHEX60gensym1_10910001 = ev_10900111.target.value;
              valueHEX3D_10465140(n_10900108, vHEX60gensym1_10910001);
              if (!(!((action_10900107 == null)))) {
              failedAssertImpl_1305480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_10900107(ev_10900111, n_10900108);
              if (!((value_10465123(n_10900108) == vHEX60gensym1_10910001))) {
              ev_10900111.target.value = value_10465123(n_10900108);
              }
              
              }
              else {
              action_10900107(ev_10900111, n_10900108);
              }
              

            
          }

        var result_10900106 = null;

          var action_10900107 = action_10900102;
          var n_10900108 = n_10900100;
          result_10900106 = HEX3Aanonymous_10900109;

        return result_10900106;

      }

  var result_10900103 = null;

    switch (k_10900101) {
    case 30:
      result_10900103 = laterWrapper_10970042();
      addEventShell_10897375(d_10900099, "keyup", result_10900103);
      break;
    case 29:
      result_10900103 = enterWrapper_10935042();
      addEventShell_10897375(d_10900099, "keyup", result_10900103);
      break;
    default: 
      result_10900103 = stdWrapper_10900104();
      addEventShell_10897375(d_10900099, toEventName_10465012[chckIndx(k_10900101, 0, (toEventName_10465012).length-1)], result_10900103);
      break;
    }

  return result_10900103;

}
function applyEvents_11010073(n_11010075) {
    var dest_11010076 = n_11010075.dom;
    L1: do {
      var i_11010089 = 0;
      var colontmp__11726196 = 0;
      colontmp__11726196 = (n_11010075.events).length;
      var i_11726197 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11726197 < colontmp__11726196)) break L3;
            i_11010089 = i_11726197;
            n_11010075.events[chckIndx(i_11010089, 0, (n_11010075.events).length-1)]["Field2"] = wrapEvent_10900097(dest_11010076, n_11010075, n_11010075.events[chckIndx(i_11010089, 0, (n_11010075.events).length-1)]["Field0"], n_11010075.events[chckIndx(i_11010089, 0, (n_11010075.events).length-1)]["Field1"]);
            i_11726197 = addInt(i_11726197, 1);
          }
      } while(false);
    } while(false);

  
}
function applyStyle_2170425(n_2170427, s_2170428) {
    n_2170427.style = {};
    L1: do {
      var i_2170621 = 0;
      var colontmp__11726207 = 0;
      colontmp__11726207 = subInt(s_2170428.length, 1);
      var res_11726208 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_11726208 <= colontmp__11726207)) break L3;
            i_2170621 = res_11726208;
            n_2170427.style[s_2170428[i_2170621]] = s_2170428[addInt(i_2170621, 1)];
            res_11726208 = addInt(res_11726208, 2);
          }
      } while(false);
    } while(false);

  
}
function toDom_11010154(n_11010156, useAttachedNode_11010157, kxi_11010158) {
      var Tmp9;
      var Tmp10;

  var result_11010159 = null;

  BeforeRet: do {
    if (useAttachedNode_11010157) {
    if (!((n_11010156.dom == null))) {
    if (!((n_11010156.id == null))) {
    kxi_11010158.byId[n_11010156.id] = n_11010156;
    }
    
    result_11010159 = n_11010156.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_11010156.kind == 0)) {
    result_11010159 = document.createTextNode(n_11010156.text);
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897284[0].byId[n_11010156.id] = n_11010156;
    }
    
    }
    else {
    if ((n_11010156.kind == 6)) {
    result_11010159 = document.createElement("div");
    result_11010159.innerHTML = n_11010156.text;
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897284[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_11010156.kind == 3)) {
    var x_11045001 = vcomponents_10806026[0][n_11010156.text](n_11010156.kids);
    result_11010159 = toDom_11010154(x_11045001, useAttachedNode_11010157, kxi_11010158);
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897284[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_11010156.kind == 4)) {
    result_11010159 = n_11010156.dom;
    if (!(!((result_11010159 == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(176, 12) `result != nil` "));
    }
    
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897284[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_11010156.kind == 5)) {
    var x_11080022 = n_11010156;
    if (!((x_11080022.onAttachImpl == null))) {
    x_11080022.onAttachImpl(x_11080022);
    }
    
    if (!(!((x_11080022.renderImpl == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_11080022.expanded == null)) {
    x_11080022.expanded = x_11080022.renderImpl(x_11080022);
    }
    
    if (!(!((x_11080022.expanded == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    result_11010159 = toDom_11010154(x_11080022.expanded, useAttachedNode_11010157, kxi_11010158);
    n_11010156.dom = result_11010159;
    if (!((n_11010156.id == null))) {
    kxi_10897284[0].byId[n_11010156.id] = n_11010156;
    }
    
    break BeforeRet;
    }
    else {
      result_11010159 = document.createElement(toTag_10465006[chckIndx(n_11010156.kind, 0, (toTag_10465006).length-1)]);
      n_11010156.dom = result_11010159;
      if (!((n_11010156.id == null))) {
      kxi_10897284[0].byId[n_11010156.id] = n_11010156;
      }
      
      L1: do {
        var k_11135016 = null;
        L2: do {
          var i_11726174 = 0;
          var colontmp__11726175 = 0;
          colontmp__11726175 = (n_11010156.kids).length;
          var i_11726176 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_11726176 < colontmp__11726175)) break L4;
                i_11726174 = i_11726176;
                k_11135016 = n_11010156.kids[chckIndx(i_11726174, 0, (n_11010156.kids).length-1)];
                result_11010159.appendChild(toDom_11010154(k_11135016, useAttachedNode_11010157, kxi_11010158));
                i_11726176 = addInt(i_11726176, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_11010156.text == null))) {
      result_11010159.value = n_11010156.text;
      }
      
    }
    }}}}
    if (!((n_11010156.id == null))) {
    result_11010159.id = n_11010156.id;
    }
    
    if (!((n_11010156.class == null))) {
    result_11010159.className = n_11010156.class;
    }
    
    L5: do {
      var k_11150001 = null;
      var v_11150002 = null;
      L6: do {
        var i_11726187 = 0;
        var colontmp__11726188 = 0;
        colontmp__11726188 = subInt((n_11010156.attrs).length, 2);
        var res_11726189 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_11726189 <= colontmp__11726188)) break L8;
              i_11726187 = res_11726189;
              k_11150001 = n_11010156.attrs[chckIndx(i_11726187, 0, (n_11010156.attrs).length-1)];
              v_11150002 = n_11010156.attrs[chckIndx(addInt(i_11726187, 1), 0, (n_11010156.attrs).length-1)];
              if (!((v_11150002 == null))) {
              result_11010159.setAttribute(k_11150001, v_11150002);
              }
              
              res_11726189 = addInt(res_11726189, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    applyEvents_11010073(n_11010156);
      if (!!((kxi_11010158 == null))) Tmp10 = false; else {        Tmp10 = (n_11010156 == kxi_11010158.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_11010158.toFocus == null);      }    if (Tmp9) {
    kxi_11010158.toFocus = result_11010159;
    }
    
    if (!((n_11010156.style == null))) {
    applyStyle_2170425(result_11010159, n_11010156.style);
    }
    
  } while (false);

  return result_11010159;

}
function replaceById_11175074(id_11175076, newTree_11175077) {
    var x_11175078 = document.getElementById(id_11175076);
    x_11175078.parentNode.replaceChild(newTree_11175077, x_11175078);
    newTree_11175077.id = id_11175076;

  
}
function len_10550014(x_10550016) {
  var result_10550017 = 0;

    result_10550017 = (x_10550016.kids).length;

  return result_10550017;

}
function HEX5BHEX5D_10550036(x_10550038, idx_10550039) {
  var result_10550040 = null;

    result_10550040 = x_10550038.kids[chckIndx(idx_10550039, 0, (x_10550038.kids).length-1)];

  return result_10550040;

}
function same_11160072(n_11160074, e_11160075, nesting_11160076) {
      var Tmp1;
      var Tmp2;

  var result_11160078 = false;

  BeforeRet: do {
    if (kxi_10897284[0].orphans.hasOwnProperty(n_11160074.id)) {
    result_11160078 = true;
    break BeforeRet;
    }
    
    if ((n_11160074.kind == 5)) {
    result_11160078 = same_11160072(n_11160074.expanded, e_11160075, addInt(nesting_11160076, 1));
    }
    else {
    if ((n_11160074.kind == 6)) {
    result_11160078 = true;
    }
    else {
      if ((n_11160074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_11160074.kind == 4);      }    if (Tmp1) {
    result_11160078 = true;
    }
    else {
    if ((toTag_10465006[chckIndx(n_11160074.kind, 0, (toTag_10465006).length-1)] == e_11160075.nodeName)) {
    result_11160078 = true;
    if (!((n_11160074.kind == 0))) {
      if (!!((e_11160075.childNodes.length == len_10550014(n_11160074)))) Tmp2 = false; else {        Tmp2 = !((n_11160074.kind == 111));      }    if (Tmp2) {
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_10550014(n_11160074))+""), makeNimstrLit(" real "), cstrToNimstr((e_11160075.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(toTag_10465006[chckIndx(n_11160074.kind, 0, (toTag_10465006).length-1)]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_11160076)+""));
    result_11160078 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_11175024 = 0;
      var colontmp__11726214 = 0;
      colontmp__11726214 = len_10550014(n_11160074);
      var i_11726215 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_11726215 < colontmp__11726214)) break L5;
            i_11175024 = i_11726215;
            if (!(same_11160072(HEX5BHEX5D_10550036(n_11160074, i_11175024), e_11160075.childNodes[i_11175024], addInt(nesting_11160076, 1)))) {
            result_11160078 = false;
            break BeforeRet;
            }
            
            i_11726215 = addInt(i_11726215, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(toTag_10465006[chckIndx(n_11160074.kind, 0, (toTag_10465006).length-1)]), makeNimstrLit(" DOM: "), cstrToNimstr(e_11160075.nodeName));
    }
    }}}
  } while (false);

  return result_11160078;

}
function eq_2135229(a_2135231, b_2135232) {
  var result_2135233 = false;

  BeforeRet: do {
    if ((a_2135231 == null)) {
    if ((b_2135232 == null)) {
    result_2135233 = true;
    break BeforeRet;
    }
    else {
      result_2135233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_2135232 == null)) {
    result_2135233 = false;
    break BeforeRet;
    }
    }
    if (!((a_2135231.length == b_2135232.length))) {
    result_2135233 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_2140083 = 0;
      var colontmp__11726254 = 0;
      colontmp__11726254 = a_2135231.length;
      var i_11726255 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11726255 < colontmp__11726254)) break L3;
            i_2140083 = i_11726255;
            if (!((a_2135231[i_2140083] == b_2135232[i_2140083]))) {
            result_2135233 = false;
            break BeforeRet;
            }
            
            i_11726255 = addInt(i_11726255, 1);
          }
      } while(false);
    } while(false);
    result_2135233 = true;
    break BeforeRet;
  } while (false);

  return result_2135233;

}
function sameAttrs_10561079(a_10561081, b_10561082) {
  var result_10561083 = false;

  BeforeRet: do {
    if (((a_10561081.attrs).length == (b_10561082.attrs).length)) {
    result_10561083 = true;
    L1: do {
      var i_10561106 = 0;
      var colontmp__11726258 = 0;
      colontmp__11726258 = (a_10561081.attrs).length;
      var i_11726259 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11726259 < colontmp__11726258)) break L3;
            i_10561106 = i_11726259;
            if (!((a_10561081.attrs[chckIndx(i_10561106, 0, (a_10561081.attrs).length-1)] == b_10561082.attrs[chckIndx(i_10561106, 0, (b_10561082.attrs).length-1)]))) {
            result_10561083 = false;
            break BeforeRet;
            }
            
            i_11726259 = addInt(i_11726259, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_10561083;

}
function eq_11175214(a_11175216, b_11175217, recursive_11175218) {
      var Tmp4;
      var Tmp5;

  var result_11175219 = 0;

  BeforeRet: do {
    if (!((a_11175216.kind == b_11175217.kind))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    if (!((a_11175216.id == b_11175217.id))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    result_11175219 = 3;
    if (!((a_11175216.index == b_11175217.index))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    if ((a_11175216.kind == 0)) {
    if (!((a_11175216.text == b_11175217.text))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_11175216.kind == 3)) {
    if (!((a_11175216.text == b_11175217.text))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    if (!((len_10550014(a_11175216) == len_10550014(b_11175217)))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_11205008 = 0;
      var colontmp__11726246 = 0;
      colontmp__11726246 = len_10550014(a_11175216);
      var i_11726247 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11726247 < colontmp__11726246)) break L3;
            i_11205008 = i_11726247;
            if ((eq_11175214(HEX5BHEX5D_10550036(a_11175216, i_11205008), HEX5BHEX5D_10550036(b_11175217, i_11205008), recursive_11175218) == 1)) {
            result_11175219 = 1;
            break BeforeRet;
            }
            
            i_11726247 = addInt(i_11726247, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_11175216.kind == 4)) {
    if ((a_11175216.dom == b_11175217.dom)) {
    result_11175219 = 3;
    break BeforeRet;
    }
    else {
      result_11175219 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_11175216.kind == 6)) {
    if (!((a_11175216.text == b_11175217.text))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_11175217.kind == 5)) {
    if (!((a_11175216.text == b_11175217.text))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    if (!((a_11175216.key == b_11175217.key))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    result_11175219 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_11175216.class == b_11175217.class))) Tmp5 = true; else {        Tmp5 = !(eq_2135229(a_11175216.style, b_11175217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(sameAttrs_10561079(a_11175216, b_11175217));      }    if (Tmp4) {
    result_11175219 = 2;
    break BeforeRet;
    }
    
    if (recursive_11175218) {
    if (!((len_10550014(a_11175216) == len_10550014(b_11175217)))) {
    result_11175219 = 1;
    break BeforeRet;
    }
    
    L6: do {
      var i_11230008 = 0;
      var colontmp__11726250 = 0;
      colontmp__11726250 = len_10550014(a_11175216);
      var i_11726251 = 0;
      L7: do {
          L8: while (true) {
          if (!(i_11726251 < colontmp__11726250)) break L8;
            i_11230008 = i_11726251;
            if (!((eq_11175214(HEX5BHEX5D_10550036(a_11175216, i_11230008), HEX5BHEX5D_10550036(b_11175217, i_11230008), true) == 3))) {
            result_11175219 = 1;
            break BeforeRet;
            }
            
            i_11726251 = addInt(i_11726251, 1);
          }
      } while(false);
    } while(false);
    }
    
    break BeforeRet;
  } while (false);

  return result_11175219;

}
function updateStyles_11235034(newNode_11235036, oldNode_11235037) {
    if (!((oldNode_11235037.dom == null))) {
    if (!((newNode_11235036.style == null))) {
    applyStyle_2170425(oldNode_11235037.dom, newNode_11235036.style);
    }
    else {
      oldNode_11235037.dom.style = {m_type: NTI1852293, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    oldNode_11235037.dom.className = newNode_11235036.class;
    }
    
    oldNode_11235037.style = newNode_11235036.style;
    oldNode_11235037.class = newNode_11235036.class;

  
}
function takeOverAttr_10500214(newNode_10500216, oldNode_10500217) {
    oldNode_10500217.attrs = newNode_10500216.attrs;

  
}
function updateAttributes_11245052(newNode_11245054, oldNode_11245055) {
    if (!((oldNode_11245055.dom == null))) {
    L1: do {
      var k_11250009 = null;
      var __11250010 = null;
      L2: do {
        var i_11726264 = 0;
        var colontmp__11726265 = 0;
        colontmp__11726265 = subInt((oldNode_11245055.attrs).length, 2);
        var res_11726266 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_11726266 <= colontmp__11726265)) break L4;
              i_11726264 = res_11726266;
              k_11250009 = oldNode_11245055.attrs[chckIndx(i_11726264, 0, (oldNode_11245055.attrs).length-1)];
              __11250010 = oldNode_11245055.attrs[chckIndx(addInt(i_11726264, 1), 0, (oldNode_11245055.attrs).length-1)];
              oldNode_11245055.dom.removeAttribute(k_11250009);
              res_11726266 = addInt(res_11726266, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_11250011 = null;
      var v_11250012 = null;
      L6: do {
        var i_11726272 = 0;
        var colontmp__11726273 = 0;
        colontmp__11726273 = subInt((newNode_11245054.attrs).length, 2);
        var res_11726274 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_11726274 <= colontmp__11726273)) break L8;
              i_11726272 = res_11726274;
              k_11250011 = newNode_11245054.attrs[chckIndx(i_11726272, 0, (newNode_11245054.attrs).length-1)];
              v_11250012 = newNode_11245054.attrs[chckIndx(addInt(i_11726272, 1), 0, (newNode_11245054.attrs).length-1)];
              if (!((v_11250012 == null))) {
              oldNode_11245055.dom.setAttribute(k_11250011, v_11250012);
              }
              
              res_11726274 = addInt(res_11726274, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    takeOverAttr_10500214(newNode_11245054, oldNode_11245055);

  
}
function removeAllEventHandlers_10897436(d_10897438) {
    if (!((d_10897438.karaxEvents == null))) {
    L1: do {
      var i_10900041 = 0;
      var colontmp__11726279 = 0;
      colontmp__11726279 = d_10897438.karaxEvents.length;
      var i_11726280 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11726280 < colontmp__11726279)) break L3;
            i_10900041 = i_11726280;
            d_10897438.removeEventListener(d_10897438.karaxEvents[i_10900041]["Field0"], d_10897438.karaxEvents[i_10900041]["Field1"]);
            i_11726280 = addInt(i_11726280, 1);
          }
      } while(false);
    } while(false);
    }
    

  
}
function mergeEvents_11255014(newNode_11255016, oldNode_11255017, kxi_11255018) {
    var d_11255019 = oldNode_11255017.dom;
    if (!((d_11255019 == null))) {
    removeAllEventHandlers_10897436(d_11255019);
    }
    
    oldNode_11255017.events = newNode_11255016.events;
    applyEvents_11010073(oldNode_11255017);

  
}
function addPatch_11260414(kxi_11260416, ka_11260417, parenta_11260418, currenta_11260419, na_11260420, oldNode_11260421) {
    var L_11260422 = kxi_11260416.patchLen;
    if (((kxi_11260416.patches).length <= L_11260422)) {
    kxi_11260416.patches.push({k: ka_11260417, parent: parenta_11260418, current: currenta_11260419, newNode: na_11260420, oldNode: oldNode_11260421});;
    }
    else {
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].k = ka_11260417;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].parent = parenta_11260418;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].current = currenta_11260419;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].newNode = na_11260420;
      kxi_11260416.patches[chckIndx(L_11260422, 0, (kxi_11260416.patches).length-1)].oldNode = oldNode_11260421;
    }
    
    kxi_11260416.patchLen = addInt(kxi_11260416.patchLen, 1);

  
}
function diff_11310215(newNode_11310217, oldNode_11310218, parent_11310219, current_11310220, kxi_11310221) {
        var Tmp1;
            var Tmp6;

  BeforeRet: do {
    var result_11310401 = eq_11175214(newNode_11310217, oldNode_11310218, false);
    switch (result_11310401) {
    case 0:
      kxi_11310221.components.push({oldNode: oldNode_11310218, newNode: newNode_11310217, parent: parent_11310219, current: current_11310220});;
      break;
    case 3:
    case 2:
      newNode_11310217.dom = oldNode_11310218.dom;
      if ((result_11310401 == 2)) {
      updateStyles_11235034(newNode_11310217, oldNode_11310218);
      updateAttributes_11245052(newNode_11310217, oldNode_11310218);
      if ((oldNode_11310218.kind == 0)) {
      oldNode_11310218.text = newNode_11310217.text;
      oldNode_11310218.dom.nodeValue = newNode_11310217.text;
      }
      
      }
      
        if (!(((newNode_11310217.events).length == 0))) Tmp1 = true; else {          Tmp1 = !(((oldNode_11310218.events).length == 0));        }      if (Tmp1) {
      mergeEvents_11255014(newNode_11310217, oldNode_11310218, kxi_11310221);
      }
      
      var newLength_11320006 = len_10550014(newNode_11310217);
      var oldLength_11320007 = len_10550014(oldNode_11310218);
      if (((newLength_11320006 == 0) && (oldLength_11320007 == 0))) {
      break BeforeRet;
      }
      
      var minLength_11320008 = nimMin(newLength_11320006, oldLength_11320007);
      if (!((oldNode_11310218.kind == newNode_11310217.kind))) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var commonPrefix_11330202 = 0;
      L2: do {
          L3: while (true) {
          if (!(commonPrefix_11330202 < minLength_11320008)) break L3;
            if ((eq_11175214(HEX5BHEX5D_10550036(newNode_11310217, commonPrefix_11330202), HEX5BHEX5D_10550036(oldNode_11310218, commonPrefix_11330202), true) == 3)) {
            addPatch_11260414(kxi_11310221, 5, null, null, HEX5BHEX5D_10550036(newNode_11310217, commonPrefix_11330202), HEX5BHEX5D_10550036(oldNode_11310218, commonPrefix_11330202));
            commonPrefix_11330202 = addInt(commonPrefix_11330202, 1);
            }
            else {
              break L2;
            }
            
          }
      } while(false);
      var oldPos_11330214 = subInt(oldLength_11320007, 1);
      var newPos_11330215 = subInt(newLength_11320006, 1);
      L4: do {
          L5: while (true) {
            if (!(commonPrefix_11330202 <= oldPos_11330214)) Tmp6 = false; else {              Tmp6 = (commonPrefix_11330202 <= newPos_11330215);            }          if (!Tmp6) break L5;
            if ((eq_11175214(HEX5BHEX5D_10550036(newNode_11310217, newPos_11330215), HEX5BHEX5D_10550036(oldNode_11310218, oldPos_11330214), true) == 3)) {
            addPatch_11260414(kxi_11310221, 5, null, null, HEX5BHEX5D_10550036(newNode_11310217, newPos_11330215), HEX5BHEX5D_10550036(oldNode_11310218, oldPos_11330214));
            oldPos_11330214 = subInt(oldPos_11330214, 1);
            newPos_11330215 = subInt(newPos_11330215, 1);
            }
            else {
              break L4;
            }
            
          }
      } while(false);
      var pos_11340018 = addInt(nimMin(oldPos_11330214, newPos_11330215), 1);
      L7: do {
        var i_11340024 = 0;
        var colontmp__11726221 = 0;
        colontmp__11726221 = subInt(pos_11340018, 1);
        var res_11726222 = commonPrefix_11330202;
        L8: do {
            L9: while (true) {
            if (!(res_11726222 <= colontmp__11726221)) break L9;
              i_11340024 = res_11726222;
              diff_11310215(HEX5BHEX5D_10550036(newNode_11310217, i_11340024), HEX5BHEX5D_10550036(oldNode_11310218, i_11340024), current_11310220, current_11310220.childNodes[chckIndx(i_11340024, 0, (current_11310220.childNodes).length-1)], kxi_11310221);
              res_11726222 = addInt(res_11726222, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(oldPos_11330214, 1) == oldLength_11320007)) {
      L10: do {
        var i_11340030 = 0;
        var res_11726228 = pos_11340018;
        L11: do {
            L12: while (true) {
            if (!(res_11726228 <= newPos_11330215)) break L12;
              i_11340030 = res_11726228;
              addPatch_11260414(kxi_11310221, 2, current_11310220, null, HEX5BHEX5D_10550036(newNode_11310217, i_11340030), null);
              res_11726228 = addInt(res_11726228, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_11340031 = current_11310220.childNodes[chckIndx(addInt(oldPos_11330214, 1), 0, (current_11310220.childNodes).length-1)];
        L13: do {
          var i_11340037 = 0;
          var res_11726234 = pos_11340018;
          L14: do {
              L15: while (true) {
              if (!(res_11726234 <= newPos_11330215)) break L15;
                i_11340037 = res_11726234;
                addPatch_11260414(kxi_11310221, 3, current_11310220, before_11340031, HEX5BHEX5D_10550036(newNode_11310217, i_11340037), null);
                res_11726234 = addInt(res_11726234, 1);
              }
          } while(false);
        } while(false);
      }
      
      L16: do {
        var i_11340043 = 0;
        var res_11726240 = pos_11340018;
        L17: do {
            L18: while (true) {
            if (!(res_11726240 <= oldPos_11330214)) break L18;
              i_11340043 = res_11726240;
              addPatch_11260414(kxi_10897284[0], 4, null, null, null, HEX5BHEX5D_10550036(oldNode_11310218, i_11340043));
              addPatch_11260414(kxi_11310221, 1, current_11310220, current_11310220.childNodes[chckIndx(i_11340043, 0, (current_11310220.childNodes).length-1)], null, null);
              res_11726240 = addInt(res_11726240, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      addPatch_11260414(kxi_10897284[0], 4, null, null, null, oldNode_11310218);
      addPatch_11260414(kxi_11310221, 0, parent_11310219, current_11310220, newNode_11310217, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}
function applyComponents_11360429(kxi_11360431) {
            var Tmp3;

    var i_11360433 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_11360433 < (kxi_11360431.components).length)) break L2;
          var x_11360439 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].oldNode;
          var newNode_11360440 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].newNode;
            if (!!((x_11360439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_11360439.changedImpl(x_11360439, newNode_11360440);            }          if (Tmp3) {
          var current_11365201 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].current;
          var parent_11365202 = kxi_11360431.components[chckIndx(i_11360433, 0, (kxi_11360431.components).length-1)].parent;
          x_11360439.updatedImpl(x_11360439, newNode_11360440);
          var oldExpanded_11365203 = x_11360439.expanded;
          x_11360439.expanded = x_11360439.renderImpl(x_11360439);
          x_11360439.renderedVersion = x_11360439.version;
          if ((oldExpanded_11365203 == null)) {
          addPatch_11260414(kxi_10897284[0], 4, null, null, null, x_11360439);
          addPatch_11260414(kxi_11360431, 0, parent_11365202, current_11365201, x_11360439.expanded, null);
          }
          else {
            diff_11310215(x_11360439.expanded, oldExpanded_11365203, parent_11365202, current_11365201, kxi_11360431);
          }
          
          }
          
          i_11360433 = addInt(i_11360433, 1);
        }
    } while(false);
    if (kxi_11360431.components.length < 0) { for (var i=kxi_11360431.components.length;i<0;++i) kxi_11360431.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_11360431.components.length = 0; };

  
}
function moveDom_11270048(dest_11270050, src_11270051) {
    dest_11270050.dom = src_11270051.dom;
    src_11270051.dom = null;
    if (!((dest_11270050.id == null))) {
    kxi_10897284[0].byId[dest_11270050.id] = dest_11270050;
    }
    
    if (!((len_10550014(dest_11270050) == len_10550014(src_11270051)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      var i_11285208 = 0;
      var colontmp__11726291 = 0;
      colontmp__11726291 = len_10550014(dest_11270050);
      var i_11726292 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11726292 < colontmp__11726291)) break L3;
            i_11285208 = i_11726292;
            moveDom_11270048(HEX5BHEX5D_10550036(dest_11270050, i_11285208), HEX5BHEX5D_10550036(src_11270051, i_11285208));
            i_11726292 = addInt(i_11726292, 1);
          }
      } while(false);
    } while(false);

  
}
function HEX5BHEX5DHEX3D_10550054(x_10550056, idx_10550057, y_10550058) {
    x_10550056.kids[chckIndx(idx_10550057, 0, (x_10550056.kids).length-1)] = y_10550058;

  
}
function applyPatch_11285222(kxi_11285224) {
    L1: do {
      var i_11285232 = 0;
      var i_11726285 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_11726285 < kxi_11285224.patchLen)) break L3;
            i_11285232 = i_11726285;
            var p_11285233 = nimCopy(null, kxi_11285224.patches[chckIndx(i_11285232, 0, (kxi_11285224.patches).length-1)], NTI10897209);
            switch (p_11285233.k) {
            case 0:
              var nn_11285234 = toDom_11010154(p_11285233.newNode, true, kxi_11285224);
              if ((p_11285233.parent == null)) {
              replaceById_11175074(kxi_11285224.rootId, nn_11285234);
              }
              else {
                if ((p_11285233.current.parentNode == p_11285233.parent)) {
                p_11285233.parent.replaceChild(nn_11285234, p_11285233.current);
                }
                else {
                p_11285233.parent.appendChild(nn_11285234);
                }
                
              }
              
              break;
            case 5:
              moveDom_11270048(p_11285233.newNode, p_11285233.oldNode);
              break;
            case 1:
              p_11285233.parent.removeChild(p_11285233.current);
              break;
            case 2:
              var nn_11285250 = toDom_11010154(p_11285233.newNode, true, kxi_11285224);
              p_11285233.parent.appendChild(nn_11285250);
              break;
            case 3:
              var nn_11285251 = toDom_11010154(p_11285233.newNode, true, kxi_11285224);
              p_11285233.parent.insertBefore(nn_11285251, p_11285233.current);
              break;
            case 4:
              var n_11285252 = p_11285233.oldNode;
              if (!((n_11285252.id == null))) {
              delete kxi_11285224.byId[n_11285252.id];
              }
              
              if ((n_11285252.kind == 5)) {
              var x_11290018 = n_11285252;
              if (!((x_11290018.onDetachImpl == null))) {
              x_11290018.onDetachImpl(x_11290018);
              }
              
              }
              
              if (!(kxi_11285224.surpressRedraws)) {
              n_11285252.dom = null;
              }
              
              break;
            }
            i_11726285 = addInt(i_11726285, 1);
          }
      } while(false);
    } while(false);
    kxi_11285224.patchLen = 0;
    L4: do {
      var i_11295013 = 0;
      var i_11726288 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_11726288 < kxi_11285224.patchLenV)) break L6;
            i_11295013 = i_11726288;
            var p_11295014 = nimCopy(null, kxi_11285224.patchesV[chckIndx(i_11295013, 0, (kxi_11285224.patchesV).length-1)], NTI10897211);
            HEX5BHEX5DHEX3D_10550054(p_11295014.parent, p_11295014.pos, p_11295014.newChild);
            if (!(!((p_11295014.newChild.dom == null)))) {
            failedAssertImpl_1305480(makeNimstrLit("karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            i_11726288 = addInt(i_11726288, 1);
          }
      } while(false);
    } while(false);
    kxi_11285224.patchLenV = 0;

  
}
function dodraw_11425262(kxi_11425264) {
  BeforeRet: do {
    if ((kxi_11425264.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_11425269 = {hashPart: window.location.hash};
    var newtree_11425270 = kxi_11425264.renderer(rdata_11425269);
    kxi_11425264.runCount = addInt(kxi_11425264.runCount, 1);
    newtree_11425270.id = kxi_11425264.rootId;
    kxi_11425264.toFocus = null;
    if ((kxi_11425264.currentTree == null)) {
    var asdom_11425285 = toDom_11010154(newtree_11425270, true, kxi_11425264);
    replaceById_11175074(kxi_11425264.rootId, asdom_11425285);
    }
    else {
      if (!(same_11160072(kxi_11425264.currentTree, document.getElementById(kxi_11425264.rootId), 0))) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_11435201 = document.getElementById(kxi_11425264.rootId);
      diff_11310215(newtree_11425270, kxi_11425264.currentTree, null, olddom_11435201, kxi_11425264);
    }
    
    applyComponents_11360429(kxi_11425264);
    applyPatch_11285222(kxi_11425264);
    kxi_11425264.currentTree = newtree_11425270;
    if (!(same_11160072(kxi_11425264.currentTree, document.getElementById(kxi_11425264.rootId), 0))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_11425264.postRenderCallback == null))) {
    kxi_11425264.postRenderCallback(rdata_11425269);
    }
    
    if (!((kxi_11425264.toFocus == null))) {
    kxi_11425264.toFocus.focus();
    }
    
    kxi_11425264.renderId = 0;
  } while (false);

  
}
function redraw_11450414(kxi_11450416) {
    function HEX3Aanonymous_11450601() {
        dodraw_11425262(kxi_11450416);

      
    }

    if ((kxi_11450416.renderId == 0)) {
    kxi_11450416.renderId = window.requestAnimationFrame(HEX3Aanonymous_11450601);
    }
    

  
}
function viewSelector_11726137(view_11726139, no_redraw_11726140) {
    switch (view_11726139) {
    case 0:
      showScanSeedBtn_11726074[0] = true;
      showScanning_11726075[0] = true;
      showCamTools_11726076[0] = true;
      showScanResult_11726077[0] = false;
      showPage2_11726083[0] = false;
      break;
    case 1:
      showScanSeedBtn_11726074[0] = true;
      showScanning_11726075[0] = true;
      showCamTools_11726076[0] = true;
      showScanResult_11726077[0] = false;
      showPage2_11726083[0] = false;
      break;
    case 2:
      showScanSeedBtn_11726074[0] = false;
      showScanning_11726075[0] = true;
      showCamTools_11726076[0] = true;
      showScanResult_11726077[0] = true;
      showPage2_11726083[0] = true;
      break;
    case 3:
      showPage2_11726083[0] = false;
      break;
    case 4:
      showPage2_11726083[0] = true;
      break;
    case 5:
      showScanResult_11726077[0] = false;
      mnemonicFulfill_11726086[0] = false;
      showScanSeedBtn2_11726078[0] = true;
      showScanning2_11726079[0] = true;
      showCamTools2_11726080[0] = true;
      showScanResult2_11726081[0] = false;
      showPage1_11726082[0] = false;
      showPage2_11726083[0] = true;
      break;
    case 8:
      showScanSeedBtn2_11726078[0] = false;
      showScanning2_11726079[0] = true;
      showCamTools2_11726080[0] = true;
      showScanResult2_11726081[0] = true;
      showPage3_11726084[0] = false;
      break;
    case 9:
      showPage3_11726084[0] = true;
      break;
    case 11:
      showPage3_11726084[0] = true;
      break;
    case 12:
      showScanResult2_11726081[0] = false;
      keyCardFulfill_11726087[0] = false;
      passphraseFulfill_11726088[0] = false;
      showPage1_11726082[0] = false;
      showPage2_11726083[0] = false;
      showPage3_11726084[0] = true;
      showPage4_11726085[0] = false;
      break;
    case 13:
      showPage1_11726082[0] = false;
      showPage2_11726083[0] = false;
      showPage3_11726084[0] = true;
      showPage4_11726085[0] = true;
      showSettings_11726093[0] = false;
      showTradeLogs_11726092[0] = true;
      break;
    case 14:
      showPage1_11726082[0] = false;
      showPage2_11726083[0] = false;
      showPage3_11726084[0] = true;
      showPage4_11726085[0] = true;
      showTradeLogs_11726092[0] = false;
      showSettings_11726093[0] = true;
      break;
    default: 
      break;
    }
    if (!(no_redraw_11726140)) {
    redraw_11450414(appInst_11726027[0]);
    }
    

  
}
  jsViewSelector = viewSelector_11726137;
  function setSupressRedraw(flag) {
    supressRedraw_11726089[0] = flag;
  }
  function getSupressRedraw() {
    return supressRedraw_11726089[0];
  }

function viewUpdate_11726294() {
    if (!(supressRedraw_11726089[0])) {
    redraw_11450414(appInst_11726027[0]);
    }
    

  
}
  var jsViewUpdate = viewUpdate_11726294;

function HEX3Aanonymous_11750004(x_11750006) {
  var result_11750007 = null;

    result_11750007 = x_11750006;

  return result_11750007;

}
function HEX3Aanonymous_11775004(x_11775006) {
  var result_11775007 = null;

    result_11775007 = x_11775006;

  return result_11775007;

}
var seedCardInfos_11726424 = [[]];
var editingWords_11726425 = [""];
var inputWords_11726426 = [""];
var autocompleteWords_11726443 = [[]];
var chklist_11726451 = [[]];
var prevCheckWord_11726452 = [""];
var passPhrase_11726453 = [""];
var bip39_11730004 = [coinlibs.bip39];
var bip39_wordlist_11740004 = [bip39_11730004[0].wordlists.japanese];
var wl_japanese_11765005 = [nimCopy(null, bip39_11730004[0].wordlists.japanese.map((HEX3Aanonymous_11750004)), NTI11740005)];
var wl_english_11790005 = [nimCopy(null, bip39_11730004[0].wordlists.english.map((HEX3Aanonymous_11775004)), NTI11765006)];
var wl_select_11790006 = [nimCopy(null, wl_japanese_11765005[0], NTI11740005)];
var wl_select_id_11790008 = [1];
function seedToKeys_11795461() {
        var wallet = pastel.wallet;
  
    if ((currentImportType_11726050[0] == 0)) {
          wallet.setSeedCard(seedCardInfos_11726424[0]);
    
    }
    else {
    if ((currentImportType_11726050[0] == 1)) {
          wallet.setMnemonic(inputWords_11726426[0], wl_select_id_11790008[0]);
    
    }
    }

  
}
function clearSensitive_11790056() {
    seedCardInfos_11726424[0] = nimCopy(null, [], NTI11790072);
    editingWords_11726425[0] = "";
    inputWords_11726426[0] = "";
    autocompleteWords_11726443[0] = nimCopy(null, [], NTI11790087);
    chklist_11726451[0] = nimCopy(null, [], NTI11790102);
    prevCheckWord_11726452[0] = "";
    passPhrase_11726453[0] = "";

  
}
  var jsSeedToKeys = seedToKeys_11795461;
  var jsClearSensitive = clearSensitive_11790056;

var keyCardVal_11850251 = [""];
// https://github.com/gustf/js-levenshtein
var levenshtein = (function()
{
  function _min(d0, d1, d2, bx, ay)
  {
    return d0 < d1 || d2 < d1
        ? d0 > d2
            ? d2 + 1
            : d0 + 1
        : bx === ay
            ? d1
            : d1 + 1;
  }

  return function(a, b)
  {
    if (a === b) {
      return 0;
    }

    if (a.length > b.length) {
      var tmp = a;
      a = b;
      b = tmp;
    }

    var la = a.length;
    var lb = b.length;

    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {
      la--;
      lb--;
    }

    var offset = 0;

    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {
      offset++;
    }

    la -= offset;
    lb -= offset;

    if (la === 0 || lb < 3) {
      return lb;
    }

    var x = 0;
    var y;
    var d0;
    var d1;
    var d2;
    var d3;
    var dd;
    var dy;
    var ay;
    var bx0;
    var bx1;
    var bx2;
    var bx3;

    var vector = [];

    for (y = 0; y < la; y++) {
      vector.push(y + 1);
      vector.push(a.charCodeAt(offset + y));
    }

    var len = vector.length - 1;

    for (; x < lb - 3;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      bx1 = b.charCodeAt(offset + (d1 = x + 1));
      bx2 = b.charCodeAt(offset + (d2 = x + 2));
      bx3 = b.charCodeAt(offset + (d3 = x + 3));
      dd = (x += 4);
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        ay = vector[y + 1];
        d0 = _min(dy, d0, d1, bx0, ay);
        d1 = _min(d0, d1, d2, bx1, ay);
        d2 = _min(d1, d2, d3, bx2, ay);
        dd = _min(d2, d3, dd, bx3, ay);
        vector[y] = dd;
        d3 = d2;
        d2 = d1;
        d1 = d0;
        d0 = dy;
      }
    }

    for (; x < lb;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      dd = ++x;
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);
        d0 = dy;
      }
    }

    return dd;
  };
})();

function levens(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var similars = [];
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    similars.push(data[score]);
    if(result.length > 0 && score > 0.5) {
      break;
    }
    if((result.length == 0 && data[score].length <= 30) || (result.length + data[score].length) <= 7) {
      result = result.concat(data[score]);
    }
  }
  return result;
}
function levens_one(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    if(lev != 1) {
      continue;
    }
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    result = result.concat(data[score]);
  }
  return result;
}

var confirm_mnemonic_advanced_11945053 = [false];
  var send_balls_count = 0;
  var cur_calc_send_utxo = null;

  function conv_coin(uint64_val) {
    var strval = uint64_val.toString();
    var val = parseInt(strval, 10);
    if(val > Number.MAX_SAFE_INTEGER) {
      var d = strval.slice(-8).replace(/0+$/, '');
      var n = strval.substr(0, strval.length - 8);
      if(d.length > 0) {
        return n + '.' + d;
      } else {
        return n;
      }
    }
    return val / 100000000;
  }

  function resetSendBallCount() {
    send_balls_count = 0;
    cur_calc_send_utxo = null;
    $('#btn-utxo-count').text('...');
    pastel.utxoballs.setSend(0);
  }

  function check_amount_elm() {
    var amount_elm = $('#send-coins input[name="amount"]');
    var amount = amount_elm.val().trim();
    if(amount.length > 0) {
      amount = amount.replace(/,/g, '');
      var amounts = amount.split('.');
      if(amount.match(/^\d+(\.\d{1,8})?$/)) {
        amount_elm.closest('.field').removeClass('error warning');
        var value = '';
        if(amounts.length == 1) {
          if(amounts[0] != '0') {
            value = amounts[0] + '00000000';
          } else {
            value = amounts[0];
          }
        } else if(amounts.length == 2) {
          value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
        }
        if(value.length > 0) {
          setSendUtxo(value);
        } else {
          resetSendBallCount();
        }
      } else {
        amount_elm.closest('.field').addClass('error');
      }
    } else {
      amount_elm.closest('.field').removeClass('error warning');
      resetSendBallCount();
    }
  }

  function updateBallCount() {
    if(sendrecv_switch == 1) {
      check_amount_elm();
    }
  }
  pastel.utxoballs.updateSend(updateBallCount);

  function setSendUtxo(value) {
    var ret = pastel.wallet.calcSendUtxo(value);
    cur_calc_send_utxo = ret;
    var amount_elm = $('#send-coins input[name="amount"]');
    if(ret.err) {
      if(ret.all > ret.max) {
        $('#btn-utxo-count').text('>' + String(ret.max) + ' max');
        pastel.utxoballs.setSend(ret.max);
        send_balls_count = ret.max;
      } else {
        $('#btn-utxo-count').text('>' + String(ret.all) + ' all');
        pastel.utxoballs.setSend(ret.all);
        send_balls_count = ret.all;
      }
      amount_elm.closest('.field').removeClass('warning');
      amount_elm.closest('.field').addClass('error');
    } else {
      if(ret.count > ret.max) {
        $('#btn-utxo-count').text('>' + String(ret.max) + ' max');
        pastel.utxoballs.setSend(ret.max);
        send_balls_count = ret.max;
        amount_elm.closest('.field').removeClass('warning');
        amount_elm.closest('.field').addClass('error');
      } else {
        amount_elm.closest('.field').removeClass('error');
        if(ret.conf != null && ret.count > ret.conf && ret.count > 0) {
          amount_elm.closest('.field').addClass('warning');
        } else {
          amount_elm.closest('.field').removeClass('warning');
        }
        $('#btn-utxo-count').text((ret.sign == 0 ? '' : '≤') + String(ret.count) + (ret.count == ret.all ? ' all' : ''));
        pastel.utxoballs.setSend(ret.count);
        send_balls_count = ret.count;
      }
    }
  }

  function initSendForm() {
    $('#btn-send-clear').off('click').click(function() {
      if(!showPage4_11726085[0]) {
        $('#send-coins input[name="address"]').val('');
        $('#send-coins input[name="amount"]').val('');
        $('#send-coins input[name="address"]').closest('.field').removeClass('error');
        $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
        resetSendBallCount();
        uriOptions = [];
        jsViewSelector(12);
      }
      $(this).blur();
    });
    $('#btn-send-qrcode').off('click').click(function() {
      if(!showPage4_11726085[0]) {
        qrReaderModal.show(function(err, uri) {
          if(!err) {
            var data = bip21reader(uri);
            $('#send-coins input[name="address"]').val(data.address || '');
            if(data.amount != null) {
              $('#send-coins input[name="amount"]').val(data.amount || '');
            }
            uriOptions = [];
            for(var k in data) {
              var p = data[k];
              if(k == 'address' || k == 'amount') {
                continue;
              }
              var key = crlftab_to_html(k);
              key = key.charAt(0).toUpperCase() + key.slice(1);
              uriOptions.push({key: key, value: crlftab_to_html(p)});
            }
            check_amount_elm();
            jsViewSelector(12);
          } else {
            Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
          }
        });
      }
      $(this).blur();
    });
    $('#btn-send-lock').off('click').click(function() {
      var elm = $(this);
      var icon = elm.find('i');
      if(icon.hasClass('open')) {
        if(pastel.wallet && pastel.wallet.lockShieldedKeys()) {
          icon.removeClass('open');
          elm.attr('title', 'Locked');
          PhraseLock.notify_locked();
          PhraseLock.disableInactivity();
        }
        setTimeout(function() {
          elm.focus();
        }, 1000);
      } else {
        Notify.hide_all();
        PhraseLock.showPhraseInput(function(status) {
          if(status == PhraseLock.PLOCK_SUCCESS) {
            icon.addClass('open');
            elm.attr('title', __t('Unlocked'));
            PhraseLock.notify_unlocked();
            var locked_flag = false;
            PhraseLock.enableInactivity(function() {
              if(icon.hasClass('open')) {
                if(pastel.wallet && pastel.wallet.lockShieldedKeys()) {
                  locked_flag = true;
                }
              }
            }, function() {
              if(icon.hasClass('open') && locked_flag) {
                icon.removeClass('open');
                elm.attr('title', 'Locked');
                if(sendrecv_switch == 1) {
                  PhraseLock.notify_locked();
                } else {
                  sendrecv_switch_sendafter = function() {
                    PhraseLock.notify_locked();
                  }
                }
                PhraseLock.disableInactivity();
              }
            });
          } else if(status == PhraseLock.PLOCK_FAILED_QR) {
            Notify.show(__t('Error'), __t('Failed to unlock. Wrong key card was scanned.'), Notify.msgtype.error);
          } else if(status == PhraseLock.PLOCK_FAILED_PHRASE) {
            Notify.show(__t('Error'), __t('Failed to unlock. Passphrase is incorrect.'), Notify.msgtype.error);
          } else if(status == PhraseLock.PLOCK_FAILED_CAMERA) {
            Notify.show(__t('Error'), __t('Failed to unlock. Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
          }
          setTimeout(function() {
            elm.focus();
          }, 1000);
        });
      }
    });
    pastel.utxoballs.setSend(send_balls_count);

    $('#btn-utxo-plus').off('click').click(function() {
      $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
      var cur = cur_calc_send_utxo;
      if(cur) {
        if(cur.err) {
          cur.count = Math.min(cur.all, cur.max);
          cur.sign = 0;
          cur.err = 0;
        } else {
          if(cur.sign == 0) {
            cur.count++;
          } else {
            cur.sign = 0;
          }
        }
      } else {
        cur = {err: 0, count: 1, sign: 0};
        cur_calc_send_utxo = cur;
      }
      var sendval = pastel.wallet.calcSendValue(cur.count);
      cur.all = sendval.all;
      cur.max = sendval.max;
      cur.count = sendval.count;
      send_balls_count = cur.count;
      pastel.utxoballs.setSend(send_balls_count);
      $('#send-coins input[name="amount"]').val(conv_coin(sendval.value));
      if(sendval.conf != null && cur.count > sendval.conf && cur.count > 0) {
        $('#send-coins input[name="amount"]').closest('.field').addClass('warning');
      } else {
        $('#send-coins input[name="amount"]').closest('.field').removeClass('warning');
      }
      var exinfo = '';
      if(sendval.count == sendval.all) {
        exinfo = ' all';
      } else if(sendval.count == sendval.max) {
        exinfo = ' max';
      }
      $('#btn-utxo-count').text(String(sendval.count) + exinfo);
      $(this).blur();
    });
    $('#btn-utxo-minus').off('click').click(function() {
      $('#send-coins input[name="amount"]').closest('.field').removeClass('error');
      var cur = cur_calc_send_utxo;
      if(cur) {
        if(cur.err) {
          cur.count = Math.min(cur.all, cur.max);
          cur.sign = 0;
          cur.err = 0;
        } else {
          if(cur.sign <= 0) {
            if(cur.count > 0) {
              cur.count--;
            }
          }
          cur.sign = 0;
        }
      } else {
        cur = {err: 0, count: 0, sign: 0};
        cur_calc_send_utxo = cur;
      }
      var sendval = pastel.wallet.calcSendValue(cur.count);
      cur.all = sendval.all;
      cur.max = sendval.max;
      cur.count = sendval.count;
      send_balls_count = cur.count;
      pastel.utxoballs.setSend(send_balls_count);
      $('#send-coins input[name="amount"]').val(conv_coin(sendval.value));
      if(sendval.conf != null && cur.count > sendval.conf && cur.count > 0) {
        $('#send-coins input[name="amount"]').closest('.field').addClass('warning');
      } else {
        $('#send-coins input[name="amount"]').closest('.field').removeClass('warning');
      }
      var exinfo = '';
      if(sendval.count == sendval.all) {
        exinfo = ' all';
      } else if(sendval.count == sendval.max) {
        exinfo = ' max';
      }
      $('#btn-utxo-count').text(String(sendval.count) + exinfo);
      $(this).blur();
    });
    var send_busy = false;
    $('#btn-tx-send').off('click').click(function() {
      if(send_busy) {
        return;
      }
      send_busy = true;
      var locked = PhraseLock.notify_if_need_unlock();
      if(!locked && pastel.wallet) {
        var address = String($('#send-coins input[name="address"]').val()).trim();
        var amount = String($('#send-coins input[name="amount"]').val()).trim();
        if(address.length == 0 || amount.length == 0) {
          var address_elm = $('#send-coins input[name="address"]').closest('.field');
          var amount_elm = $('#send-coins input[name="amount"]').closest('.field');
          var flag = true;
          var alert_count = 0;
          function alert_worker() {
            if(address.length == 0) {
              if(flag) {
                address_elm.addClass('error');
              } else {
                address_elm.removeClass('error');
              }
            }
            if(amount.length == 0) {
              if(flag) {
                amount_elm.addClass('error');
              } else {
                amount_elm.removeClass('error');
              }
            }
            alert_count++;
            if(alert_count < 4) {
              flag = !flag;
              setTimeout(alert_worker, 100);
            }
          }
          alert_worker();
          return;
        }
        amount = amount.replace(/,/g, '');
        var amounts = amount.split('.');
        if(amount.match(/^\d+(\.\d{1,8})?$/)) {
          var value = '';
          if(amounts.length == 1) {
            if(amounts[0] != '0') {
              value = amounts[0] + '00000000';
            } else {
              value = amounts[0];
            }
          } else if(amounts.length == 2) {
            value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
          }
          Notify.hide_all();
          var self = $(this);
          $('#btn-tx-send').addClass('loading');
          pastel.wallet.send(address, value, function(result) {
            var ErrSend = pastel.wallet.ERR_SEND;
            switch(result.err) {
            case ErrSend.SUCCESS:
              Notify.show('', __t('Coins sent successfully.'), Notify.msgtype.info);
              pastel.unspents_after_actions.push(function() {
                if(sendrecv_switch == 1) {
                  setSendUtxo(value);
                }
              });
              break;
            case ErrSend.FAILED:
              Notify.show(__t('Error'), __t('Failed to send coins.'), Notify.msgtype.error);
              break;
            case ErrSend.INVALID_ADDRESS:
              Notify.show(__t('Error'), __t('Address is invalid.'), Notify.msgtype.error);
              break;
            case ErrSend.INSUFFICIENT_BALANCE:
              Notify.show(__t('Error'), __t('Balance is insufficient.'), Notify.msgtype.error);
              break;
            case ErrSend.DUST_VALUE:
              if(value == '0') {
                Notify.show(__t('Error'), __t('Amount is zero.'), Notify.msgtype.error);
              } else {
                Notify.show(__t('Error'), __t('Amount is too small.'), Notify.msgtype.error);
              }
              break;
            case ErrSend.BUSY:
              Notify.show(__t('Error'), __t('Failed to send coins. Busy.'), Notify.msgtype.error);
              break;
            case ErrSend.TX_FAILED:
              var msg = '';
              if(result.res && result.res.message) {
                msg = '<br> [' + result.res.message + ']';
              }
              Notify.show(__t('Error'), __t('Failed to send coins.') + msg, Notify.msgtype.error);
              break;
            case ErrSend.TX_TIMEOUT:
              Notify.show(__t('Warning'), __t('Server is not responding. Coins may have been sent.'), Notify.msgtype.warning);
              break;
            case ErrSend.SERVER_ERROR:
              Notify.show(__t('Error'), __t('Failed to send coins. Server error.'), Notify.msgtype.error);
              break;
            case ErrSend.SERVER_TIMEOUT:
              Notify.show(__t('Error'), __t('Failed to send coins. Server is not responding.'), Notify.msgtype.error);
              break;
            default:
              Notify.show(__t('Error'), __t('Failed to send coins.'), Notify.msgtype.error);
            }
            $('#btn-tx-send').removeClass('loading');
            self.blur();
            send_busy = false;
          });
        } else {
          if(amounts.length > 1 && amounts[1].length > 8) {
            Notify.show(__t('Error'), __t('Amount is invalid. The decimal places is too long. Please set it 8 or less.'), Notify.msgtype.error);
          } else {
            Notify.show(__t('Error'), __t('Amount is invalid.'), Notify.msgtype.error);
          }
          send_busy = false;
          $(this).blur();
        }
      } else {
        $('#btn-send-lock').focus();
        send_busy = false;
      }
    });
  }

  var sendrecv_switch = 0;
  var sendrecv_switch_busy = false;
  var sendrecv_switch_tval;
  var sendrecv_last = null;
  var sendrecv_wait = 0;
  var sendrecv_switch_sendafter = function() {}
  function send_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 2) {
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          $('#send-coins').transition({
            animation: 'fade down',
            onComplete : function() {
              sendrecv_last = 1;
              sendrecv_switch_busy = false;
              sendrecv_switch_sendafter();
            }
          });
          initSendForm();
        }
      });
    } else {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 1;
          sendrecv_switch_busy = false;
          sendrecv_switch_sendafter();
        }
      });
      initSendForm();
    }
  }
  function recv_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 1) {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          showRecvAddress(function() {
            $('#receive-address').transition({
              animation: 'fade down',
              onComplete : function() {
                showRecvAddressAfterEffect();
                sendrecv_last = 2;
                sendrecv_switch_busy = false;
              }
            });
          });
        }
      });
    } else {
      showRecvAddress(function() {
        $('#receive-address').transition({
          animation: 'fade down',
          onComplete : function() {
            showRecvAddressAfterEffect();
            sendrecv_last = 2;
            sendrecv_switch_busy = false;
          }
        });
      });
    }
  }
  function reset_switch(switch_id) {
    if(!$('#send-coins').hasClass('hidden') && (switch_id == null || switch_id == 1)) {
      sendrecv_switch_busy = true;
      if(switch_id == 1) {
        pastel.utxoballs.setSend(0);
      }
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
    if(!$('#receive-address').hasClass('hidden') && (switch_id == null || switch_id == 2)) {
      sendrecv_switch_busy = true;
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
  }
  function sendrecv_switch_worker() {
    if(sendrecv_switch_busy) {
      sendrecv_switch_tval = setTimeout(function() {
        sendrecv_wait++;
        if(sendrecv_wait < 300) {
          sendrecv_switch_worker();
        } else {
          sendrecv_switch_busy = false;
        }
      }, 50);
      return;
    }
    sendrecv_wait = 0;
    if(sendrecv_last == sendrecv_switch) {
      return;
    }
    if(sendrecv_switch == 1) {
      send_switch();
    } else if(sendrecv_switch == 2) {
      recv_switch();
    } else {
      reset_switch();
    }
  }
  function sendrecv_select(val) {
    clearTimeout(sendrecv_switch_tval);
    if(sendrecv_switch == 1 && val != 1) {
      pastel.utxoballs.setSend(0);
    }
    sendrecv_switch = val;
    sendrecv_switch_worker();
  }

  function enable_caret_browsing(elm) {
    elm.find('.tabindex:not(:hidden), button:not(:hidden), a:not(:hidden), textarea:not(:hidden), input:not(:hidden)').each(function() {
      $(this).attr('tabindex', $(this).data('tabindex') || 0);
    });
    $('#selectlang .tabindex, #receive-address .tabindex').each(function() {
      $(this).attr('tabindex', $(this).data('tabindex') || 0);
    });
  }
  function disable_caret_browsing(elm) {
    elm.find('.tabindex:not(:hidden), button:not(:hidden), a:not(:hidden), textarea:not(:hidden), input:not(:hidden)').each(function() {
      $(this).attr('tabindex', -1);
    });
    $('#selectlang .tabindex, #receive-address .tabindex').each(function() {
      $(this).attr('tabindex', -1);
    });
  }

  var uriOptions = [];

function newSeq_11455012(len_11455015) {
  var result_11455017 = [];

    result_11455017 = new Array(len_11455015); for (var i=0;i<len_11455015;++i) {result_11455017[i]=({k: 0, parent: null, current: null, newNode: null, oldNode: null});}
  return result_11455017;

}
function newSeq_11455064(len_11455067) {
  var result_11455069 = [];

    result_11455069 = new Array(len_11455067); for (var i=0;i<len_11455067;++i) {result_11455069[i]=({parent: null, newChild: null, pos: 0});}
  return result_11455069;

}
function init_11450646(ev_11450648) {
    function HEX3Aanonymous_11450649() {
        dodraw_11425262(kxi_10897284[0]);

      
    }

    kxi_10897284[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_11450649);

  
}
function setInitializer_11460032(renderer_11460037, root_11460038, clientPostRenderCallback_11460042) {
  var result_11460043 = null;

    result_11460043 = {rootId: root_11460038, renderer: renderer_11460037, postRenderCallback: clientPostRenderCallback_11460042, patches: newSeq_11455012(60), patchesV: newSeq_11455064(30), components: [], surpressRedraws: true, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_10897284[0] = result_11460043;
    window.onload = init_11450646;

  return result_11460043;

}
function newVNode_10560428(kind_10560430) {
  var result_10560431 = null;

    result_10560431 = {kind: kind_10560430, index: -1, m_type: NTI10465031, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_10560431;

}
function add_10550072(parent_10550074, kid_10550075) {
    parent_10550074.kids.push(kid_10550075);;

  
}
function tree_10560445(kind_10560447, kids_10560449) {
  var result_10560450 = null;

    result_10560450 = newVNode_10560428(kind_10560447);
    L1: do {
      var k_10560483 = null;
      var k_10560483_Idx = 0;
      var i_12795234 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12795234 < (kids_10560449).length)) break L3;
            k_10560483 = kids_10560449; k_10560483_Idx = chckIndx(i_12795234, 0, (kids_10560449).length-1);
            add_10550072(result_10560450, k_10560483[k_10560483_Idx]);
            i_12795234 = addInt(i_12795234, 1);
          }
      } while(false);
    } while(false);

  return result_10560450;

}
function text_10560582(s_10560584) {
  var result_10560585 = null;

    result_10560585 = {kind: 0, text: toJSStr(s_10560584), index: -1, m_type: NTI10465031, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_10560585;

}
function text_10560801(s_10560803) {
  var result_10560804 = null;

    result_10560804 = {kind: 0, text: s_10560803, index: -1, m_type: NTI10465031, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_10560804;

}
function addEventListener_10565014(n_10565016, event_10565017, handler_10565018) {
    n_10565016.events.push({Field0: event_10565017, Field1: handler_10565018, Field2: null});;

  
}
function addEventHandler_11460154(n_11460156, k_11460157, action_11460160, kxi_11460161) {
    function wrapper_11460162(ev_11460164, n_11460165) {
        action_11460160();
        if (!(kxi_11460161.surpressRedraws)) {
        redraw_11450414(kxi_11460161);
        }
        

      
    }

    addEventListener_10565014(n_11460156, k_11460157, wrapper_11460162);

  
}
function importSelector_11726322(importType_11726324) {
    function HEX3Aanonymous_11726328() {
              qrReader.hide();
    
        currentImportType_11726050[0] = importType_11726324;
        if ((currentImportType_11726050[0] == 0)) {
        showPage2_11726083[0] = showScanResult_11726077[0];
        }
        else {
        if ((currentImportType_11726050[0] == 1)) {
        showPage2_11726083[0] = mnemonicFulfill_11726086[0];
        }
        }
        if ((currentImportType_11726050[0] == 0)) {
                $('#seedselector').removeClass('grey').addClass('olive');
        $('#mnemonicselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#mnemonicselector').removeClass('grey').addClass('olive');
        $('#seedselector').removeClass('olive').addClass('grey');
      
        }
        
        viewUpdate_11726294();

      
    }

  var result_11726327 = null;

    result_11726327 = HEX3Aanonymous_11726328;

  return result_11726327;

}
function setAttr_10500105(n_10500107, key_10500108, val_10500109) {
  BeforeRet: do {
    if (((n_10500107.attrs).length == 0)) {
    n_10500107.attrs = nimCopy(null, [key_10500108, val_10500109], NTI10500125);
    }
    else {
      L1: do {
        var i_10500138 = 0;
        var colontmp__12795278 = 0;
        colontmp__12795278 = subInt((n_10500107.attrs).length, 2);
        var res_12795279 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_12795279 <= colontmp__12795278)) break L3;
              i_10500138 = res_12795279;
              if ((n_10500107.attrs[chckIndx(i_10500138, 0, (n_10500107.attrs).length-1)] == key_10500108)) {
              n_10500107.attrs[chckIndx(addInt(i_10500138, 1), 0, (n_10500107.attrs).length-1)] = val_10500109;
              break BeforeRet;
              }
              
              res_12795279 = addInt(res_12795279, 2);
            }
        } while(false);
      } while(false);
      n_10500107.attrs.push(key_10500108);;
      n_10500107.attrs.push(val_10500109);;
    }
    
  } while (false);

  
}
function toInt_1216693(f_1216695) {
    var Tmp1;

  var result_1216696 = 0;

    if ((0.0 <= f_1216695)) {
    Tmp1 = (((f_1216695 + 5.0000000000000000e-01))|0);
    }
    else {
    Tmp1 = (((f_1216695 - 5.0000000000000000e-01))|0);
    }
    
    result_1216696 = Tmp1;

  return result_1216696;

}
function toFloat_1216659(i_1216661) {
  var result_1216662 = 0.0;

    result_1216662 = i_1216661;

  return result_1216662;

}
function HEX2F_1555648(x_1555650, y_1555651) {
  var result_1555652 = 0.0;

    result_1555652 = (toFloat_1216659(x_1555650) / toFloat_1216659(y_1555651));

  return result_1555652;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1194653, name: null, trace: [], up: null}, "RangeDefect");

  
}
function HEX5BHEX5D_3485283(s_3485287, x_3485289) {
  var result_3485290 = [];

    var a_3485401 = x_3485289.a;
    var L_3485601 = addInt(subInt(x_3485289.b, a_3485401), 1);
    result_3485290 = nimCopy(null, mnewString(chckRange(L_3485601, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_3485609 = 0;
      var i_12795290 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12795290 < L_3485601)) break L3;
            i_3485609 = i_12795290;
            result_3485290[chckIndx(i_3485609, 0, (result_3485290).length-1)] = s_3485287[chckIndx(addInt(i_3485609, a_3485401), 0, (s_3485287).length-1)];
            i_12795290 = addInt(i_12795290, 1);
          }
      } while(false);
    } while(false);

  return result_3485290;

}
function HEX2EHEX2E_3485220(a_3485225, b_3485227) {
  var result_3485229 = ({a: 0, b: 0});

    nimCopy(result_3485229, {a: a_3485225, b: b_3485227}, NTI2380020);

  return result_3485229;

}
function HEX5BHEX5D_5935068(s_5935072, x_5935074) {
  var result_5935075 = [];

    var a_5935201 = x_5935074.a;
    var L_5935401 = addInt(subInt(subInt((s_5935072).length, x_5935074.b), a_5935201), 1);
    result_5935075 = nimCopy(null, mnewString(chckRange(L_5935401, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_5935409 = 0;
      var i_12795298 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_12795298 < L_5935401)) break L3;
            i_5935409 = i_12795298;
            result_5935075[chckIndx(i_5935409, 0, (result_5935075).length-1)] = s_5935072[chckIndx(addInt(i_5935409, a_5935201), 0, (s_5935072).length-1)];
            i_12795298 = addInt(i_12795298, 1);
          }
      } while(false);
    } while(false);

  return result_5935075;

}
function HEX2EHEX2E_5935001(a_5935006, b_5935008) {
  var result_5935014 = ({a: 0, b: 0});

    nimCopy(result_5935014, {a: a_5935006, b: b_5935008}, NTI5935011);

  return result_5935014;

}
function addEventHandler_11460118(n_11460120, k_11460121, action_11460122, kxi_11460123) {
    function wrapper_11460124(ev_11460126, n_11460127) {
        action_11460122(ev_11460126, n_11460127);
        if (!(kxi_11460123.surpressRedraws)) {
        redraw_11450414(kxi_11460123);
        }
        

      
    }

    addEventListener_10565014(n_11460120, k_11460121, wrapper_11460124);

  
}
function delete_11790124(x_11790129, x_11790129_Idx, i_11790130) {
    x_11790129[x_11790129_Idx].splice(i_11790130, 1);

  
}
function removeSeedCard_11790116(idx_11790118) {
    function HEX3Aanonymous_11790122() {
        delete_11790124(seedCardInfos_11726424, 0, chckRange(idx_11790118, 0, 2147483647));
        if (((seedCardInfos_11726424[0]).length == 0)) {
        viewSelector_11726137(1, false);
        }
        else {
        viewUpdate_11726294();
        }
        

      
    }

  var result_11790121 = null;

    result_11790121 = HEX3Aanonymous_11790122;

  return result_11790121;

}
function seedCard_12070090(cardInfo_12070092, idx_12070093) {
    var Tmp1;
    function HEX3Aanonymous_12175002(ev_12175004, n_12175005) {
        seedCardInfos_11726424[0][chckIndx(idx_12070093, 0, (seedCardInfos_11726424[0]).length-1)].sv = value_10465123(n_12175005);

      
    }

  var result_12070094 = null;

    var tmp_12070095 = tree_10560445(43, []);
    tmp_12070095.class = "ui card seed-card";
    var tmp_12070096 = tree_10560445(43, []);
    tmp_12070096.class = "image";
    var tmp_12070097 = tree_10560445(43, []);
    tmp_12070097.class = "seed-qrcode";
    setAttr_10500105(tmp_12070097, "data-orig", cardInfo_12070092.orig);
    var tmp_12070098 = tree_10560445(84, []);
    setAttr_10500105(tmp_12070098, "width", "188");
    setAttr_10500105(tmp_12070098, "height", "188");
    add_10550072(tmp_12070097, tmp_12070098);
    add_10550072(tmp_12070096, tmp_12070097);
    add_10550072(tmp_12070095, tmp_12070096);
    var tmp_12070099 = tree_10560445(43, []);
    tmp_12070099.class = "content";
    if (!((cardInfo_12070092.tag == null))) {
    var tmp_12070100 = tree_10560445(43, []);
    tmp_12070100.class = "ui tag label mini tag";
    add_10550072(tmp_12070100, text_10560801(cardInfo_12070092.tag));
    add_10550072(tmp_12070099, tmp_12070100);
    }
    
    var tmp_12070101 = tree_10560445(43, []);
    tmp_12070101.class = "header";
    add_10550072(tmp_12070101, text_10560801(translate_11537372("Seed")));
    add_10550072(tmp_12070099, tmp_12070101);
    var tmp_12070102 = tree_10560445(43, []);
    tmp_12070102.class = "meta";
    var tmp_12070103 = tree_10560445(70, []);
    tmp_12070103.class = "date";
    if (!((cardInfo_12070092.gen == null))) {
    Tmp1 = cardInfo_12070092.gen;
    }
    else {
    Tmp1 = translate_11537372("unknown");
    }
    
    add_10550072(tmp_12070103, text_10560801(Tmp1));
    add_10550072(tmp_12070102, tmp_12070103);
    add_10550072(tmp_12070099, tmp_12070102);
    var clen_12095001 = (cardInfo_12070092.seed).length;
    if ((0 < clen_12095001)) {
    var half_12100001 = toInt_1216693(HEX2F_1555648(clen_12095001, 2));
    var seed_12100002 = cstrToNimstr(cardInfo_12070092.seed);
    var seed_upper_12105241 = HEX5BHEX5D_3485283(seed_12100002, HEX2EHEX2E_3485220(0, subInt(half_12100001, 1)));
    var seed_lower_12115035 = HEX5BHEX5D_5935068(seed_12100002, HEX2EHEX2E_5935001(half_12100001, 1));
    seed_upper_12105241 = nimCopy(null, (HEX5BHEX5D_3485283(seed_upper_12105241, HEX2EHEX2E_3485220(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_upper_12105241, HEX2EHEX2E_3485220(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_upper_12105241, HEX2EHEX2E_3485220(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_upper_12105241, HEX2EHEX2E_3485220(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_upper_12105241, HEX2EHEX2E_3485220(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_5935068(seed_upper_12105241, HEX2EHEX2E_5935001(20, 1)) || []), NTI1188013);
    seed_lower_12115035 = nimCopy(null, (HEX5BHEX5D_3485283(seed_lower_12115035, HEX2EHEX2E_3485220(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_lower_12115035, HEX2EHEX2E_3485220(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_lower_12115035, HEX2EHEX2E_3485220(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_lower_12115035, HEX2EHEX2E_3485220(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_3485283(seed_lower_12115035, HEX2EHEX2E_3485220(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_5935068(seed_lower_12115035, HEX2EHEX2E_5935001(20, 1)) || []), NTI1188013);
    var tmp_12070104 = tree_10560445(43, []);
    tmp_12070104.class = "seed-body";
    var tmp_12070105 = tree_10560445(43, []);
    tmp_12070105.class = "seed";
    add_10550072(tmp_12070105, text_10560582(seed_upper_12105241));
    add_10550072(tmp_12070104, tmp_12070105);
    var tmp_12070106 = tree_10560445(43, []);
    tmp_12070106.class = "seed";
    add_10550072(tmp_12070106, text_10560582(seed_lower_12115035));
    add_10550072(tmp_12070104, tmp_12070106);
    add_10550072(tmp_12070099, tmp_12070104);
    }
    else {
      var tmp_12070107 = tree_10560445(43, []);
      tmp_12070107.class = "seed-body";
      clen_12095001 = (cardInfo_12070092.orig).length;
      if ((20 < clen_12095001)) {
      var half_12140001 = toInt_1216693(HEX2F_1555648(clen_12095001, 2));
      var orig_12140002 = cstrToNimstr(cardInfo_12070092.orig);
      var tmp_12070108 = tree_10560445(43, []);
      tmp_12070108.class = "seed";
      add_10550072(tmp_12070108, text_10560582(HEX5BHEX5D_3485283(orig_12140002, HEX2EHEX2E_3485220(0, subInt(half_12140001, 1)))));
      add_10550072(tmp_12070107, tmp_12070108);
      var tmp_12070109 = tree_10560445(43, []);
      tmp_12070109.class = "seed";
      add_10550072(tmp_12070109, text_10560582(HEX5BHEX5D_5935068(orig_12140002, HEX2EHEX2E_5935001(half_12140001, 1))));
      add_10550072(tmp_12070107, tmp_12070109);
      }
      else {
        var tmp_12070110 = tree_10560445(43, []);
        tmp_12070110.class = "seed";
        add_10550072(tmp_12070110, text_10560801(cardInfo_12070092.orig));
        add_10550072(tmp_12070107, tmp_12070110);
      }
      
      add_10550072(tmp_12070099, tmp_12070107);
    }
    
    add_10550072(tmp_12070095, tmp_12070099);
    var tmp_12070111 = tree_10560445(43, []);
    tmp_12070111.class = "extra content";
    var tmp_12070112 = tree_10560445(43, []);
    tmp_12070112.class = "inline field";
    var tmp_12070113 = tree_10560445(43, []);
    tmp_12070113.class = "vector-label";
    add_10550072(tmp_12070113, text_10560801(translate_11537372("Seed Vector:")));
    add_10550072(tmp_12070112, tmp_12070113);
    var tmp_12070114 = tree_10560445(43, []);
    tmp_12070114.class = "ui mini input vector-input";
    var tmp_12070115 = tree_10560445(105, []);
    setAttr_10500105(tmp_12070115, "type", "text");
    setAttr_10500105(tmp_12070115, "placeholder", translate_11537372("Type your seed vector"));
    setAttr_10500105(tmp_12070115, "spellcheck", "false");
    addEventHandler_11460118(tmp_12070115, 3, HEX3Aanonymous_12175002, kxi_10897284[0]);
    add_10550072(tmp_12070114, tmp_12070115);
    add_10550072(tmp_12070112, tmp_12070114);
    add_10550072(tmp_12070111, tmp_12070112);
    add_10550072(tmp_12070095, tmp_12070111);
    var tmp_12070116 = tree_10560445(43, []);
    tmp_12070116.class = "bt-seed-del";
    var tmp_12070117 = tree_10560445(106, []);
    tmp_12070117.class = "circular ui icon mini button";
    addEventHandler_11460154(tmp_12070117, 0, removeSeedCard_11790116(idx_12070093), kxi_10897284[0]);
    var tmp_12070118 = tree_10560445(61, []);
    tmp_12070118.class = "close icon";
    add_10550072(tmp_12070117, tmp_12070118);
    add_10550072(tmp_12070116, tmp_12070117);
    add_10550072(tmp_12070095, tmp_12070116);
    result_12070094 = tmp_12070095;

  return result_12070094;

}
function substr_1571022(s_1571024, first_1571025, last_1571026) {
  var result_1571027 = [];

    var first_1571028 = nimMax(first_1571025, 0);
    var L_1571030 = nimMax(addInt(subInt(nimMin(last_1571026, ((s_1571024).length-1)), first_1571028), 1), 0);
    result_1571027 = nimCopy(null, mnewString(chckRange(L_1571030, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_1571039 = 0;
      var colontmp__10461693 = 0;
      colontmp__10461693 = subInt(L_1571030, 1);
      var res_10461694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_10461694 <= colontmp__10461693)) break L3;
            i_1571039 = res_10461694;
            result_1571027[chckIndx(i_1571039, 0, (result_1571027).length-1)] = s_1571024[chckIndx(addInt(i_1571039, first_1571028), 0, (s_1571024).length-1)];
            res_10461694 = addInt(res_10461694, 1);
          }
      } while(false);
    } while(false);

  return result_1571027;

}
function nsuSplitChar(s_9720034, sep_9720035, maxsplit_9720036) {
  var result_9720038 = [];

    result_9720038 = nimCopy(null, [], NTI9725015);
    L1: do {
      var xHEX60gensym59_9725016 = [];
      var lastHEX60gensym26_12795328 = 0;
      var splitsHEX60gensym26_12795329 = maxsplit_9720036;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym26_12795328 <= (s_9720034).length)) break L3;
            var firstHEX60gensym26_12795331 = lastHEX60gensym26_12795328;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym26_12795328 < (s_9720034).length) && !((s_9720034[chckIndx(lastHEX60gensym26_12795328, 0, (s_9720034).length-1)] == sep_9720035)))) break L5;
                  lastHEX60gensym26_12795328 = addInt(lastHEX60gensym26_12795328, 1);
                }
            } while(false);
            if ((splitsHEX60gensym26_12795329 == 0)) {
            lastHEX60gensym26_12795328 = (s_9720034).length;
            }
            
            xHEX60gensym59_9725016 = substr_1571022(s_9720034, firstHEX60gensym26_12795331, subInt(lastHEX60gensym26_12795328, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym59_9725016, NTI1188013);
            result_9720038.push(Tmp6);;
            if ((splitsHEX60gensym26_12795329 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym26_12795329 = subInt(splitsHEX60gensym26_12795329, 1);
            lastHEX60gensym26_12795328 = addInt(lastHEX60gensym26_12795328, 1);
          }
      } while(false);
    } while(false);

  return result_9720038;

}
function new_11800005() {
  var result_11800009 = null;

  BeforeRet: do {
    var r_11800201 = null;
    r_11800201 = ({seed: null, gen: null, tag: null, orig: null, sv: null});
    result_11800009 = r_11800201;
    break BeforeRet;
  } while (false);

  return result_11800009;

}
function nsuStartsWith(s_10065016, prefix_10065017) {
            var Tmp3;

  var result_10065018 = false;

  BeforeRet: do {
    var i_10065020 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          if (((prefix_10065017).length <= i_10065020)) {
          result_10065018 = true;
          break BeforeRet;
          }
          
            if (((s_10065016).length <= i_10065020)) Tmp3 = true; else {              Tmp3 = !((s_10065016[chckIndx(i_10065020, 0, (s_10065016).length-1)] == prefix_10065017[chckIndx(i_10065020, 0, (prefix_10065017).length-1)]));            }          if (Tmp3) {
          result_10065018 = false;
          break BeforeRet;
          }
          
          i_10065020 = addInt(i_10065020, 1);
        }
    } while(false);
  } while (false);

  return result_10065018;

}
function cbSeedQrDone_11795504(err_11795506, data_11795507) {
                var Tmp7;
                var Tmp8;

    if (!((err_11795506 == 0))) {
          Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
      qrReader.hide();
    
    }
    else {
      var escape_data_11800001 = escape_html(data_11795507);
      var sdata_11800002 = cstrToNimstr(escape_data_11800001);
      var ds_11800003 = nsuSplitChar(sdata_11800002, 44, -1);
      var seedCardInfo_11800236 = new_11800005();
      L1: do {
        var d_11810214 = null;
        var d_11810214_Idx = 0;
        var i_12795317 = 0;
        var L_12795318 = (ds_11800003).length;
        L2: do {
            L3: while (true) {
            if (!(i_12795317 < L_12795318)) break L3;
              d_11810214 = ds_11800003; d_11810214_Idx = chckIndx(i_12795317, 0, (ds_11800003).length-1);
              if (nsuStartsWith(d_11810214[d_11810214_Idx], makeNimstrLit("seed:"))) {
              seedCardInfo_11800236.seed = toJSStr(HEX5BHEX5D_5935068(d_11810214[d_11810214_Idx], HEX2EHEX2E_5935001(5, 1)));
              }
              else {
              if (nsuStartsWith(d_11810214[d_11810214_Idx], makeNimstrLit("tag:"))) {
              seedCardInfo_11800236.tag = toJSStr(HEX5BHEX5D_5935068(d_11810214[d_11810214_Idx], HEX2EHEX2E_5935001(4, 1)));
              }
              else {
              if (nsuStartsWith(d_11810214[d_11810214_Idx], makeNimstrLit("gen:"))) {
              seedCardInfo_11800236.gen = toJSStr(HEX5BHEX5D_5935068(d_11810214[d_11810214_Idx], HEX2EHEX2E_5935001(4, 1)));
              }
              }}
              i_12795317 = addInt(i_12795317, 1);
              if (!(((ds_11800003).length == L_12795318))) {
              failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      seedCardInfo_11800236.orig = data_11795507;
            var seed_valid = false;
      if(seedCardInfo_11800236.seed) {
        var dec = base58.dec(seedCardInfo_11800236.seed);
        if(dec && dec.length == 32) {
          seed_valid = true;
        }
      }
      if(!seed_valid) {
        Notify.show(__t('Warning'), __t('Unsupported seed card was scanned.'), Notify.msgtype.warning);
      }

    
      var dupcheck_11840036 = false;
      L4: do {
        var s_11850214 = null;
        var s_11850214_Idx = 0;
        var i_12795322 = 0;
        var L_12795323 = (seedCardInfos_11726424[0]).length;
        L5: do {
            L6: while (true) {
            if (!(i_12795322 < L_12795323)) break L6;
              s_11850214 = seedCardInfos_11726424[0]; s_11850214_Idx = chckIndx(i_12795322, 0, (seedCardInfos_11726424[0]).length-1);
                if (!(s_11850214[s_11850214_Idx].seed == null)) Tmp7 = false; else {                  Tmp7 = (seedCardInfo_11800236.seed == null);                }              if (Tmp7) {
              if ((s_11850214[s_11850214_Idx].orig == seedCardInfo_11800236.orig)) {
              dupcheck_11840036 = true;
              break L4;
              }
              
              }
              else {
                if ((s_11850214[s_11850214_Idx].seed == seedCardInfo_11800236.seed)) Tmp8 = true; else {                  Tmp8 = (s_11850214[s_11850214_Idx].tag == seedCardInfo_11800236.tag);                }              if (Tmp8) {
              dupcheck_11840036 = true;
              break L4;
              }
              }
              i_12795322 = addInt(i_12795322, 1);
              if (!(((seedCardInfos_11726424[0]).length == L_12795323))) {
              failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while(false);
      } while(false);
      if (dupcheck_11840036) {
              Notify.show(__t('Error'), __t('The seed card has already been scanned.'), Notify.msgtype.error);
      
      }
      else {
      seedCardInfos_11726424[0].push(seedCardInfo_11800236);;
      }
      
            qrReader.hide();
    
      viewSelector_11726137(2, false);
    }
    

  
}
function showSeedQr_11855014() {
    function HEX3Aanonymous_11855019() {
              qrReader.show(cbSeedQrDone_11795504);
    

      
    }

  var result_11855018 = null;

    result_11855018 = HEX3Aanonymous_11855019;

  return result_11855018;

}
function camChange_11855098() {
    function HEX3Aanonymous_11855103() {
              $('.camtools button').blur();
      qrReader.next();
    

      
    }

  var result_11855102 = null;

    result_11855102 = HEX3Aanonymous_11855103;

  return result_11855102;

}
function camClose_11855131() {
    function HEX3Aanonymous_11855136() {
              qrReader.hide();
    

      
    }

  var result_11855135 = null;

    result_11855135 = HEX3Aanonymous_11855136;

  return result_11855135;

}
function changeLanguage_11970029(ev_11970031, n_11970032) {
    var langId_11970033 = value_10465123(n_11970032);
    if ((langId_11970033 == 0)) {
    bip39_wordlist_11740004[0] = bip39_11730004[0].wordlists.english;
    wl_select_11790006[0] = nimCopy(null, wl_english_11790005[0], NTI11765006);
    wl_select_id_11790008[0] = 0;
    }
    else {
    if ((langId_11970033 == 1)) {
    bip39_wordlist_11740004[0] = bip39_11730004[0].wordlists.japanese;
    wl_select_11790006[0] = nimCopy(null, wl_japanese_11765005[0], NTI11740005);
    wl_select_id_11790008[0] = 1;
    }
    }
    autocompleteWords_11726443[0] = nimCopy(null, [], NTI11990018);
    chklist_11726451[0] = nimCopy(null, [], NTI11990033);
    viewUpdate_11726294();

  
}
function checkMnemonic_11855199(ev_11855201, n_11855202) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

    var s_11855203 = value_10465123(n_11855202);
    if (!((s_11855203 == prevCheckWord_11726452[0]))) {
    chklist_11726451[0] = nimCopy(null, [], NTI11860015);
    }
    
    prevCheckWord_11726452[0] = s_11855203;
      if (!!((s_11855203 == null))) Tmp1 = false; else {        Tmp1 = (0 < (s_11855203).length);      }    if (Tmp1) {
      if (!mnemonicFulfill_11726086[0]) Tmp2 = false; else {        Tmp2 = !((editingWords_11726425[0] == s_11855203));      }    if (Tmp2) {
    mnemonicFulfill_11726086[0] = false;
    viewSelector_11726137(3, false);
    }
    
    editingWords_11726425[0] = s_11855203;
    var cur_11890004 = document.getElementById((n_11855202.id)).selectionStart;
          s_11855203 = s_11855203.substr(0, cur_11890004).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
    
      if (!!((s_11855203 == null))) Tmp3 = false; else {        Tmp3 = (0 < (s_11855203).length);      }    if (Tmp3) {
    var tmplist_11895017 = [];
    L4: do {
      var word_11895018 = null;
      var v_12795397 = null;
      for (var k in bip39_wordlist_11740004[0]) {
        if (!bip39_wordlist_11740004[0].hasOwnProperty(k)) continue;
        v_12795397=bip39_wordlist_11740004[0][k];
      word_11895018 = v_12795397;
      var w_11895019 = word_11895018;
      if (w_11895019.startsWith(s_11855203)) {
      tmplist_11895017.push(w_11895019);;
      }
      
      }
    } while(false);
    autocompleteWords_11726443[0] = nimCopy(null, tmplist_11895017, NTI11895001);
    }
    else {
      autocompleteWords_11726443[0] = nimCopy(null, [], NTI11895042);
    }
    
    }
    else {
      autocompleteWords_11726443[0] = nimCopy(null, [], NTI11895057);
    }
    
    viewUpdate_11726294();

  
}
function getVNodeById_11010104(id_11010106, kxi_11010107) {
  var result_11010108 = null;

    if (kxi_11010107.byId.hasOwnProperty(id_11010106)) {
    result_11010108 = kxi_11010107.byId[id_11010106];
    }
    

  return result_11010108;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI1194635, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function confirmMnemonic_11945067(input_id_11945069, advance_11945070) {
    function HEX3Aanonymous_11945074() {
          var Tmp1;
          var Tmp5;
          var Tmp6;

        confirm_mnemonic_advanced_11945053[0] = advance_11945070;
        var x_11945076 = getVNodeById_11010104(input_id_11945069, kxi_10897284[0]);
        var s_11945077 = value_10465123(x_11945076);
          if (!!((s_11945077 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_11945077).length);          }        if (Tmp1) {
        var words_11950002 = [];
                inputWords_11726426[0] = s_11945077.replace(/[ 　\n\r]+/g, ' ').trim();
        words_11950002 = inputWords_11726426[0].split(' ');
      
        chklist_11726451[0] = nimCopy(null, [], NTI11950017);
        var idx_11950018 = 0;
        var allvalid_11950019 = true;
        L2: do {
          var word_11960214 = null;
          var word_11960214_Idx = 0;
          var i_12795402 = 0;
          var L_12795403 = (words_11950002).length;
          L3: do {
              L4: while (true) {
              if (!(i_12795402 < L_12795403)) break L4;
                word_11960214 = words_11950002; word_11960214_Idx = chckIndx(i_12795402, 0, (words_11950002).length-1);
                if (wl_select_11790006[0].includes(word_11960214[word_11960214_Idx])) {
                if (advance_11945070) {
                var levs_11960220 = nimCopy(null, levens_one((word_11960214[word_11960214_Idx]), bip39_wordlist_11740004[0]), NTI11960215);
                chklist_11726451[0].push({Field0: idx_11950018, Field1: word_11960214[word_11960214_Idx], Field2: true, Field3: nimCopy(null, levs_11960220, NTI11726449)});;
                }
                else {
                chklist_11726451[0].push({Field0: idx_11950018, Field1: word_11960214[word_11960214_Idx], Field2: true, Field3: []});;
                }
                
                }
                else {
                  var levs_11960260 = nimCopy(null, levens((word_11960214[word_11960214_Idx]), bip39_wordlist_11740004[0]), NTI11960255);
                  chklist_11726451[0].push({Field0: idx_11950018, Field1: word_11960214[word_11960214_Idx], Field2: false, Field3: nimCopy(null, levs_11960260, NTI11726449)});;
                  allvalid_11950019 = false;
                }
                
                idx_11950018 = addInt(idx_11950018, 1);
                i_12795402 = addInt(i_12795402, 1);
                if (!(((words_11950002).length == L_12795403))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
          if (!allvalid_11950019) Tmp6 = false; else {            Tmp6 = (12 <= idx_11950018);          }          if (!Tmp6) Tmp5 = false; else {            Tmp5 = (modInt(idx_11950018, 3) == 0);          }        if (Tmp5) {
                  var bip39 = coinlibs.bip39;
          if(bip39.validateMnemonic(inputWords_11726426[0], bip39_wordlist_11740004[0])) {
            mnemonicFulfill_11726086[0] = true
          } else {
            Notify.show(__t('Warning'), __t('There are no misspellings, but some words seem to be wrong.') + (advance_11945070 ? '' : ' ' + __t('Try to use [Advanced Check]')), Notify.msgtype.warning);
          }
        
        if (mnemonicFulfill_11726086[0]) {
        viewSelector_11726137(4, false);
        }
        
        }
        
        }
        else {
          chklist_11726451[0] = nimCopy(null, [], NTI11965015);
        }
        
        autocompleteWords_11726443[0] = nimCopy(null, [], NTI11965030);
        viewUpdate_11726294();

      
    }

  var result_11945073 = null;

    result_11945073 = HEX3Aanonymous_11945074;

  return result_11945073;

}
function setInputText_11460402(n_11460404, s_11460405) {
    n_11460404.text = s_11460405;
    if (!((n_11460404.dom == null))) {
    n_11460404.dom.value = s_11460405;
    }
    

  
}
function selectWord_11895071(input_id_11895073, word_11895074, whole_replace_11895075) {
    function HEX3Aanonymous_11895079() {
          var Tmp1;

        var x_11895081 = getVNodeById_11010104(input_id_11895073, kxi_10897284[0]);
        var s_11895082 = value_10465123(x_11895081);
          if (!!((s_11895082 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_11895082).length);          }        if (Tmp1) {
        var input_elm_11915005 = document.getElementById((input_id_11895073));
        var cur_11920004 = input_elm_11915005.selectionStart;
        var newcur_11920005 = cur_11920004;
        if (whole_replace_11895075) {
                  var t = s_11895082.substr(0, cur_11920004).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            s_11895082 = s_11895082.substr(0, cur_11920004 - t.length) + word_11895074;
            newcur_11920005 = s_11895082.length;
          }
        
        setInputText_11460402(x_11895081, s_11895082);
        editingWords_11726425[0] = s_11895082;
        input_elm_11915005.focus();
        input_elm_11915005.selectionStart = newcur_11920005;
        input_elm_11915005.selectionEnd = newcur_11920005;
        }
        else {
                    var t = s_11895082.substr(0, cur_11920004).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            var tail = s_11895082.substr(cur_11920004) || '';
            s_11895082 = s_11895082.substr(0, cur_11920004 - t.length) + word_11895074 + tail;
            newcur_11920005 = s_11895082.length - tail.length;
          }
        
          setInputText_11460402(x_11895081, s_11895082);
          editingWords_11726425[0] = s_11895082;
          input_elm_11915005.focus();
          input_elm_11915005.selectionEnd = newcur_11920005;
        }
        
        }
        
        autocompleteWords_11726443[0] = nimCopy(null, [], NTI11945026);
        viewUpdate_11726294();

      
    }

  var result_11895078 = null;

    result_11895078 = HEX3Aanonymous_11895079;

  return result_11895078;

}
function fixWord_11965087(input_id_11965089, idx_11965090, word_11965091) {
    function HEX3Aanonymous_11965095() {
          var Tmp1;

        var x_11965097 = getVNodeById_11010104(input_id_11965089, kxi_10897284[0]);
        var s_11965098 = value_10465123(x_11965097);
          if (!!((s_11965098 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_11965098).length);          }        if (Tmp1) {
        var ret_11970001 = null;
                ret_11970001 = "";
        var count = 0;
        var find = false;
        var skip = false;
        for(var t in s_11965098) {
          if(/[ 　\n\r]/.test(s_11965098[t])) {
            ret_11970001 += s_11965098[t];
            if(find) {
              count++;
            }
            find = false;
            skip = false;
          } else {
            find = true;
            if(idx_11965090 == count && skip == false) {
              ret_11970001 += word_11965091;
              skip = true;
            } else {
              if(!skip) {
                ret_11970001 += s_11965098[t];
              }
            }
          }
        }
      
        setInputText_11460402(x_11965097, ret_11970001);
        editingWords_11726425[0] = ret_11970001;
        confirmMnemonic_11945067(input_id_11965089, confirm_mnemonic_advanced_11945053[0])();
        }
        

      
    }

  var result_11965094 = null;

    result_11965094 = HEX3Aanonymous_11965095;

  return result_11965094;

}
function mnemonicEditor_11990047() {
  var result_11990049 = null;

    var input_id_11990050 = "minput";
    var tmp_11990087 = tree_10560445(43, []);
    var tmp_11990088 = tree_10560445(43, []);
    tmp_11990088.class = "ui clearing segment medit-seg";
    var tmp_11990094 = tree_10560445(43, []);
    tmp_11990094.class = "ui form";
    var tmp_11990095 = tree_10560445(43, []);
    tmp_11990095.class = "field";
    var tmp_11990096 = tree_10560445(104, []);
    add_10550072(tmp_11990096, text_10560801(translate_11537372("Select mnemonic language")));
    add_10550072(tmp_11990095, tmp_11990096);
    var tmp_11990097 = tree_10560445(43, []);
    tmp_11990097.class = "ui selection dropdown";
    var tmp_11990098 = tree_10560445(105, []);
    setAttr_10500105(tmp_11990098, "type", "hidden");
    setAttr_10500105(tmp_11990098, "name", "mnemonic-language");
    valueHEX3D_10465140(tmp_11990098, "1");
    setAttr_10500105(tmp_11990098, "value", "1");
    addEventHandler_11460118(tmp_11990098, 8, changeLanguage_11970029, kxi_10897284[0]);
    add_10550072(tmp_11990097, tmp_11990098);
    var tmp_11990099 = tree_10560445(61, []);
    tmp_11990099.class = "dropdown icon";
    add_10550072(tmp_11990097, tmp_11990099);
    var tmp_11990100 = tree_10560445(43, []);
    tmp_11990100.class = "default text";
    add_10550072(tmp_11990100, text_10560801(translate_11537372("Mnemonic Language")));
    add_10550072(tmp_11990097, tmp_11990100);
    var tmp_11990101 = tree_10560445(43, []);
    tmp_11990101.class = "menu";
    var tmp_11990102 = tree_10560445(43, []);
    tmp_11990102.class = "item";
    setAttr_10500105(tmp_11990102, "data-value", "1");
    add_10550072(tmp_11990102, text_10560801(translate_11537372("Japanese")));
    add_10550072(tmp_11990101, tmp_11990102);
    var tmp_11990103 = tree_10560445(43, []);
    tmp_11990103.class = "item";
    setAttr_10500105(tmp_11990103, "data-value", "0");
    add_10550072(tmp_11990103, text_10560801(translate_11537372("English")));
    add_10550072(tmp_11990101, tmp_11990103);
    add_10550072(tmp_11990097, tmp_11990101);
    add_10550072(tmp_11990095, tmp_11990097);
    add_10550072(tmp_11990094, tmp_11990095);
    var tmp_11990104 = tree_10560445(43, []);
    tmp_11990104.class = "field minput-field";
    var tmp_11990105 = tree_10560445(104, []);
    add_10550072(tmp_11990105, text_10560801(translate_11537372("Import your mnemonic you already have")));
    add_10550072(tmp_11990104, tmp_11990105);
    var tmp_11990106 = tree_10560445(111, []);
    tmp_11990106.id = input_id_11990050;
    valueHEX3D_10465140(tmp_11990106, editingWords_11726425[0]);
    setAttr_10500105(tmp_11990106, "value", editingWords_11726425[0]);
    addEventHandler_11460118(tmp_11990106, 3, checkMnemonic_11855199, kxi_10897284[0]);
    addEventHandler_11460118(tmp_11990106, 16, checkMnemonic_11855199, kxi_10897284[0]);
    setAttr_10500105(tmp_11990106, "spellcheck", "false");
    add_10550072(tmp_11990104, tmp_11990106);
    add_10550072(tmp_11990094, tmp_11990104);
    add_10550072(tmp_11990088, tmp_11990094);
    var tmp_11990107 = tree_10560445(106, []);
    tmp_11990107.class = "ui right floated primary button";
    addEventHandler_11460154(tmp_11990107, 0, confirmMnemonic_11945067(input_id_11990050, false), kxi_10897284[0]);
    add_10550072(tmp_11990107, text_10560801(translate_11537372("Check")));
    add_10550072(tmp_11990088, tmp_11990107);
    var tmp_11990108 = tree_10560445(106, []);
    tmp_11990108.class = "ui right floated default button";
    addEventHandler_11460154(tmp_11990108, 0, confirmMnemonic_11945067(input_id_11990050, true), kxi_10897284[0]);
    add_10550072(tmp_11990108, text_10560801(translate_11537372("Advanced Check")));
    add_10550072(tmp_11990088, tmp_11990108);
    add_10550072(tmp_11990087, tmp_11990088);
    var tmp_11990109 = tree_10560445(43, []);
    tmp_11990109.class = "medit-autocomp";
    L1: do {
      var word_12065012 = null;
      var word_12065012_Idx = 0;
      var i_12795368 = 0;
      var L_12795369 = (autocompleteWords_11726443[0]).length;
      L2: do {
          L3: while (true) {
          if (!(i_12795368 < L_12795369)) break L3;
            word_12065012 = autocompleteWords_11726443[0]; word_12065012_Idx = chckIndx(i_12795368, 0, (autocompleteWords_11726443[0]).length-1);
            var tmp_11990110 = tree_10560445(106, []);
            tmp_11990110.class = "ui mini teal label";
            addEventHandler_11460154(tmp_11990110, 0, selectWord_11895071(input_id_11990050, word_12065012[word_12065012_Idx], true), kxi_10897284[0]);
            add_10550072(tmp_11990110, text_10560801(word_12065012[word_12065012_Idx]));
            add_10550072(tmp_11990109, tmp_11990110);
            i_12795368 = addInt(i_12795368, 1);
            if (!(((autocompleteWords_11726443[0]).length == L_12795369))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L4: do {
      var i_12065035 = 0;
      var colontmp__12795388 = 0;
      colontmp__12795388 = ((chklist_11726451[0]).length-1);
      var res_12795389 = 0;
      L5: do {
          L6: while (true) {
          if (!(res_12795389 <= colontmp__12795388)) break L6;
            i_12065035 = res_12795389;
            if (chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field2) {
            var tmp_11990111 = tree_10560445(106, []);
            tmp_11990111.class = "ui mini green label";
            var tmp_11990112 = tree_10560445(61, []);
            tmp_11990112.class = "check circle icon";
            add_10550072(tmp_11990112, text_10560801((" " + chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field1)));
            add_10550072(tmp_11990111, tmp_11990112);
            L7: do {
              var lev_12065051 = null;
              var lev_12065051_Idx = 0;
              var colontmp__12795376 = [];
              colontmp__12795376 = chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field3;
              var i_12795377 = 0;
              var L_12795378 = (colontmp__12795376).length;
              L8: do {
                  L9: while (true) {
                  if (!(i_12795377 < L_12795378)) break L9;
                    lev_12065051 = colontmp__12795376; lev_12065051_Idx = chckIndx(i_12795377, 0, (colontmp__12795376).length-1);
                    if (!((chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field1 == lev_12065051[lev_12065051_Idx]))) {
                    var tmp_11990113 = tree_10560445(106, []);
                    tmp_11990113.class = "ui mini blue basic label";
                    addEventHandler_11460154(tmp_11990113, 0, fixWord_11965087(input_id_11990050, chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field0, lev_12065051[lev_12065051_Idx]), kxi_10897284[0]);
                    add_10550072(tmp_11990113, text_10560801(lev_12065051[lev_12065051_Idx]));
                    add_10550072(tmp_11990111, tmp_11990113);
                    }
                    
                    i_12795377 = addInt(i_12795377, 1);
                    if (!(((colontmp__12795376).length == L_12795378))) {
                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            add_10550072(tmp_11990109, tmp_11990111);
            }
            else {
              var tmp_11990114 = tree_10560445(106, []);
              tmp_11990114.class = "ui mini pink label";
              var tmp_11990115 = tree_10560445(61, []);
              tmp_11990115.class = "x icon";
              add_10550072(tmp_11990115, text_10560801((" " + chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field1)));
              add_10550072(tmp_11990114, tmp_11990115);
              L10: do {
                var lev_12070021 = null;
                var lev_12070021_Idx = 0;
                var colontmp__12795384 = [];
                colontmp__12795384 = chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field3;
                var i_12795385 = 0;
                var L_12795386 = (colontmp__12795384).length;
                L11: do {
                    L12: while (true) {
                    if (!(i_12795385 < L_12795386)) break L12;
                      lev_12070021 = colontmp__12795384; lev_12070021_Idx = chckIndx(i_12795385, 0, (colontmp__12795384).length-1);
                      var tmp_11990116 = tree_10560445(106, []);
                      tmp_11990116.class = "ui mini blue basic label";
                      addEventHandler_11460154(tmp_11990116, 0, fixWord_11965087(input_id_11990050, chklist_11726451[0][chckIndx(i_12065035, 0, (chklist_11726451[0]).length-1)].Field0, lev_12070021[lev_12070021_Idx]), kxi_10897284[0]);
                      add_10550072(tmp_11990116, text_10560801(lev_12070021[lev_12070021_Idx]));
                      add_10550072(tmp_11990114, tmp_11990116);
                      i_12795385 = addInt(i_12795385, 1);
                      if (!(((colontmp__12795384).length == L_12795386))) {
                      failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while(false);
              } while(false);
              add_10550072(tmp_11990109, tmp_11990114);
            }
            
            res_12795389 = addInt(res_12795389, 1);
          }
      } while(false);
    } while(false);
    add_10550072(tmp_11990087, tmp_11990109);
    result_11990049 = tmp_11990087;

  return result_11990049;

}
function protectSelector_11726374(protectType_11726376) {
    function HEX3Aanonymous_11726380() {
              qrReader.hide();
    
        currentProtectType_11726056[0] = protectType_11726376;
        showPage1_11726082[0] = false;
        showPage2_11726083[0] = true;
        if ((currentProtectType_11726056[0] == 0)) {
                $('#keyselector').removeClass('grey').addClass('olive');
        $('#passselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#passselector').removeClass('grey').addClass('olive');
        $('#keyselector').removeClass('olive').addClass('grey');
      
        }
        
        viewUpdate_11726294();

      
    }

  var result_11726379 = null;

    result_11726379 = HEX3Aanonymous_11726380;

  return result_11726379;

}
function confirmKeyCard_11855080(ev_11855082, n_11855083) {
    var ret_lock_11855084 = false;
        var wallet = pastel.wallet;
    ret_lock_11855084 = wallet.lockShieldedKeys(keyCardVal_11850251[0], 1, true);
  
    if (ret_lock_11855084) {
    keyCardFulfill_11726087[0] = true;
    showPage3_11726084[0] = true;
    viewUpdate_11726294();
    }
    else {
            Notify.show(__t('Error'), __t('Failed to lock your wallet with the key card.'), Notify.msgtype.error);
    
    }
    

  
}
function cbKeyQrDone_11850265(err_11850267, data_11850268) {
    if (!((err_11850267 == 0))) {
          Notify.show(__t('Error'), __t('Camera error. Please connect the camera and reload the page.'), Notify.msgtype.error);
      qrReader.hide();
    
    }
    else {
      keyCardVal_11850251[0] = data_11850268;
            qrReader.hide();
    
      viewSelector_11726137(8, false);
    }
    

  
}
function showKeyQr_11855047() {
    function HEX3Aanonymous_11855052() {
        keyCardFulfill_11726087[0] = false;
        showPage3_11726084[0] = false;
              qrReader.show(cbKeyQrDone_11850265);
    

      
    }

  var result_11855051 = null;

    result_11855051 = HEX3Aanonymous_11855052;

  return result_11855051;

}
function changePassphrase_12175047(ev_12175049, n_12175050) {
    if (!((passPhrase_11726453[0] == value_10465123(n_12175050)))) {
    passphraseFulfill_11726088[0] = false;
    showPage3_11726084[0] = false;
    passPhrase_11726453[0] = value_10465123(n_12175050);
    viewUpdate_11726294();
    }
    

  
}
function confirmPassphrase_12180014(ev_12180016, n_12180017) {
    var ret_lock_12180018 = false;
    var passlen_12180020 = 0;
        var val = $('input[name="input-passphrase"]').val();
    if(val) {
      passlen_12180020 = val.length;
      $('input[name="input-passphrase"]').blur();
      var wallet = pastel.wallet;
      ret_lock_12180018 = wallet.lockShieldedKeys($('input[name="input-passphrase"]').val(), 2, true);
    }
  
    if ((0 < passlen_12180020)) {
    if (ret_lock_12180018) {
    passphraseFulfill_11726088[0] = true;
    showPage3_11726084[0] = true;
    viewUpdate_11726294();
    }
    else {
              Notify.show(__t('Error'), __t('Failed to lock your wallet with the passphrase.'), Notify.msgtype.error);
      
    }
    
    }
    

  
}
function passphraseEditor_12185014() {
  var result_12185016 = null;

    var tmp_12185017 = tree_10560445(43, []);
    var tmp_12185018 = tree_10560445(43, []);
    tmp_12185018.class = "ui clearing segment passphrase-seg";
    var tmp_12185019 = tree_10560445(43, []);
    tmp_12185019.class = "ui inverted segment";
    var tmp_12185020 = tree_10560445(24, []);
    tmp_12185020.class = "ui grey inverted header center";
    add_10550072(tmp_12185020, text_10560801(translate_11537372("Input passphrase")));
    add_10550072(tmp_12185019, tmp_12185020);
    var tmp_12185021 = tree_10560445(43, []);
    tmp_12185021.class = "ui form";
    var tmp_12185022 = tree_10560445(43, []);
    tmp_12185022.class = "field";
    var tmp_12185023 = tree_10560445(105, []);
    tmp_12185023.class = "center";
    setAttr_10500105(tmp_12185023, "type", "password");
    setAttr_10500105(tmp_12185023, "name", "input-passphrase");
    valueHEX3D_10465140(tmp_12185023, passPhrase_11726453[0]);
    setAttr_10500105(tmp_12185023, "value", passPhrase_11726453[0]);
    setAttr_10500105(tmp_12185023, "placeholder", translate_11537372("Passphrase"));
    addEventHandler_11460118(tmp_12185023, 3, changePassphrase_12175047, kxi_10897284[0]);
    addEventHandler_11460118(tmp_12185023, 29, confirmPassphrase_12180014, kxi_10897284[0]);
    setAttr_10500105(tmp_12185023, "spellcheck", "false");
    add_10550072(tmp_12185022, tmp_12185023);
    add_10550072(tmp_12185021, tmp_12185022);
    add_10550072(tmp_12185019, tmp_12185021);
    add_10550072(tmp_12185018, tmp_12185019);
    var tmp_12185024 = tree_10560445(106, []);
    tmp_12185024.class = "ui right floated olive button";
    addEventHandler_11460118(tmp_12185024, 0, confirmPassphrase_12180014, kxi_10897284[0]);
    add_10550072(tmp_12185024, text_10560801(translate_11537372("Apply")));
    add_10550072(tmp_12185018, tmp_12185024);
    add_10550072(tmp_12185017, tmp_12185018);
    result_12185016 = tmp_12185017;

  return result_12185016;

}
function btnSend_12220126() {
    function HEX3Aanonymous_12220131() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 1) ? 0 : 1);
      document.getElementById('btn-send').blur();
    

      
    }

  var result_12220130 = null;

    result_12220130 = HEX3Aanonymous_12220131;

  return result_12220130;

}
function btnReceive_12220159() {
    function HEX3Aanonymous_12220164() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 2) ? 0 : 2);
      document.getElementById('btn-receive').blur();
    

      
    }

  var result_12220163 = null;

    result_12220163 = HEX3Aanonymous_12220164;

  return result_12220163;

}
function btnRecvClose_12220225() {
    function HEX3Aanonymous_12220230() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(2);
    

      
    }

  var result_12220229 = null;

    result_12220229 = HEX3Aanonymous_12220230;

  return result_12220229;

}
function recvAddressSelector_12220258() {
  var result_12220260 = null;

    var tmp_12220261 = tree_10560445(43, []);
    tmp_12220261.id = "receive-address";
    tmp_12220261.class = "ui center aligned segment hidden";
    var tmp_12220262 = tree_10560445(43, []);
    tmp_12220262.class = "ui top attached label recvaddress";
    add_10550072(tmp_12220262, text_10560801((translate_11537372("Receive Address") + " ")));
    var tmp_12220263 = tree_10560445(70, []);
    var tmp_12220264 = tree_10560445(61, []);
    tmp_12220264.class = "close icon btn-close";
    addEventHandler_11460154(tmp_12220264, 0, btnRecvClose_12220225(), kxi_10897284[0]);
    add_10550072(tmp_12220263, tmp_12220264);
    add_10550072(tmp_12220262, tmp_12220263);
    add_10550072(tmp_12220261, tmp_12220262);
    var tmp_12220265 = tree_10560445(43, []);
    tmp_12220265.class = "ui mini basic icon buttons";
    var tmp_12220266 = tree_10560445(106, []);
    tmp_12220266.id = "btn-recv-copy";
    tmp_12220266.class = "ui button";
    setAttr_10500105(tmp_12220266, "title", translate_11537372("Copy"));
    var tmp_12220267 = tree_10560445(61, []);
    tmp_12220267.class = "paperclip icon";
    add_10550072(tmp_12220266, tmp_12220267);
    add_10550072(tmp_12220265, tmp_12220266);
    var tmp_12220268 = tree_10560445(106, []);
    tmp_12220268.id = "btn-recv-qrcode";
    tmp_12220268.class = "ui button";
    setAttr_10500105(tmp_12220268, "title", translate_11537372("Create QR Code"));
    var tmp_12220269 = tree_10560445(61, []);
    tmp_12220269.class = "qrcode icon";
    add_10550072(tmp_12220268, tmp_12220269);
    add_10550072(tmp_12220265, tmp_12220268);
    add_10550072(tmp_12220261, tmp_12220265);
    var tmp_12220270 = tree_10560445(43, []);
    tmp_12220270.id = "address-text";
    tmp_12220270.class = "address";
    add_10550072(tmp_12220270, text_10560582([]));
    add_10550072(tmp_12220261, tmp_12220270);
    var tmp_12220271 = tree_10560445(43, []);
    tmp_12220271.class = "balls";
    var tmp_12220272 = tree_10560445(43, []);
    tmp_12220272.class = "used";
    var tmp_12220273 = tree_10560445(43, []);
    tmp_12220273.class = "circular ui icon mini button ball";
    var tmp_12220274 = tree_10560445(75, []);
    setAttr_10500105(tmp_12220274, "src", "");
    add_10550072(tmp_12220273, tmp_12220274);
    add_10550072(tmp_12220272, tmp_12220273);
    add_10550072(tmp_12220271, tmp_12220272);
    var tmp_12220275 = tree_10560445(43, []);
    tmp_12220275.class = "new";
    var tmp_12220276 = tree_10560445(43, []);
    tmp_12220276.class = "circular ui icon mini button ball";
    var tmp_12220277 = tree_10560445(75, []);
    setAttr_10500105(tmp_12220277, "src", "");
    add_10550072(tmp_12220276, tmp_12220277);
    add_10550072(tmp_12220275, tmp_12220276);
    var tmp_12220278 = tree_10560445(43, []);
    tmp_12220278.class = "circular ui icon mini button ball";
    var tmp_12220279 = tree_10560445(75, []);
    setAttr_10500105(tmp_12220279, "src", "");
    add_10550072(tmp_12220278, tmp_12220279);
    add_10550072(tmp_12220275, tmp_12220278);
    var tmp_12220280 = tree_10560445(43, []);
    tmp_12220280.class = "circular ui icon mini button ball";
    var tmp_12220281 = tree_10560445(75, []);
    setAttr_10500105(tmp_12220281, "src", "");
    add_10550072(tmp_12220280, tmp_12220281);
    add_10550072(tmp_12220275, tmp_12220280);
    var tmp_12220282 = tree_10560445(43, []);
    tmp_12220282.class = "circular ui icon mini button ball";
    var tmp_12220283 = tree_10560445(75, []);
    setAttr_10500105(tmp_12220283, "src", "");
    add_10550072(tmp_12220282, tmp_12220283);
    add_10550072(tmp_12220275, tmp_12220282);
    var tmp_12220284 = tree_10560445(43, []);
    tmp_12220284.class = "circular ui icon mini button ball";
    var tmp_12220285 = tree_10560445(75, []);
    setAttr_10500105(tmp_12220285, "src", "");
    add_10550072(tmp_12220284, tmp_12220285);
    add_10550072(tmp_12220275, tmp_12220284);
    add_10550072(tmp_12220271, tmp_12220275);
    add_10550072(tmp_12220261, tmp_12220271);
    result_12220260 = tmp_12220261;

  return result_12220260;

}
function recvAddressModal_12255083() {
  var result_12255085 = null;

    var tmp_12255086 = tree_10560445(43, []);
    tmp_12255086.id = "recv-modal";
    tmp_12255086.class = "ui";
    var tmp_12255087 = tree_10560445(61, []);
    tmp_12255087.class = "close icon btn-close-arc";
    add_10550072(tmp_12255086, tmp_12255087);
    var tmp_12255088 = tree_10560445(43, []);
    tmp_12255088.class = "close-arc";
    setAttr_10500105(tmp_12255088, "tabindex", "0");
    add_10550072(tmp_12255086, tmp_12255088);
    var tmp_12255089 = tree_10560445(43, []);
    tmp_12255089.id = "recv-qrcode";
    tmp_12255089.class = "qrcode";
    setAttr_10500105(tmp_12255089, "title", "");
    var tmp_12255090 = tree_10560445(84, []);
    setAttr_10500105(tmp_12255090, "width", "0");
    setAttr_10500105(tmp_12255090, "height", "0");
    add_10550072(tmp_12255089, tmp_12255090);
    add_10550072(tmp_12255086, tmp_12255089);
    var tmp_12255091 = tree_10560445(43, []);
    tmp_12255091.id = "recvaddr-form";
    tmp_12255091.class = "ui container";
    var tmp_12255092 = tree_10560445(43, []);
    tmp_12255092.class = "ui form";
    var tmp_12255093 = tree_10560445(43, []);
    tmp_12255093.class = "field";
    var tmp_12255094 = tree_10560445(104, []);
    add_10550072(tmp_12255094, text_10560801(translate_11537372("Receive Address")));
    add_10550072(tmp_12255093, tmp_12255094);
    var tmp_12255095 = tree_10560445(43, []);
    tmp_12255095.class = "ui selection dropdown addr-selection";
    setAttr_10500105(tmp_12255095, "tabindex", "0");
    var tmp_12255096 = tree_10560445(105, []);
    setAttr_10500105(tmp_12255096, "type", "hidden");
    setAttr_10500105(tmp_12255096, "name", "address");
    valueHEX3D_10465140(tmp_12255096, "");
    setAttr_10500105(tmp_12255096, "value", "");
    add_10550072(tmp_12255095, tmp_12255096);
    var tmp_12255097 = tree_10560445(61, []);
    tmp_12255097.class = "dropdown icon";
    add_10550072(tmp_12255095, tmp_12255097);
    var tmp_12255098 = tree_10560445(43, []);
    tmp_12255098.class = "text";
    var tmp_12255099 = tree_10560445(75, []);
    setAttr_10500105(tmp_12255099, "clsss", "ui mini avatar image");
    setAttr_10500105(tmp_12255099, "src", "");
    add_10550072(tmp_12255098, tmp_12255099);
    add_10550072(tmp_12255098, text_10560582([]));
    add_10550072(tmp_12255095, tmp_12255098);
    var tmp_12255100 = tree_10560445(43, []);
    tmp_12255100.class = "menu";
    setAttr_10500105(tmp_12255100, "tabindex", "-1");
    setAttr_10500105(tmp_12255100, "data-tabindex", "-1");
    add_10550072(tmp_12255095, tmp_12255100);
    add_10550072(tmp_12255093, tmp_12255095);
    add_10550072(tmp_12255092, tmp_12255093);
    var tmp_12255101 = tree_10560445(43, []);
    tmp_12255101.class = "field";
    var tmp_12255102 = tree_10560445(104, []);
    add_10550072(tmp_12255102, text_10560801(translate_11537372("Amount")));
    add_10550072(tmp_12255101, tmp_12255102);
    var tmp_12255103 = tree_10560445(43, []);
    tmp_12255103.class = "ui right labeled input";
    var tmp_12255104 = tree_10560445(105, []);
    tmp_12255104.class = "right";
    setAttr_10500105(tmp_12255104, "type", "text");
    setAttr_10500105(tmp_12255104, "name", "amount");
    setAttr_10500105(tmp_12255104, "placeholder", translate_11537372("Amount"));
    setAttr_10500105(tmp_12255104, "spellcheck", "false");
    add_10550072(tmp_12255103, tmp_12255104);
    var tmp_12255105 = tree_10560445(43, []);
    tmp_12255105.class = "ui basic label";
    add_10550072(tmp_12255105, text_10560582(makeNimstrLit("ZNY")));
    add_10550072(tmp_12255103, tmp_12255105);
    add_10550072(tmp_12255101, tmp_12255103);
    add_10550072(tmp_12255092, tmp_12255101);
    var tmp_12255106 = tree_10560445(43, []);
    tmp_12255106.class = "field";
    var tmp_12255107 = tree_10560445(104, []);
    add_10550072(tmp_12255107, text_10560801(translate_11537372("Label")));
    add_10550072(tmp_12255106, tmp_12255107);
    var tmp_12255108 = tree_10560445(105, []);
    tmp_12255108.class = "ui input";
    setAttr_10500105(tmp_12255108, "type", "text");
    setAttr_10500105(tmp_12255108, "name", "label");
    setAttr_10500105(tmp_12255108, "placeholder", translate_11537372("Label"));
    add_10550072(tmp_12255106, tmp_12255108);
    add_10550072(tmp_12255092, tmp_12255106);
    var tmp_12255109 = tree_10560445(43, []);
    tmp_12255109.class = "field";
    var tmp_12255110 = tree_10560445(104, []);
    add_10550072(tmp_12255110, text_10560801(translate_11537372("Message")));
    add_10550072(tmp_12255109, tmp_12255110);
    var tmp_12255111 = tree_10560445(111, []);
    tmp_12255111.class = "ui textarea";
    setAttr_10500105(tmp_12255111, "rows", "2");
    setAttr_10500105(tmp_12255111, "name", "message");
    setAttr_10500105(tmp_12255111, "placeholder", translate_11537372("Message"));
    add_10550072(tmp_12255109, tmp_12255111);
    add_10550072(tmp_12255092, tmp_12255109);
    add_10550072(tmp_12255091, tmp_12255092);
    add_10550072(tmp_12255086, tmp_12255091);
    result_12255085 = tmp_12255086;

  return result_12255085;

}
function btnSendClose_12220192() {
    function HEX3Aanonymous_12220197() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(1);
    

      
    }

  var result_12220196 = null;

    result_12220196 = HEX3Aanonymous_12220197;

  return result_12220196;

}
function checkSendAmount_12330014(ev_12330016, n_12330017) {
    var s_12330018 = value_10465123(n_12330017);
        var amount = String(s_12330018).trim();
    var amount_elm = $('#send-coins input[name="amount"]');
    if(amount.length > 0) {
      amount = amount.replace(/,/g, '');
      var amounts = amount.split('.');
      if(amount.match(/^\d+(\.\d{1,8})?$/)) {
        amount_elm.closest('.field').removeClass('error warning');
        var value = '';
        if(amounts.length == 1) {
          if(amounts[0] != '0') {
            value = amounts[0] + '00000000';
          } else {
            value = amounts[0];
          }
        } else if(amounts.length == 2) {
          value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
        }
        if(value.length > 0) {
          setSendUtxo(value);
        } else {
          resetSendBallCount();
        }
      } else {
        amount_elm.closest('.field').addClass('error');
      }
    } else {
      amount_elm.closest('.field').removeClass('error warning');
      resetSendBallCount();
    }
  

  
}
function sendForm_12330046() {
  var result_12330048 = null;

    var tmp_12330049 = tree_10560445(43, []);
    tmp_12330049.id = "send-coins";
    tmp_12330049.class = "ui center aligned segment hidden";
    var tmp_12330050 = tree_10560445(43, []);
    tmp_12330050.class = "ui top attached label sendcoins";
    add_10550072(tmp_12330050, text_10560801((translate_11537372("Send Coins") + " ")));
    var tmp_12330051 = tree_10560445(70, []);
    var tmp_12330052 = tree_10560445(61, []);
    tmp_12330052.class = "close icon btn-close";
    addEventHandler_11460154(tmp_12330052, 0, btnSendClose_12220192(), kxi_10897284[0]);
    add_10550072(tmp_12330051, tmp_12330052);
    add_10550072(tmp_12330050, tmp_12330051);
    add_10550072(tmp_12330049, tmp_12330050);
    var tmp_12330053 = tree_10560445(43, []);
    tmp_12330053.class = "ui right floated mini basic icon buttons";
    var tmp_12330054 = tree_10560445(106, []);
    tmp_12330054.id = "btn-send-lock";
    tmp_12330054.class = "ui button";
    setAttr_10500105(tmp_12330054, "title", translate_11537372("Locked"));
    var tmp_12330055 = tree_10560445(61, []);
    tmp_12330055.class = "lock icon";
    add_10550072(tmp_12330054, tmp_12330055);
    add_10550072(tmp_12330053, tmp_12330054);
    add_10550072(tmp_12330049, tmp_12330053);
    var tmp_12330056 = tree_10560445(43, []);
    tmp_12330056.class = "ui mini basic icon buttons btn-send-tools";
    var tmp_12330057 = tree_10560445(106, []);
    tmp_12330057.id = "btn-send-clear";
    tmp_12330057.class = "ui button";
    setAttr_10500105(tmp_12330057, "title", translate_11537372("Clear"));
    var tmp_12330058 = tree_10560445(61, []);
    tmp_12330058.class = "eraser icon";
    add_10550072(tmp_12330057, tmp_12330058);
    add_10550072(tmp_12330056, tmp_12330057);
    var tmp_12330059 = tree_10560445(106, []);
    tmp_12330059.id = "btn-send-qrcode";
    tmp_12330059.class = "ui button";
    setAttr_10500105(tmp_12330059, "title", translate_11537372("Scan QR Code"));
    var tmp_12330060 = tree_10560445(61, []);
    tmp_12330060.class = "camera icon";
    add_10550072(tmp_12330059, tmp_12330060);
    add_10550072(tmp_12330056, tmp_12330059);
    add_10550072(tmp_12330049, tmp_12330056);
    var tmp_12330061 = tree_10560445(43, []);
    tmp_12330061.class = "ui form";
    var tmp_12330062 = tree_10560445(43, []);
    tmp_12330062.class = "field";
    var tmp_12330063 = tree_10560445(104, []);
    add_10550072(tmp_12330063, text_10560801(translate_11537372("Send Address")));
    add_10550072(tmp_12330062, tmp_12330063);
    var tmp_12330064 = tree_10560445(43, []);
    tmp_12330064.class = "ui small input";
    var tmp_12330065 = tree_10560445(105, []);
    tmp_12330065.class = "center";
    setAttr_10500105(tmp_12330065, "type", "text");
    setAttr_10500105(tmp_12330065, "name", "address");
    setAttr_10500105(tmp_12330065, "placeholder", translate_11537372("Address"));
    setAttr_10500105(tmp_12330065, "spellcheck", "false");
    add_10550072(tmp_12330064, tmp_12330065);
    add_10550072(tmp_12330062, tmp_12330064);
    add_10550072(tmp_12330061, tmp_12330062);
    var tmp_12330066 = tree_10560445(43, []);
    tmp_12330066.class = "field";
    var tmp_12330067 = tree_10560445(104, []);
    add_10550072(tmp_12330067, text_10560801(translate_11537372("Amount")));
    add_10550072(tmp_12330066, tmp_12330067);
    var tmp_12330068 = tree_10560445(43, []);
    tmp_12330068.class = "ui small input";
    var tmp_12330069 = tree_10560445(105, []);
    tmp_12330069.class = "center";
    setAttr_10500105(tmp_12330069, "type", "text");
    setAttr_10500105(tmp_12330069, "name", "amount");
    setAttr_10500105(tmp_12330069, "placeholder", translate_11537372("Amount"));
    addEventHandler_11460118(tmp_12330069, 3, checkSendAmount_12330014, kxi_10897284[0]);
    setAttr_10500105(tmp_12330069, "spellcheck", "false");
    add_10550072(tmp_12330068, tmp_12330069);
    var tmp_12330070 = tree_10560445(43, []);
    tmp_12330070.class = "ui mini basic icon buttons utxoctrl";
    var tmp_12330071 = tree_10560445(106, []);
    tmp_12330071.id = "btn-utxo-minus";
    tmp_12330071.class = "ui button";
    setAttr_10500105(tmp_12330071, "title", translate_11537372("-1 Ball"));
    var tmp_12330072 = tree_10560445(61, []);
    tmp_12330072.class = "minus circle icon";
    add_10550072(tmp_12330071, tmp_12330072);
    add_10550072(tmp_12330070, tmp_12330071);
    var tmp_12330073 = tree_10560445(106, []);
    tmp_12330073.id = "btn-utxo-count";
    tmp_12330073.class = "ui button sendutxos";
    setAttr_10500105(tmp_12330073, "tabindex", "-1");
    setAttr_10500105(tmp_12330073, "data-tabindex", "-1");
    add_10550072(tmp_12330073, text_10560582(makeNimstrLit("...")));
    add_10550072(tmp_12330070, tmp_12330073);
    var tmp_12330074 = tree_10560445(106, []);
    tmp_12330074.id = "btn-utxo-plus";
    tmp_12330074.class = "ui button";
    setAttr_10500105(tmp_12330074, "title", translate_11537372("+1 Ball"));
    var tmp_12330075 = tree_10560445(61, []);
    tmp_12330075.class = "plus circle icon";
    add_10550072(tmp_12330074, tmp_12330075);
    add_10550072(tmp_12330070, tmp_12330074);
    add_10550072(tmp_12330068, tmp_12330070);
    add_10550072(tmp_12330066, tmp_12330068);
    add_10550072(tmp_12330061, tmp_12330066);
    var tmp_12330076 = tree_10560445(43, []);
    tmp_12330076.class = "ui list uri-options";
    L1: do {
      var d_12435009 = null;
      var v_12795548 = null;
      for (var k in uriOptions) {
        if (!uriOptions.hasOwnProperty(k)) continue;
        v_12795548=uriOptions[k];
      d_12435009 = v_12795548;
      var tmp_12330077 = tree_10560445(43, []);
      tmp_12330077.class = "item";
      var tmp_12330078 = tree_10560445(43, []);
      tmp_12330078.class = "content";
      var tmp_12330079 = tree_10560445(43, []);
      tmp_12330079.class = "header";
      add_10550072(tmp_12330079, text_10560801(translate_11537372(toJSStr(cstrToNimstr(d_12435009.key)))));
      add_10550072(tmp_12330078, tmp_12330079);
      var tmp_12330080 = tree_10560445(43, []);
      tmp_12330080.class = "description";
      add_10550072(tmp_12330080, text_10560801(d_12435009.value));
      add_10550072(tmp_12330078, tmp_12330080);
      add_10550072(tmp_12330077, tmp_12330078);
      add_10550072(tmp_12330076, tmp_12330077);
      }
    } while(false);
    add_10550072(tmp_12330061, tmp_12330076);
    var tmp_12330081 = tree_10560445(43, []);
    tmp_12330081.class = "fluid ui buttons";
    var tmp_12330082 = tree_10560445(106, []);
    tmp_12330082.id = "btn-tx-send";
    tmp_12330082.class = "ui inverted olive button center btn-tx-send";
    add_10550072(tmp_12330082, text_10560801(translate_11537372("Send")));
    add_10550072(tmp_12330081, tmp_12330082);
    add_10550072(tmp_12330061, tmp_12330081);
    add_10550072(tmp_12330049, tmp_12330061);
    result_12330048 = tmp_12330049;

  return result_12330048;

}
function goSettings_12220014() {
    function HEX3Aanonymous_12220019() {
        if (!(showPage4_11726085[0])) {
        viewSelector_11726137(14, false);
        supressRedraw_11726089[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          viewSelector_11726137(14, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_12220018 = null;

    result_12220018 = HEX3Aanonymous_12220019;

  return result_12220018;

}
function goLogs_12220047() {
    function HEX3Aanonymous_12220052() {
        if (!(showPage4_11726085[0])) {
        viewSelector_11726137(13, false);
        supressRedraw_11726089[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          viewSelector_11726137(13, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_12220051 = null;

    result_12220051 = HEX3Aanonymous_12220052;

  return result_12220051;

}
function backWallet_12220080() {
    function HEX3Aanonymous_12220085() {
        viewSelector_11726137(12, true);
              goSection('#section3', page_scroll_done);
    

      
    }

  var result_12220084 = null;

    result_12220084 = HEX3Aanonymous_12220085;

  return result_12220084;

}
function settingsPage_12510014() {
  var result_12510016 = null;

    var tmp_12510017 = tree_10560445(43, []);
    tmp_12510017.id = "settings";
    tmp_12510017.class = "ui container";
    var tmp_12510018 = tree_10560445(23, []);
    tmp_12510018.class = "ui dividing header";
    add_10550072(tmp_12510018, text_10560801(translate_11537372("Settings")));
    add_10550072(tmp_12510017, tmp_12510018);
    var tmp_12510019 = tree_10560445(106, []);
    tmp_12510019.id = "btn-reset";
    tmp_12510019.class = "ui inverted red button";
    add_10550072(tmp_12510019, text_10560801(translate_11537372("Reset Wallet")));
    add_10550072(tmp_12510017, tmp_12510019);
    var tmp_12510020 = tree_10560445(43, []);
    tmp_12510020.class = "ui pink inverted segment";
    add_10550072(tmp_12510020, text_10560801(translate_11537372("Delete all your wallet data in your web browser, including your encrypted secret keys.\n If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\n or mnemonics before deleting it. Otherwise you may lost your coins forever.\n")));
    add_10550072(tmp_12510017, tmp_12510020);
    var tmp_12510021 = tree_10560445(43, []);
    tmp_12510021.class = "ui checkbox";
    var tmp_12510022 = tree_10560445(105, []);
    setAttr_10500105(tmp_12510022, "type", "checkbox");
    setAttr_10500105(tmp_12510022, "name", "confirm");
    add_10550072(tmp_12510021, tmp_12510022);
    var tmp_12510023 = tree_10560445(104, []);
    add_10550072(tmp_12510023, text_10560801(translate_11537372("I confirmed that I have the seed cards or mnemonics or no coins in my wallet.")));
    add_10550072(tmp_12510021, tmp_12510023);
    add_10550072(tmp_12510017, tmp_12510021);
    result_12510016 = tmp_12510017;

  return result_12510016;

}
function settingsModal_12465015() {
  var result_12465017 = null;

    var tmp_12465018 = tree_10560445(43, []);
    tmp_12465018.id = "settings-modal";
    tmp_12465018.class = "ui basic modal";
    var tmp_12465019 = tree_10560445(43, []);
    tmp_12465019.class = "ui icon header";
    var tmp_12465020 = tree_10560445(61, []);
    tmp_12465020.class = "trash icon";
    add_10550072(tmp_12465019, tmp_12465020);
    add_10550072(tmp_12465019, text_10560801(translate_11537372("Reset Wallet")));
    add_10550072(tmp_12465018, tmp_12465019);
    var tmp_12465021 = tree_10560445(43, []);
    tmp_12465021.class = "content";
    var tmp_12465022 = tree_10560445(31, []);
    add_10550072(tmp_12465022, text_10560801(translate_11537372("Are you sure to reset your wallet?")));
    add_10550072(tmp_12465021, tmp_12465022);
    add_10550072(tmp_12465018, tmp_12465021);
    var tmp_12465023 = tree_10560445(43, []);
    tmp_12465023.class = "actions";
    var tmp_12465024 = tree_10560445(106, []);
    tmp_12465024.class = "ui basic cancel inverted button";
    var tmp_12465025 = tree_10560445(61, []);
    tmp_12465025.class = "remove icon";
    add_10550072(tmp_12465024, tmp_12465025);
    add_10550072(tmp_12465024, text_10560801(translate_11537372("Cancel")));
    add_10550072(tmp_12465023, tmp_12465024);
    var tmp_12465026 = tree_10560445(106, []);
    tmp_12465026.class = "ui red ok inverted button";
    var tmp_12465027 = tree_10560445(61, []);
    tmp_12465027.class = "checkmark icon";
    add_10550072(tmp_12465026, tmp_12465027);
    add_10550072(tmp_12465026, text_10560801(translate_11537372("Reset")));
    add_10550072(tmp_12465023, tmp_12465026);
    add_10550072(tmp_12465018, tmp_12465023);
    result_12465017 = tmp_12465018;

  return result_12465017;

}
function appMain_12555014(data_12555016) {
  var result_12555017 = null;

    var tmp_12555018 = tree_10560445(43, []);
    if (showPage1_11726082[0]) {
    var tmp_12555019 = tree_10560445(17, []);
    tmp_12555019.id = "section1";
    tmp_12555019.class = "section";
    var tmp_12555020 = tree_10560445(43, []);
    tmp_12555020.class = "intro";
    var tmp_12555021 = tree_10560445(43, []);
    tmp_12555021.class = "intro-head";
    var tmp_12555022 = tree_10560445(43, []);
    tmp_12555022.class = "caption";
    add_10550072(tmp_12555022, text_10560582(makeNimstrLit("Pastel Wallet")));
    add_10550072(tmp_12555021, tmp_12555022);
    var tmp_12555023 = tree_10560445(43, []);
    tmp_12555023.class = "ui container method-selector";
    var tmp_12555024 = tree_10560445(43, []);
    tmp_12555024.class = "title";
    add_10550072(tmp_12555024, text_10560801(translate_11537372("Scan your seed cards or input your mnemonic to start.")));
    add_10550072(tmp_12555023, tmp_12555024);
    var tmp_12555025 = tree_10560445(43, []);
    tmp_12555025.class = "ui buttons";
    var tmp_12555026 = tree_10560445(106, []);
    tmp_12555026.id = "seedselector";
    tmp_12555026.class = "ui olive button";
    addEventHandler_11460154(tmp_12555026, 0, importSelector_11726322(0), kxi_10897284[0]);
    var tmp_12555027 = tree_10560445(61, []);
    tmp_12555027.class = "qrcode icon";
    add_10550072(tmp_12555026, tmp_12555027);
    add_10550072(tmp_12555026, text_10560801(translate_11537372("Seed card")));
    add_10550072(tmp_12555025, tmp_12555026);
    var tmp_12555028 = tree_10560445(43, []);
    tmp_12555028.class = "or";
    add_10550072(tmp_12555025, tmp_12555028);
    var tmp_12555029 = tree_10560445(106, []);
    tmp_12555029.id = "mnemonicselector";
    tmp_12555029.class = "ui grey button";
    addEventHandler_11460154(tmp_12555029, 0, importSelector_11726322(1), kxi_10897284[0]);
    var tmp_12555030 = tree_10560445(61, []);
    tmp_12555030.class = "list alternate icon";
    add_10550072(tmp_12555029, tmp_12555030);
    add_10550072(tmp_12555029, text_10560801(translate_11537372("Mnemonic")));
    add_10550072(tmp_12555025, tmp_12555029);
    add_10550072(tmp_12555023, tmp_12555025);
    add_10550072(tmp_12555021, tmp_12555023);
    add_10550072(tmp_12555020, tmp_12555021);
    var tmp_12555031 = tree_10560445(43, []);
    tmp_12555031.class = "intro-body";
    if ((currentImportType_11726050[0] == 0)) {
    var tmp_12555032 = tree_10560445(43, []);
    tmp_12555032.id = "seed-seg";
    tmp_12555032.class = "ui left aligned segment seed-seg";
    if (showScanResult_11726077[0]) {
    var tmp_12555033 = tree_10560445(43, []);
    tmp_12555033.class = "ui link cards seed-card-holder";
    tmp_12555033.id = "seed-card-holder";
    L1: do {
      var idx_12600229 = 0;
      var seedCardInfo_12600230 = null;
      var i_12795086 = 0;
      var L_12795087 = (seedCardInfos_11726424[0]).length;
      L2: do {
          L3: while (true) {
          if (!(i_12795086 < L_12795087)) break L3;
            idx_12600229 = i_12795086;
            seedCardInfo_12600230 = seedCardInfos_11726424[0][chckIndx(i_12795086, 0, (seedCardInfos_11726424[0]).length-1)];
            add_10550072(tmp_12555033, seedCard_12070090(seedCardInfo_12600230, idx_12600229));
            i_12795086 = addInt(i_12795086, 1);
            if (!(((seedCardInfos_11726424[0]).length == L_12795087))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(137, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    var tmp_12555034 = tree_10560445(43, []);
    tmp_12555034.class = "seed-add-container";
    var tmp_12555035 = tree_10560445(106, []);
    tmp_12555035.class = "circular ui icon button bt-add-seed";
    addEventHandler_11460154(tmp_12555035, 0, showSeedQr_11855014(), kxi_10897284[0]);
    var tmp_12555036 = tree_10560445(61, []);
    tmp_12555036.class = "plus icon";
    add_10550072(tmp_12555035, tmp_12555036);
    add_10550072(tmp_12555034, tmp_12555035);
    add_10550072(tmp_12555033, tmp_12555034);
    add_10550072(tmp_12555032, tmp_12555033);
    var tmp_12555037 = tree_10560445(44, []);
    tmp_12555037.class = "pagenext";
    setAttr_10500105(tmp_12555037, "href", "#section2");
    var tmp_12555038 = tree_10560445(70, []);
    add_10550072(tmp_12555037, tmp_12555038);
    add_10550072(tmp_12555037, text_10560801(translate_11537372("Next")));
    add_10550072(tmp_12555032, tmp_12555037);
    }
    
    if (showScanning_11726075[0]) {
    var tmp_12555039 = tree_10560445(43, []);
    tmp_12555039.class = "qr-scanning";
    var tmp_12555040 = tree_10560445(43, []);
    add_10550072(tmp_12555039, tmp_12555040);
    var tmp_12555041 = tree_10560445(43, []);
    add_10550072(tmp_12555039, tmp_12555041);
    add_10550072(tmp_12555032, tmp_12555039);
    }
    
    if (showScanSeedBtn_11726074[0]) {
    var tmp_12555042 = tree_10560445(106, []);
    tmp_12555042.class = "ui teal labeled icon button bt-scan-seed";
    addEventHandler_11460154(tmp_12555042, 0, showSeedQr_11855014(), kxi_10897284[0]);
    add_10550072(tmp_12555042, text_10560801(translate_11537372("Scan seed card with camera")));
    var tmp_12555043 = tree_10560445(61, []);
    tmp_12555043.class = "camera icon";
    add_10550072(tmp_12555042, tmp_12555043);
    add_10550072(tmp_12555032, tmp_12555042);
    }
    
    if (showCamTools_11726076[0]) {
    var tmp_12555044 = tree_10560445(43, []);
    tmp_12555044.class = "ui small basic icon buttons camtools";
    var tmp_12555045 = tree_10560445(106, []);
    tmp_12555045.class = "ui button";
    addEventHandler_11460154(tmp_12555045, 0, camChange_11855098(), kxi_10897284[0]);
    var tmp_12555046 = tree_10560445(61, []);
    tmp_12555046.class = "camera icon";
    add_10550072(tmp_12555045, tmp_12555046);
    add_10550072(tmp_12555044, tmp_12555045);
    var tmp_12555047 = tree_10560445(106, []);
    tmp_12555047.class = "ui button";
    addEventHandler_11460154(tmp_12555047, 0, camClose_11855131(), kxi_10897284[0]);
    var tmp_12555048 = tree_10560445(61, []);
    tmp_12555048.class = "window close icon";
    add_10550072(tmp_12555047, tmp_12555048);
    add_10550072(tmp_12555044, tmp_12555047);
    add_10550072(tmp_12555032, tmp_12555044);
    }
    
    var tmp_12555049 = tree_10560445(84, []);
    tmp_12555049.id = "qrcanvas";
    add_10550072(tmp_12555032, tmp_12555049);
    var tmp_12555050 = tree_10560445(43, []);
    tmp_12555050.class = "ui dimmer qrcamera-loader";
    var tmp_12555051 = tree_10560445(43, []);
    tmp_12555051.class = "ui indeterminate text loader";
    add_10550072(tmp_12555051, text_10560801(translate_11537372("Preparing Camera")));
    add_10550072(tmp_12555050, tmp_12555051);
    add_10550072(tmp_12555032, tmp_12555050);
    var tmp_12555052 = tree_10560445(43, []);
    tmp_12555052.class = "ui dimmer qrcamera-shutter";
    add_10550072(tmp_12555032, tmp_12555052);
    add_10550072(tmp_12555031, tmp_12555032);
    }
    else {
      var tmp_12555053 = tree_10560445(43, []);
      tmp_12555053.class = "ui left aligned segment mnemonic-seg";
      add_10550072(tmp_12555053, mnemonicEditor_11990047());
      if (mnemonicFulfill_11726086[0]) {
      var tmp_12555054 = tree_10560445(44, []);
      tmp_12555054.class = "pagenext";
      setAttr_10500105(tmp_12555054, "href", "#section2");
      var tmp_12555055 = tree_10560445(70, []);
      add_10550072(tmp_12555054, tmp_12555055);
      add_10550072(tmp_12555054, text_10560801(translate_11537372("Next")));
      add_10550072(tmp_12555053, tmp_12555054);
      }
      
      add_10550072(tmp_12555031, tmp_12555053);
    }
    
    add_10550072(tmp_12555020, tmp_12555031);
    add_10550072(tmp_12555019, tmp_12555020);
    add_10550072(tmp_12555018, tmp_12555019);
    }
    
    if (showPage2_11726083[0]) {
    var tmp_12555056 = tree_10560445(17, []);
    tmp_12555056.id = "section2";
    tmp_12555056.class = "section";
    var tmp_12555057 = tree_10560445(43, []);
    tmp_12555057.class = "intro";
    var tmp_12555058 = tree_10560445(43, []);
    tmp_12555058.class = "intro-head";
    var tmp_12555059 = tree_10560445(43, []);
    tmp_12555059.class = "caption";
    add_10550072(tmp_12555059, text_10560582(makeNimstrLit("Pastel Wallet")));
    add_10550072(tmp_12555058, tmp_12555059);
    var tmp_12555060 = tree_10560445(43, []);
    tmp_12555060.class = "ui container method-selector";
    var tmp_12555061 = tree_10560445(43, []);
    tmp_12555061.class = "title";
    add_10550072(tmp_12555061, text_10560801(translate_11537372("A key card or passphrase is required to encrypt and save the private key in your browser.\n You will need it before sending your coins.\n")));
    add_10550072(tmp_12555060, tmp_12555061);
    var tmp_12555062 = tree_10560445(43, []);
    tmp_12555062.class = "ui buttons";
    var tmp_12555063 = tree_10560445(106, []);
    tmp_12555063.id = "keyselector";
    tmp_12555063.class = "ui olive button";
    addEventHandler_11460154(tmp_12555063, 0, protectSelector_11726374(0), kxi_10897284[0]);
    var tmp_12555064 = tree_10560445(61, []);
    tmp_12555064.class = "qrcode icon";
    add_10550072(tmp_12555063, tmp_12555064);
    add_10550072(tmp_12555063, text_10560801(translate_11537372("Key card")));
    add_10550072(tmp_12555062, tmp_12555063);
    var tmp_12555065 = tree_10560445(43, []);
    tmp_12555065.class = "or";
    add_10550072(tmp_12555062, tmp_12555065);
    var tmp_12555066 = tree_10560445(106, []);
    tmp_12555066.id = "passselector";
    tmp_12555066.class = "ui grey button";
    addEventHandler_11460154(tmp_12555066, 0, protectSelector_11726374(1), kxi_10897284[0]);
    var tmp_12555067 = tree_10560445(61, []);
    tmp_12555067.class = "list alternate icon";
    add_10550072(tmp_12555066, tmp_12555067);
    add_10550072(tmp_12555066, text_10560801(translate_11537372("Passphrase")));
    add_10550072(tmp_12555062, tmp_12555066);
    add_10550072(tmp_12555060, tmp_12555062);
    add_10550072(tmp_12555058, tmp_12555060);
    add_10550072(tmp_12555057, tmp_12555058);
    var tmp_12555068 = tree_10560445(43, []);
    tmp_12555068.class = "intro-body";
    if ((currentProtectType_11726056[0] == 0)) {
    var tmp_12555069 = tree_10560445(43, []);
    tmp_12555069.id = "seed-seg";
    tmp_12555069.class = "ui left aligned segment seed-seg";
    if (showScanResult2_11726081[0]) {
    var tmp_12555070 = tree_10560445(43, []);
    tmp_12555070.class = "ui clearing segment keycard-seg";
    var tmp_12555071 = tree_10560445(43, []);
    tmp_12555071.class = "ui inverted segment";
    var tmp_12555072 = tree_10560445(24, []);
    tmp_12555072.class = "ui grey inverted header center";
    add_10550072(tmp_12555072, text_10560801(translate_11537372("Scanned key card")));
    add_10550072(tmp_12555071, tmp_12555072);
    var tmp_12555073 = tree_10560445(31, []);
    tmp_12555073.class = "center";
    add_10550072(tmp_12555073, text_10560801(keyCardVal_11850251[0]));
    add_10550072(tmp_12555071, tmp_12555073);
    add_10550072(tmp_12555070, tmp_12555071);
    var tmp_12555074 = tree_10560445(106, []);
    tmp_12555074.class = "ui right floated olive button";
    addEventHandler_11460118(tmp_12555074, 0, confirmKeyCard_11855080, kxi_10897284[0]);
    add_10550072(tmp_12555074, text_10560801(translate_11537372("Apply")));
    add_10550072(tmp_12555070, tmp_12555074);
    var tmp_12555075 = tree_10560445(106, []);
    tmp_12555075.class = "ui right floated grey button";
    addEventHandler_11460154(tmp_12555075, 0, showKeyQr_11855047(), kxi_10897284[0]);
    add_10550072(tmp_12555075, text_10560801(translate_11537372("Rescan")));
    add_10550072(tmp_12555070, tmp_12555075);
    add_10550072(tmp_12555069, tmp_12555070);
    }
    
    if (keyCardFulfill_11726087[0]) {
    var tmp_12555076 = tree_10560445(44, []);
    tmp_12555076.class = "pagenext";
    setAttr_10500105(tmp_12555076, "href", "#section3");
    var tmp_12555077 = tree_10560445(70, []);
    add_10550072(tmp_12555076, tmp_12555077);
    add_10550072(tmp_12555076, text_10560801(translate_11537372("Next")));
    add_10550072(tmp_12555069, tmp_12555076);
    }
    
    if (showScanning2_11726079[0]) {
    var tmp_12555078 = tree_10560445(43, []);
    tmp_12555078.class = "qr-scanning";
    var tmp_12555079 = tree_10560445(43, []);
    add_10550072(tmp_12555078, tmp_12555079);
    var tmp_12555080 = tree_10560445(43, []);
    add_10550072(tmp_12555078, tmp_12555080);
    add_10550072(tmp_12555069, tmp_12555078);
    }
    
    if (showScanSeedBtn2_11726078[0]) {
    var tmp_12555081 = tree_10560445(106, []);
    tmp_12555081.class = "ui teal labeled icon button bt-scan-seed";
    addEventHandler_11460154(tmp_12555081, 0, showKeyQr_11855047(), kxi_10897284[0]);
    add_10550072(tmp_12555081, text_10560801(translate_11537372("Scan key card with camera")));
    var tmp_12555082 = tree_10560445(61, []);
    tmp_12555082.class = "camera icon";
    add_10550072(tmp_12555081, tmp_12555082);
    add_10550072(tmp_12555069, tmp_12555081);
    }
    
    if (showCamTools2_11726080[0]) {
    var tmp_12555083 = tree_10560445(43, []);
    tmp_12555083.class = "ui small basic icon buttons camtools";
    var tmp_12555084 = tree_10560445(106, []);
    tmp_12555084.class = "ui button";
    addEventHandler_11460154(tmp_12555084, 0, camChange_11855098(), kxi_10897284[0]);
    var tmp_12555085 = tree_10560445(61, []);
    tmp_12555085.class = "camera icon";
    add_10550072(tmp_12555084, tmp_12555085);
    add_10550072(tmp_12555083, tmp_12555084);
    var tmp_12555086 = tree_10560445(106, []);
    tmp_12555086.class = "ui button";
    addEventHandler_11460154(tmp_12555086, 0, camClose_11855131(), kxi_10897284[0]);
    var tmp_12555087 = tree_10560445(61, []);
    tmp_12555087.class = "window close icon";
    add_10550072(tmp_12555086, tmp_12555087);
    add_10550072(tmp_12555083, tmp_12555086);
    add_10550072(tmp_12555069, tmp_12555083);
    }
    
    var tmp_12555088 = tree_10560445(84, []);
    tmp_12555088.id = "qrcanvas";
    add_10550072(tmp_12555069, tmp_12555088);
    var tmp_12555089 = tree_10560445(43, []);
    tmp_12555089.class = "ui dimmer qrcamera-loader";
    var tmp_12555090 = tree_10560445(43, []);
    tmp_12555090.class = "ui indeterminate text loader";
    add_10550072(tmp_12555090, text_10560801(translate_11537372("Preparing Camera")));
    add_10550072(tmp_12555089, tmp_12555090);
    add_10550072(tmp_12555069, tmp_12555089);
    var tmp_12555091 = tree_10560445(43, []);
    tmp_12555091.class = "ui dimmer qrcamera-shutter";
    add_10550072(tmp_12555069, tmp_12555091);
    add_10550072(tmp_12555068, tmp_12555069);
    }
    else {
      var tmp_12555092 = tree_10560445(43, []);
      tmp_12555092.class = "ui left aligned segment mnemonic-seg";
      add_10550072(tmp_12555092, passphraseEditor_12185014());
      if (passphraseFulfill_11726088[0]) {
      var tmp_12555093 = tree_10560445(44, []);
      tmp_12555093.class = "pagenext";
      setAttr_10500105(tmp_12555093, "href", "#section3");
      var tmp_12555094 = tree_10560445(70, []);
      add_10550072(tmp_12555093, tmp_12555094);
      add_10550072(tmp_12555093, text_10560801(translate_11537372("Next")));
      add_10550072(tmp_12555092, tmp_12555093);
      }
      
      add_10550072(tmp_12555068, tmp_12555092);
    }
    
    add_10550072(tmp_12555057, tmp_12555068);
    add_10550072(tmp_12555056, tmp_12555057);
    add_10550072(tmp_12555018, tmp_12555056);
    }
    
    if (showPage3_11726084[0]) {
    var tmp_12555095 = tree_10560445(17, []);
    tmp_12555095.id = "section3";
    tmp_12555095.class = "section";
    var tmp_12555096 = tree_10560445(43, []);
    tmp_12555096.class = "intro";
    var tmp_12555097 = tree_10560445(43, []);
    tmp_12555097.class = "intro-head wallet-head";
    var tmp_12555098 = tree_10560445(43, []);
    tmp_12555098.class = "caption";
    add_10550072(tmp_12555098, text_10560582(makeNimstrLit("Pastel Wallet")));
    add_10550072(tmp_12555097, tmp_12555098);
    var tmp_12555099 = tree_10560445(43, []);
    tmp_12555099.class = "ui container wallet-btns";
    var tmp_12555100 = tree_10560445(43, []);
    tmp_12555100.class = "two ui basic buttons sendrecv";
    var tmp_12555101 = tree_10560445(106, []);
    tmp_12555101.id = "btn-send";
    tmp_12555101.class = "ui small button send";
    addEventHandler_11460154(tmp_12555101, 0, btnSend_12220126(), kxi_10897284[0]);
    var tmp_12555102 = tree_10560445(61, []);
    tmp_12555102.class = "counterclockwise rotated sign-out icon send";
    add_10550072(tmp_12555101, tmp_12555102);
    add_10550072(tmp_12555101, text_10560801((" " + translate_11537372("Send"))));
    add_10550072(tmp_12555100, tmp_12555101);
    var tmp_12555103 = tree_10560445(106, []);
    tmp_12555103.id = "btn-receive";
    tmp_12555103.class = "ui small button receive";
    addEventHandler_11460154(tmp_12555103, 0, btnReceive_12220159(), kxi_10897284[0]);
    var tmp_12555104 = tree_10560445(61, []);
    tmp_12555104.class = "clockwise rotated sign-in icon receive";
    add_10550072(tmp_12555103, tmp_12555104);
    add_10550072(tmp_12555103, text_10560801((" " + translate_11537372("Receive"))));
    add_10550072(tmp_12555100, tmp_12555103);
    add_10550072(tmp_12555099, tmp_12555100);
    add_10550072(tmp_12555097, tmp_12555099);
    add_10550072(tmp_12555096, tmp_12555097);
    var tmp_12555105 = tree_10560445(43, []);
    tmp_12555105.class = "intro-body wallet-body";
    var tmp_12555106 = tree_10560445(43, []);
    tmp_12555106.id = "wallet-balance";
    tmp_12555106.class = "ui center aligned segment";
    var tmp_12555107 = tree_10560445(43, []);
    tmp_12555107.class = "ui top left attached tiny label send";
    var tmp_12555108 = tree_10560445(70, []);
    add_10550072(tmp_12555108, text_10560582(makeNimstrLit("0")));
    add_10550072(tmp_12555107, tmp_12555108);
    add_10550072(tmp_12555107, text_10560582(makeNimstrLit(" ")));
    var tmp_12555109 = tree_10560445(61, []);
    tmp_12555109.class = "counterclockwise rotated sign-out icon";
    add_10550072(tmp_12555107, tmp_12555109);
    add_10550072(tmp_12555106, tmp_12555107);
    var tmp_12555110 = tree_10560445(43, []);
    tmp_12555110.class = "ui top right attached tiny label receive";
    var tmp_12555111 = tree_10560445(61, []);
    tmp_12555111.class = "clockwise rotated sign-in icon";
    add_10550072(tmp_12555110, tmp_12555111);
    var tmp_12555112 = tree_10560445(70, []);
    add_10550072(tmp_12555112, text_10560582(makeNimstrLit("0")));
    add_10550072(tmp_12555110, tmp_12555112);
    add_10550072(tmp_12555106, tmp_12555110);
    var tmp_12555113 = tree_10560445(43, []);
    tmp_12555113.class = "balance";
    add_10550072(tmp_12555113, text_10560582(makeNimstrLit("0")));
    add_10550072(tmp_12555106, tmp_12555113);
    var tmp_12555114 = tree_10560445(43, []);
    tmp_12555114.class = "ui bottom right attached tiny label symbol";
    add_10550072(tmp_12555114, text_10560582(makeNimstrLit("ZNY")));
    add_10550072(tmp_12555106, tmp_12555114);
    add_10550072(tmp_12555105, tmp_12555106);
    if (showRecvAddressSelector_11726090[0]) {
    add_10550072(tmp_12555105, recvAddressSelector_12220258());
    }
    
    if (showRecvAddressModal_11726091[0]) {
    add_10550072(tmp_12555105, recvAddressModal_12255083());
    }
    
    add_10550072(tmp_12555105, sendForm_12330046());
    var tmp_12555115 = tree_10560445(43, []);
    tmp_12555115.id = "ball-info";
    tmp_12555115.class = "ui center aligned segment";
    add_10550072(tmp_12555115, text_10560582([]));
    var tmp_12555116 = tree_10560445(71, []);
    add_10550072(tmp_12555115, tmp_12555116);
    add_10550072(tmp_12555115, text_10560582([]));
    add_10550072(tmp_12555105, tmp_12555115);
    var tmp_12555117 = tree_10560445(43, []);
    tmp_12555117.id = "wallet-seg";
    tmp_12555117.class = "ui center aligned segment seed-seg";
    var tmp_12555118 = tree_10560445(84, []);
    setAttr_10500105(tmp_12555118, "width", "0");
    setAttr_10500105(tmp_12555118, "height", "0");
    add_10550072(tmp_12555117, tmp_12555118);
    add_10550072(tmp_12555105, tmp_12555117);
    add_10550072(tmp_12555096, tmp_12555105);
    var tmp_12555119 = tree_10560445(43, []);
    tmp_12555119.class = "ui two bottom attached buttons settings";
    var tmp_12555120 = tree_10560445(106, []);
    tmp_12555120.class = "ui button";
    addEventHandler_11460154(tmp_12555120, 0, goSettings_12220014(), kxi_10897284[0]);
    var tmp_12555121 = tree_10560445(61, []);
    tmp_12555121.class = "cog icon";
    add_10550072(tmp_12555120, tmp_12555121);
    add_10550072(tmp_12555120, text_10560801(translate_11537372("Settings")));
    var tmp_12555122 = tree_10560445(70, []);
    var tmp_12555123 = tree_10560445(61, []);
    tmp_12555123.class = "chevron down icon";
    add_10550072(tmp_12555122, tmp_12555123);
    add_10550072(tmp_12555120, tmp_12555122);
    add_10550072(tmp_12555119, tmp_12555120);
    var tmp_12555124 = tree_10560445(106, []);
    tmp_12555124.class = "ui button";
    addEventHandler_11460154(tmp_12555124, 0, goLogs_12220047(), kxi_10897284[0]);
    var tmp_12555125 = tree_10560445(61, []);
    tmp_12555125.class = "list alternate outline icon";
    add_10550072(tmp_12555124, tmp_12555125);
    add_10550072(tmp_12555124, text_10560801(translate_11537372("Logs")));
    var tmp_12555126 = tree_10560445(70, []);
    var tmp_12555127 = tree_10560445(61, []);
    tmp_12555127.class = "chevron down icon";
    add_10550072(tmp_12555126, tmp_12555127);
    add_10550072(tmp_12555124, tmp_12555126);
    add_10550072(tmp_12555119, tmp_12555124);
    var tmp_12555128 = tree_10560445(43, []);
    tmp_12555128.id = "bottom-blink";
    add_10550072(tmp_12555119, tmp_12555128);
    add_10550072(tmp_12555096, tmp_12555119);
    add_10550072(tmp_12555095, tmp_12555096);
    var tmp_12555129 = tree_10560445(111, []);
    tmp_12555129.id = "clipboard";
    setAttr_10500105(tmp_12555129, "rows", "1");
    setAttr_10500105(tmp_12555129, "tabindex", "-1");
    setAttr_10500105(tmp_12555129, "data-tabindex", "-1");
    setAttr_10500105(tmp_12555129, "readOnly", "true");
    setAttr_10500105(tmp_12555129, "spellcheck", "false");
    add_10550072(tmp_12555095, tmp_12555129);
    add_10550072(tmp_12555018, tmp_12555095);
    }
    
    if ((showPage3_11726084[0] || showPage4_11726085[0])) {
    var tmp_12555130 = tree_10560445(17, []);
    tmp_12555130.id = "section4";
    tmp_12555130.class = "tradelogs-section";
    var tmp_12555131 = tree_10560445(43, []);
    tmp_12555131.class = "ui buttons settings backpage";
    var tmp_12555132 = tree_10560445(106, []);
    tmp_12555132.class = "ui button backwallet";
    addEventHandler_11460154(tmp_12555132, 0, backWallet_12220080(), kxi_10897284[0]);
    var tmp_12555133 = tree_10560445(61, []);
    tmp_12555133.class = "dot circle icon";
    add_10550072(tmp_12555132, tmp_12555133);
    add_10550072(tmp_12555132, text_10560801(translate_11537372("Back")));
    var tmp_12555134 = tree_10560445(70, []);
    var tmp_12555135 = tree_10560445(61, []);
    tmp_12555135.class = "chevron up icon";
    add_10550072(tmp_12555134, tmp_12555135);
    add_10550072(tmp_12555132, tmp_12555134);
    add_10550072(tmp_12555131, tmp_12555132);
    add_10550072(tmp_12555130, tmp_12555131);
    if (showTradeLogs_11726092[0]) {
    var tmp_12555136 = tree_10560445(43, []);
    tmp_12555136.class = "ui container";
    var tmp_12555137 = tree_10560445(43, []);
    tmp_12555137.id = "tradeunconfs";
    tmp_12555137.class = "ui cards tradelogs";
    add_10550072(tmp_12555136, tmp_12555137);
    var tmp_12555138 = tree_10560445(43, []);
    tmp_12555138.id = "tradelogs";
    tmp_12555138.class = "ui cards tradelogs";
    add_10550072(tmp_12555136, tmp_12555138);
    add_10550072(tmp_12555130, tmp_12555136);
    }
    
    if (showSettings_11726093[0]) {
    add_10550072(tmp_12555130, settingsPage_12510014());
    add_10550072(tmp_12555130, settingsModal_12465015());
    }
    
    add_10550072(tmp_12555018, tmp_12555130);
    }
    
    result_12555017 = tmp_12555018;

  return result_12555017;

}
function afterScript_12790051(data_12790053) {
    $(".ui.dropdown").dropdown();
    if (showScanResult_11726077[0]) {
          function seedCardQrUpdate(vivid) {
        $('.seed-qrcode').each(function() {
          $(this).find('canvas').remove();
          var fillcolor;
          var fillStyleFn;
          if($(this).hasClass('active')) {
            fillcolor = vivid ? '#000' : '#7f7f7f';
            if(!vivid) {
              fillStyleFn = function(ctx) {
                var w = ctx.canvas.width;
                var h = ctx.canvas.height;
                var grd = ctx.createLinearGradient(0, 0, w, h);
                grd.addColorStop(0, "#666");
                grd.addColorStop(0.3, "#aaa");
                grd.addColorStop(1, "#555");
                return grd;
              }
            }
          } else {
            fillcolor = '#f8f8f8';
          }
          $(this).qrcode({
            render: 'canvas',
            ecLevel: 'Q',
            radius: 0.39,
            text: $(this).data('orig'),
            size: 188,
            mode: 2,
            label: '',
            fontname: 'sans',
            fontcolor: '#393939',
            fill: fillcolor,
            fillStyleFn: fillStyleFn
          });
        });
      }
      if(!$('.seed-qrcode .active').length) {
        $('.seed-qrcode').last().addClass('active');
      }
      seedCardQrUpdate();

      $('.seed-card').off('click').on('click', function() {
        $('.seed-card').not(this).each(function() {
          $(this).find('.seed-qrcode').removeClass('active');
        });
        $(this).find('.seed-qrcode').addClass('active');
        seedCardQrUpdate(true);
      });
      $('.seed-card').off('mouseleave').mouseleave(function() {
        $('.seed-qrcode').addClass('active');
        seedCardQrUpdate();
      });
      var holder = document.getElementById('seed-card-holder');
      if(holder) {
        holder.scrollLeft = holder.scrollWidth - holder.clientWidth;
      }
    
    }
    
    if ((showScanResult_11726077[0] || mnemonicFulfill_11726086[0])) {
          disable_caret_browsing($('#section2'));
      target_page_scroll = '#section2';
      page_scroll_done = function() {
        $('a.pagenext').css('visibility', 'hidden');
        $('#section1').hide();
        enable_caret_browsing($('#section2'));
        window.scrollTo(0, 0);
        jsSeedToKeys();
        jsViewSelector(5);
        page_scroll_done = function() {};
      }
    
    }
    
    if ((keyCardFulfill_11726087[0] || passphraseFulfill_11726088[0])) {
          disable_caret_browsing($('#section3'));
      target_page_scroll = '#section3';
      page_scroll_done = function() {
        var wallet = pastel.wallet;
        var ret = wallet.lockShieldedKeys();
        if(!ret) {
          Notify.show(__t('Error'), __t('Failed to lock keys.'), Notify.msgtype.error);
        }
        jsClearSensitive();
        $('a.pagenext').css('visibility', 'hidden');
        $('#section2').hide();
        enable_caret_browsing($('#section3'));
        window.scrollTo(0, 0);
        jsViewSelector(12);
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        }
        page_scroll_done = function() {};
      }
    
    }
    
    if ((((showScanResult_11726077[0] || mnemonicFulfill_11726086[0]) || keyCardFulfill_11726087[0]) || passphraseFulfill_11726088[0])) {
          for(var i in registerEventList) {
        var ev = registerEventList[i];
        ev.elm.removeEventListener(ev.type, ev.cb);
      }
      var elms = document.querySelectorAll('a.pagenext');
      Array.prototype.forEach.call(elms, function(elm) {
        var href = elm.getAttribute("href");
        if(href && href.startsWith('#')) {
          var cb = function(e) {
            e.preventDefault();
            var href = this.getAttribute('href');
            if(href == '#section2') {
              goSection(href, page_scroll_done);
            } else if(href == '#section3') {
              goSection(href, page_scroll_done);
            }
          }
          registerEventList.push({elm: elm, type: 'click', cb: cb});
          elm.addEventListener('click', cb);
        }
      });
    
    }
    
    if ((showPage2_11726083[0] && !(passphraseFulfill_11726088[0]))) {
          $('input[name="input-passphrase"]').focus();
    
    }
    
    if (showPage4_11726085[0]) {
          pastel.utxoballs.pause();
      //$.fn.visibility.settings.silent = true;
      $('.backpage').visibility({
        type: 'fixed',
        offset: 0
      });
    
    if (showTradeLogs_11726092[0]) {
            TradeLogs.start();
      
    }
    
    if (showSettings_11726093[0]) {
            Settings.init();
      
    }
    
          goSection('#section4', function() {
        disable_caret_browsing($('#section3'));
        target_page_scroll = '#section3';
        page_scroll_done = function() {
          TradeLogs.stop();
          $('.backpage').visibility({silent: true});
          $('#tradeunconfs').empty();
          $('#tradelogs').empty();
          $('#section4').hide();
          enable_caret_browsing($('#section3'));
          window.scrollTo(0, 0);
          setSupressRedraw(false);
          reloadViewSafeStart();
          jsViewSelector(12);
          page_scroll_done = function() {};
          pastel.utxoballs.resume();
          showPage4_11726085[0] = false;
          $('#bottom-blink').fadeIn(100).fadeOut(400);
        }
      });
    
    }
    else {
            $('#section4').hide();
    
    }
    
    if ((showPage3_11726084[0] || showPage4_11726085[0])) {
          reloadViewSafeEnd();
    
    }
    

  
}
var walletSetup_12795017 = [false];
  var stor  = new Stor();
  var xpubs = stor.get_xpubs();
  stor = null;
  if(xpubs.length > 0) {
    walletSetup_12795017[0] = true;
    function check_stream_ready() {
      setTimeout(function() {
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        } else {
          check_stream_ready();
        }
      }, 50);
    }
    check_stream_ready();
  }

if (walletSetup_12795017[0]) {
viewSelector_11726137(12, true);
}

appInst_11726027[0] = setInitializer_11460032(appMain_12555014, "main", afterScript_12790051);
