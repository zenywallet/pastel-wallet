/* Generated by the Nim Compiler v1.0.99 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI256270 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256501 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256486 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI46444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI256451 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256415 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256340 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256150 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256135 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256095 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256072 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256624 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256609 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI199476 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI148432 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI151247 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI113907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46462 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI210588 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI254452 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI254448 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI254663 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI254648 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI254412 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI254411 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI254633 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI254526 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI254480 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI230211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI96084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI96085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI209761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209137 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI209713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI209701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI209722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI209720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI209015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI209714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI209705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI84448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI84205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI84281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI84227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI84565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI84563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI84561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI84231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI84229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI230207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI230209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI43006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI84283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46450 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46514 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI43042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI46508 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI46426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI254045 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NNI254045 = {kind: 2, offset: 0, typ: null, name: null, len: 15, sons: {"0": {kind: 1, offset: 0, typ: NTI254045, name: "SeedNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI254045, name: "SeedScanning", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI254045, name: "SeedAfterScan", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI254045, name: "MnemonicEdit", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI254045, name: "MnemonicFulfill", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI254045, name: "SetPassphrase", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI254045, name: "KeyNone", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI254045, name: "KeyScanning", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI254045, name: "KeyAfterScan", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI254045, name: "KeyCardDone", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI254045, name: "PassphraseEdit", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI254045, name: "PassphraseDone", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI254045, name: "Wallet", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI254045, name: "WalletLogs", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI254045, name: "WalletSettings", len: 0, sons: null}}};
NTI254045.node = NNI254045;
var NNI46446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46446.node = NNI46446;
var NNI46442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46442.node = NNI46442;
var NNI46428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46428.node = NNI46428;
NTI46508.base = NTI46426;
NTI46514.base = NTI46426;
var NNI46426 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI46508, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI43042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI43040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI43040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI43016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI46514, name: "up", sons: null}]};
NTI46426.node = NNI46426;
var NNI46408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46408.node = NNI46408;
NTI46426.base = NTI46408;
NTI46428.base = NTI46426;
NTI46442.base = NTI46428;
NTI46446.base = NTI46442;
var NNI46450 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46450.node = NNI46450;
NTI46450.base = NTI46428;
var NNI46458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46458.node = NNI46458;
NTI46458.base = NTI46428;
var NNI84283 = {kind: 2, len: 92, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI43042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI43042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI43042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI43042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI43042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI43042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI43042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI43042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI43042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI43042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI43042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI43042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI43042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI43042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI43042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI43042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI43042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI43042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI43042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI43042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI43042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI43042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI43042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI43042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI43042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI43042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI43042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI43042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI43042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI43042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI43042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI43042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI43042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI43042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI43042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI43042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI43042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI43042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI43042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI43042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI43042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI43042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI43042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI43042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI43042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI43042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI43042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI43042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI43042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI43042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI43042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI43042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI43042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI43042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI43042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI43042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI43042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI43042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI43042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI43042, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI43042, name: "opacity", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI43042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI43042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI43042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI43042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI43042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI43042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI43042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI43042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI43042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI43042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI43042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI43042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI43042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI43042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI43042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI43042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI43042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI43042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI43042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI43042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI43042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI43042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI43042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI43042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI43042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI43042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI43042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI43042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI43042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI43042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI43006, name: "zIndex", sons: null}]};
NTI84283.node = NNI84283;
NTI84283.base = NTI46408;
var NNI230207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI230207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI230207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI230207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI230207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI230207, name: "pkDetach", len: 0, sons: null}}};
NTI230207.node = NNI230207;
NTI84561.base = NTI84229;
NTI84563.base = NTI84229;
NTI84565.base = NTI84229;
var NNI84227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI84227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI84227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI84227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI84227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI84227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI84227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI84227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI84227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI84227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI84227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI84227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI84227, name: "NotationNode", len: 0, sons: null}}};
NTI84227.node = NNI84227;
NTI84281.base = NTI84283;
var NNI84231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI84561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI84563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI84565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI43042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI84229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI84229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI84229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI43042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI84227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI43042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI84229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI84229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI43042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI84281, name: "style", sons: null}]};
NTI84231.node = NNI84231;
var NNI84205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI84372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI84376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI84380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI84384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI84388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI84392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI84396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI84400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI84404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI84408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI84412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI84416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI84420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI84424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI84428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI84432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI84436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI84440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI84444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI84448, name: "onunload", sons: null}]};
NTI84205.node = NNI84205;
NTI84205.base = NTI46408;
NTI84231.base = NTI84205;
NTI84229.base = NTI84231;
var NNI209015 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI209015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI209015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI209015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI209015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI209015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI209015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI209015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI209015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI209015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI209015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI209015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI209015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI209015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI209015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI209015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI209015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI209015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI209015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI209015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI209015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI209015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI209015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI209015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI209015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI209015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI209015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI209015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI209015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI209015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI209015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI209015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI209015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI209015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI209015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI209015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI209015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI209015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI209015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI209015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI209015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI209015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI209015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI209015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI209015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI209015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI209015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI209015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI209015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI209015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI209015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI209015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI209015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI209015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI209015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI209015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI209015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI209015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI209015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI209015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI209015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI209015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI209015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI209015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI209015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI209015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI209015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI209015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI209015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI209015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI209015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI209015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI209015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI209015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI209015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI209015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI209015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI209015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI209015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI209015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI209015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI209015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI209015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI209015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI209015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI209015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI209015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI209015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI209015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI209015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI209015, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI209015, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI209015, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI209015, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI209015, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI209015, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI209015, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI209015, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI209015, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI209015, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI209015, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI209015, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI209015, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI209015, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI209015, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI209015, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI209015, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI209015, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI209015, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI209015, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI209015, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI209015, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI209015, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI209015, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI209015, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI209015, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI209015, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI209015, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI209015, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI209015, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI209015, name: "menu", len: 0, sons: null}}};
NTI209015.node = NNI209015;
NTI209720.base = NTI209705;
NTI209722.base = NTI43042;
var NNI209137 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI209137, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI209137, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI209137, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI209137, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI209137, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI209137, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI209137, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI209137, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI209137, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI209137, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI209137, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI209137, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI209137, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI209137, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI209137, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI209137, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI209137, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI209137, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI209137, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI209137, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI209137, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI209137, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI209137, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI209137, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI209137, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI209137, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI209137, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI209137, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI209137, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI209137, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI209137, name: "onkeyuplater", len: 0, sons: null}}};
NTI209137.node = NNI209137;
var NNI209713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI209137, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI209757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI209761, name: "Field2", sons: null}]};
NTI209713.node = NNI209713;
NTI209701.base = NTI209713;
var NNI96084 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI96084.node = NNI96084;
NTI96085.base = NTI96084;
var NNI209714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI209015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI43006, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI43042, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI43042, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI43042, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI209720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI209722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI209701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI96085, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI84229, name: "dom", sons: null}]};
NTI209714.node = NNI209714;
NTI209714.base = NTI46408;
NTI209705.base = NTI209714;
var NNI230209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI230207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI84229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI84229, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI209705, name: "n", sons: null}]};
NTI230209.node = NNI230209;
var NNI230211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI209705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI209705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI43006, name: "pos", sons: null}]};
NTI230211.node = NNI230211;
NTI254480.base = NTI43042;
NTI254526.base = NTI43042;
var NNI254412 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seed", len: 0, typ: NTI43042, name: "seed", sons: null}, 
{kind: 1, offset: "gen", len: 0, typ: NTI43042, name: "gen", sons: null}, 
{kind: 1, offset: "tag", len: 0, typ: NTI43042, name: "tag", sons: null}, 
{kind: 1, offset: "orig", len: 0, typ: NTI43042, name: "orig", sons: null}, 
{kind: 1, offset: "sv", len: 0, typ: NTI43042, name: "sv", sons: null}]};
NTI254412.node = NNI254412;
NTI254411.base = NTI254412;
NTI254633.base = NTI254411;
NTI254648.base = NTI43042;
NTI254452.base = NTI43042;
var NNI254448 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI43006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI43042, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI43032, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI254452, name: "Field3", sons: null}]};
NTI254448.node = NNI254448;
NTI254663.base = NTI254448;
NTI210588.base = NTI43042;
var NNI46462 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46462.node = NNI46462;
NTI46462.base = NTI46428;
var NNI113907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI43006, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI43006, name: "b", sons: null}]};
NTI113907.node = NNI113907;
var NNI151247 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI148432, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI43006, name: "b", sons: null}]};
NTI151247.node = NNI151247;
NTI199476.base = NTI43040;
NTI256609.base = NTI43042;
NTI256624.base = NTI254448;
NTI256072.base = NTI254448;
NTI256095.base = NTI43042;
NTI256135.base = NTI43042;
NTI256150.base = NTI43042;
NTI256340.base = NTI254448;
NTI256415.base = NTI43042;
NTI256451.base = NTI43042;
var NNI46444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI46444.node = NNI46444;
NTI46444.base = NTI46442;
NTI256486.base = NTI254448;
NTI256501.base = NTI43042;
NTI256270.base = NTI43042;

function toJSStr(s_64304) {
										var Tmp5;
						var Tmp7;

	var result_64305 = null;

		var res_64363 = new_seq_64336((s_64304 != null ? s_64304.length : 0));
		var i_64365 = 0;
		var j_64367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_64365 < (s_64304 != null ? s_64304.length : 0))) break L2;
					var c_64368 = s_64304[i_64365];
					if ((c_64368 < 128)) {
					res_64363[j_64367] = String.fromCharCode(c_64368);
					i_64365 += 1;
					}
					else {
						var helper_64391 = new_seq_64336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_64392 = c_64368.toString(16);
									if (((code_64392 != null ? code_64392.length : 0) == 1)) {
									if (helper_64391 != null) { helper_64391.push("%0"); } else { helper_64391 = ["%0"]; };
									}
									else {
									if (helper_64391 != null) { helper_64391.push("%"); } else { helper_64391 = ["%"]; };
									}
									
									if (helper_64391 != null) { helper_64391.push(code_64392); } else { helper_64391 = [code_64392]; };
									i_64365 += 1;
										if (((s_64304 != null ? s_64304.length : 0) <= i_64365)) Tmp5 = true; else {											Tmp5 = (s_64304[i_64365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_64368 = s_64304[i_64365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_64363[j_64367] = decodeURIComponent(helper_64391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_64363[j_64367] = helper_64391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_64367 += 1;
				}
		} while(false);
		if (res_64363 === null) res_64363 = [];
               if (res_64363.length < j_64367) { for (var i=res_64363.length;i<j_64367;++i) res_64363.push(null); }
               else { res_64363.length = j_64367; };
		result_64305 = res_64363.join("");

	return result_64305;

}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function makeNimstrLit(c_64270) {
		  var ln = c_64270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_64270.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_65827, src_65828, ti_65829) {
	var result_66019 = null;

		switch (ti_65829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_65801(ti_65829))) {
			result_66019 = src_65828;
			}
			else {
				result_66019 = [src_65828[0], src_65828[1]];
			}
			
			break;
		case 19:
			      if (dest_65827 === null || dest_65827 === undefined) {
        dest_65827 = {};
      }
      else {
        for (var key in dest_65827) { delete dest_65827[key]; }
      }
      for (var key in src_65828) { dest_65827[key] = src_65828[key]; }
      result_66019 = dest_65827;
    
			break;
		case 18:
		case 17:
			if (!((ti_65829.base == null))) {
			result_66019 = nimCopy(dest_65827, src_65828, ti_65829.base);
			}
			else {
			if ((ti_65829.kind == 17)) {
			result_66019 = (dest_65827 === null || dest_65827 === undefined) ? {m_type: ti_65829} : dest_65827;
			}
			else {
				result_66019 = (dest_65827 === null || dest_65827 === undefined) ? {} : dest_65827;
			}
			}
			nimCopyAux(result_66019, src_65828, ti_65829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_65828 === null) {
        result_66019 = null;
      }
      else {
        if (dest_65827 === null || dest_65827 === undefined) {
          dest_65827 = new Array(src_65828.length);
        }
        else {
          dest_65827.length = src_65828.length;
        }
        result_66019 = dest_65827;
        for (var i = 0; i < src_65828.length; ++i) {
          result_66019[i] = nimCopy(result_66019[i], src_65828[i], ti_65829.base);
        }
      }
    
			break;
		case 28:
			      if (src_65828 !== null) {
        result_66019 = src_65828.slice(0);
      }
    
			break;
		default: 
			result_66019 = src_65828;
			break;
		}

	return result_66019;

}

function cstrToNimstr(c_64287) {
		  var ln = c_64287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_64287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_64287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function reprEnum(e_66880, typ_66881) {
	var result_66882 = null;

		if (!(is_undefined_66883(typ_66881.node.sons[e_66880]))) {
		result_66882 = nimCopy(null, makeNimstrLit(typ_66881.node.sons[e_66880].name), NTI43040);
		}
		else {
			result_66882 = nimCopy(null, (cstrToNimstr((e_66880)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI43040);
		}
		

	return result_66882;

}

function raiseException(e_62618, ename_62619) {
		e_62618.name = ename_62619;
		if ((excHandler == 0)) {
		unhandledException(e_62618);
		}
		
		throw e_62618;

	
}

function addInt(a_64803, b_64804) {
		    var result = a_64803 + b_64804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_209689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];

function chckIndx(i_66105, a_66106, b_66107) {
			var Tmp1;

	var result_66108 = 0;

	BeforeRet: do {
			if (!(a_66106 <= i_66105)) Tmp1 = false; else {				Tmp1 = (i_66105 <= b_66107);			}		if (Tmp1) {
		result_66108 = i_66105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_66105, a_66106, b_66107);
		}
		
	} while (false);

	return result_66108;

}

function subInt(a_64821, b_64822) {
		    var result = a_64821 - b_64822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_event_name_209695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function nimMin(a_65203, b_65204) {
		var Tmp1;

	var result_65205 = 0;

	BeforeRet: do {
		if ((a_65203 <= b_65204)) {
		Tmp1 = a_65203;
		}
		else {
		Tmp1 = b_65204;
		}
		
		result_65205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_65205;

}

function mnewString(len_64463) {
		    return new Array(len_64463);
  

	
}

function chckRange(i_66124, a_66125, b_66126) {
			var Tmp1;

	var result_66127 = 0;

	BeforeRet: do {
			if (!(a_66125 <= i_66124)) Tmp1 = false; else {				Tmp1 = (i_66124 <= b_66126);			}		if (Tmp1) {
		result_66127 = i_66124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_66127;

}

function nimMax(a_65221, b_65222) {
		var Tmp1;

	var result_65223 = 0;

	BeforeRet: do {
		if ((b_65222 <= a_65221)) {
		Tmp1 = a_65221;
		}
		else {
		Tmp1 = b_65222;
		}
		
		result_65223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_65223;

}

function addChar(x_66311, c_66312) {
		x_66311.push(c_66312);

	
}

function eqStrings(a_64641, b_64642) {
		    if (a_64641 == b_64642) return true;
    if (a_64641 === null && b_64642.length == 0) return true;
    if (b_64642 === null && a_64641.length == 0) return true;
    if ((!a_64641) || (!b_64642)) return false;
    var alen = a_64641.length;
    if (alen != b_64642.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_64641[i] != b_64642[i]) return false;
    return true;
  

	
}

function reprAny(p_67374, p_67374_Idx, typ_67375) {
	var result_67376 = [null];

		var cl_67377 = [{recDepth: 0, indent: 0}];
		init_repr_closure_67147(cl_67377[0]);
		result_67376[0] = nimCopy(null, [], NTI43040);
		repr_aux_67165(result_67376, 0, p_67374, p_67374_Idx, typ_67375, cl_67377[0]);
		if (result_67376[0] != null) { result_67376[0] = (result_67376[0]).concat(makeNimstrLit("\x0A")); } else { result_67376[0] = makeNimstrLit("\x0A"); };

	return result_67376[0];

}

function modInt(a_64875, b_64876) {
		    if (b_64876 == 0) raiseDivByZero();
    if (b_64876 == -1 && a_64875 == 2147483647) raiseOverflow();
    return Math.trunc(a_64875 % b_64876);
  

	
}

function nimBoolToStr(x_62045) {
	var result_62046 = null;

		if (x_62045) {
		result_62046 = nimCopy(null, makeNimstrLit("true"), NTI43040);
		}
		else {
			result_62046 = nimCopy(null, makeNimstrLit("false"), NTI43040);
		}
		

	return result_62046;

}
var nim_program_result = 0;
var global_raise_hook_59618 = [null];
var local_raise_hook_59623 = [null];
var out_of_mem_hook_59626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_210495 = [0];
var object_id_214437 = [0];
var vcomponents_223026 = [{}];
var kxi_230324 = [null];
var app_inst_254014 = [null];
var current_import_type_254037 = [0];
var current_protect_type_254043 = [0];
var show_scan_seed_btn_254061 = [true];
var show_scanning_254062 = [true];
var show_cam_tools_254063 = [true];
var show_scan_result_254064 = [false];
var show_scan_seed_btn2_254065 = [true];
var show_scanning2_254066 = [true];
var show_cam_tools2_254067 = [true];
var show_scan_result2_254068 = [false];
var show_page1_254069 = [true];
var show_page2_254070 = [false];
var show_page3_254071 = [false];
var show_page4_254072 = [false];
var mnemonic_fulfill_254073 = [false];
var key_card_fulfill_254074 = [false];
var passphrase_fulfill_254075 = [false];
var supress_redraw_254076 = [false];
var show_recv_address_selector_254077 = [true];
var show_recv_address_modal_254078 = [true];
var show_trade_logs_254079 = [false];
var show_settings_254080 = [false];
var jsViewSelector = function() {}


function new_seq_64336(len_64339) {
	var result_64341 = null;

		result_64341 = new Array(len_64339); for (var i=0;i<len_64339;++i) {result_64341[i]=null;}
	return result_64341;

}

function is_undefined_66883(x_66886) {
	var result_66887 = false;

		result_66887 = x_66886 === undefined;

	return result_66887;

}

function is_fat_pointer_65801(ti_65803) {
	var result_65804 = false;

	BeforeRet: do {
		result_65804 = !((ConstSet1[ti_65803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_65804;

}

function nimCopyAux(dest_65832, src_65833, n_65835) {
		switch (n_65835.kind) {
		case 0:
			break;
		case 1:
			      dest_65832[n_65835.offset] = nimCopy(dest_65832[n_65835.offset], src_65833[n_65835.offset], n_65835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_65835.sons.length; i++) {
      nimCopyAux(dest_65832, src_65833, n_65835.sons[i]);
    }
    
			break;
		case 3:
			      dest_65832[n_65835.offset] = nimCopy(dest_65832[n_65835.offset], src_65833[n_65835.offset], n_65835.typ);
      for (var i = 0; i < n_65835.sons.length; ++i) {
        nimCopyAux(dest_65832, src_65833, n_65835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_59638(x_59641, x_59641_Idx, y_59642) {
		      if (x_59641[x_59641_Idx] === null) { x_59641[x_59641_Idx] = []; }
      var off = x_59641[x_59641_Idx].length;
      x_59641[x_59641_Idx].length += y_59642.length;
      for (var i = 0; i < y_59642.length; ++i) {
        x_59641[x_59641_Idx][off+i] = y_59642.charCodeAt(i);
      }
    

	
}

function unhandledException(e_62529) {
		var buf_62530 = [[]];
		if (!(((e_62529.message != null ? e_62529.message.length : 0) == 0))) {
		if (buf_62530[0] != null) { buf_62530[0] = (buf_62530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_62530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_62530[0] != null) { buf_62530[0] = (buf_62530[0]).concat(e_62529.message); } else { buf_62530[0] = e_62529.message.slice(); };
		}
		else {
		if (buf_62530[0] != null) { buf_62530[0] = (buf_62530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_62530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_62530[0] != null) { buf_62530[0] = (buf_62530[0]).concat(makeNimstrLit(" [")); } else { buf_62530[0] = makeNimstrLit(" ["); };
		add_59638(buf_62530, 0, e_62529.name);
		if (buf_62530[0] != null) { buf_62530[0] = (buf_62530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_62530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_62601 = toJSStr(buf_62530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_62601);
  }
  else {
    throw cbuf_62601;
  }
  

	
}

function raiseOverflow() {
		var eHEX60gensym63058_63203 = null;
		eHEX60gensym63058_63203 = {m_type: NTI46446, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym63058_63203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI43040);
		eHEX60gensym63058_63203.parent = null;
		raiseException(eHEX60gensym63058_63203, "OverflowError");

	
}

function sys_fatal_56662(message_56666) {
		var e_56803 = null;
		e_56803 = {m_type: NTI46450, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_56803.message = nimCopy(null, message_56666, NTI43040);
		raiseException(e_56803, "AssertionError");

	
}

function raise_assert_56658(msg_56660) {
		sys_fatal_56662(msg_56660);

	
}

function failed_assert_impl_56866(msg_56868) {
		raise_assert_56658(msg_56868);

	
}

function raiseIndexError(i_63655, a_63656, b_63657) {
		var Tmp1;

		var eHEX60gensym63802_64003 = null;
		eHEX60gensym63802_64003 = {m_type: NTI46458, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_63657 < a_63656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_63655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_63656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_63657)+"") || []);
		}
		
		eHEX60gensym63802_64003.message = nimCopy(null, Tmp1, NTI43040);
		eHEX60gensym63802_64003.parent = null;
		raiseException(eHEX60gensym63802_64003, "IndexError");

	
}

function valueHEX3D_209839(n_209841, v_209842) {
		n_209841.text = v_209842;

	
}

function value_209822(n_209824) {
	var result_209825 = null;

		result_209825 = n_209824.text;

	return result_209825;

}

function wrap_event_230390(d_230392, n_230393, k_230394, action_230395) {

			function later_wrapper_230827() {

					function HEX3Aanonymous_230833(ev_230835) {

							function wrapper_230836() {
									var vHEX60gensym230838_230839 = ev_230835.target.value;
									valueHEX3D_209839(n_230831, vHEX60gensym230838_230839);
									if (!(!((action_230830 == null)))) {
									failed_assert_impl_56866(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
									}
									
									action_230830(ev_230835, n_230831);
									if (!((value_209822(n_230831) == vHEX60gensym230838_230839))) {
									ev_230835.target.value = value_209822(n_230831);
									}
									

								
							}

							if (!((timer_230832 == null))) {
							clearTimeout(timer_230832);
							}
							
							timer_230832 = setTimeout(wrapper_230836, 400);

						
					}

				var result_230829 = null;

					var action_230830 = action_230395;
					var n_230831 = n_230393;
					var timer_230832 = null;
					result_230829 = HEX3Aanonymous_230833;

				return result_230829;

			}

			function enter_wrapper_230657() {

					function HEX3Aanonymous_230662(ev_230664) {
							if ((ev_230664.keyCode == 13)) {
							var vHEX60gensym230665_230666 = ev_230664.target.value;
							valueHEX3D_209839(n_230661, vHEX60gensym230665_230666);
							if (!(!((action_230660 == null)))) {
							failed_assert_impl_56866(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
							}
							
							action_230660(ev_230664, n_230661);
							if (!((value_209822(n_230661) == vHEX60gensym230665_230666))) {
							ev_230664.target.value = value_209822(n_230661);
							}
							
							}
							

						
					}

				var result_230659 = null;

					var action_230660 = action_230395;
					var n_230661 = n_230393;
					result_230659 = HEX3Aanonymous_230662;

				return result_230659;

			}

			function std_wrapper_230397() {

					function HEX3Aanonymous_230402(ev_230404) {
								var Tmp1;
								var Tmp2;

								if ((n_230401.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_230401.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_230401.kind == 107);								}							if (Tmp1) {
							var vHEX60gensym230423_230424 = ev_230404.target.value;
							valueHEX3D_209839(n_230401, vHEX60gensym230423_230424);
							if (!(!((action_230400 == null)))) {
							failed_assert_impl_56866(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
							}
							
							action_230400(ev_230404, n_230401);
							if (!((value_209822(n_230401) == vHEX60gensym230423_230424))) {
							ev_230404.target.value = value_209822(n_230401);
							}
							
							}
							else {
							action_230400(ev_230404, n_230401);
							}
							

						
					}

				var result_230399 = null;

					var action_230400 = action_230395;
					var n_230401 = n_230393;
					result_230399 = HEX3Aanonymous_230402;

				return result_230399;

			}

	var result_230396 = null;

		switch (k_230394) {
		case 30:
			result_230396 = later_wrapper_230827();
			d_230392.addEventListener("keyup", result_230396, false);
			break;
		case 29:
			result_230396 = enter_wrapper_230657();
			d_230392.addEventListener("keyup", result_230396, false);
			break;
		default: 
			result_230396 = std_wrapper_230397();
			d_230392.addEventListener(to_event_name_209695[chckIndx(k_230394, 0, to_event_name_209695.length+0-1)-0], result_230396, false);
			break;
		}

	return result_230396;

}

function apply_events_231086(n_231088) {
		var dest_231089 = n_231088.dom;
		L1: do {
			var i_231102 = 0;
			var colontmp__254202 = 0;
			colontmp__254202 = (n_231088.events != null ? n_231088.events.length : 0);
			var i_254203 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_254203 < colontmp__254202)) break L3;
						i_231102 = i_254203;
						n_231088.events[chckIndx(i_231102, 0, n_231088.events.length+0-1)-0]["Field2"] = wrap_event_230390(dest_231089, n_231088, n_231088.events[chckIndx(i_231102, 0, n_231088.events.length+0-1)-0]["Field0"], n_231088.events[chckIndx(i_231102, 0, n_231088.events.length+0-1)-0]["Field1"]);
						i_254203 = addInt(i_254203, 1);
					}
			} while(false);
		} while(false);

	
}

function apply_style_99025(n_99027, s_99028) {
		n_99027.style = {};
		L1: do {
			var i_99221 = 0;
			var colontmp__254214 = 0;
			colontmp__254214 = subInt(s_99028.length, 1);
			var res_254215 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_254215 <= colontmp__254214)) break L3;
						i_99221 = res_254215;
						n_99027.style[s_99028[i_99221]] = s_99028[addInt(i_99221, 1)];
						res_254215 = addInt(res_254215, 2);
					}
			} while(false);
		} while(false);

	
}

function vnode_to_dom_231167(n_231169, kxi_231170) {
			var Tmp9;
			var Tmp10;

	var result_231171 = null;

	BeforeRet: do {
		if ((n_231169.kind == 0)) {
		result_231171 = document.createTextNode(n_231169.text);
		n_231169.dom = result_231171;
		if (!((n_231169.id == null))) {
		kxi_230324[0].byId[n_231169.id] = n_231169;
		}
		
		}
		else {
		if ((n_231169.kind == 6)) {
		result_231171 = document.createElement("div");
		result_231171.innerHTML = n_231169.text;
		n_231169.dom = result_231171;
		if (!((n_231169.id == null))) {
		kxi_230324[0].byId[n_231169.id] = n_231169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_231169.kind == 3)) {
		var x_231234 = vcomponents_223026[0][n_231169.text](n_231169.kids);
		result_231171 = vnode_to_dom_231167(x_231234, kxi_231170);
		n_231169.dom = result_231171;
		if (!((n_231169.id == null))) {
		kxi_230324[0].byId[n_231169.id] = n_231169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_231169.kind == 4)) {
		result_231171 = n_231169.dom;
		if (!(!((result_231171 == null)))) {
		failed_assert_impl_56866(makeNimstrLit("karax.nim(154, 12) `result != nil` "));
		}
		
		n_231169.dom = result_231171;
		if (!((n_231169.id == null))) {
		kxi_230324[0].byId[n_231169.id] = n_231169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_231169.kind == 5)) {
		var x_231422 = n_231169;
		if (!((x_231422.onAttachImpl == null))) {
		x_231422.onAttachImpl(x_231422);
		}
		
		if (!(!((x_231422.renderImpl == null)))) {
		failed_assert_impl_56866(makeNimstrLit("karax.nim(161, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_231422.expanded == null)) {
		x_231422.expanded = x_231422.renderImpl(x_231422);
		}
		
		if (!(!((x_231422.expanded == null)))) {
		failed_assert_impl_56866(makeNimstrLit("karax.nim(165, 12) `x.expanded != nil` "));
		}
		
		result_231171 = vnode_to_dom_231167(x_231422.expanded, kxi_231170);
		n_231169.dom = result_231171;
		if (!((n_231169.id == null))) {
		kxi_230324[0].byId[n_231169.id] = n_231169;
		}
		
		break BeforeRet;
		}
		else {
			result_231171 = document.createElement(to_tag_209689[chckIndx(n_231169.kind, 0, to_tag_209689.length+0-1)-0]);
			n_231169.dom = result_231171;
			if (!((n_231169.id == null))) {
			kxi_230324[0].byId[n_231169.id] = n_231169;
			}
			
			L1: do {
				var k_231831 = null;
				L2: do {
					var i_254172 = 0;
					var colontmp__254173 = 0;
					colontmp__254173 = (n_231169.kids != null ? n_231169.kids.length : 0);
					var i_254174 = 0;
					L3: do {
							L4: while (true) {
							if (!(i_254174 < colontmp__254173)) break L4;
								i_254172 = i_254174;
								k_231831 = n_231169.kids[chckIndx(i_254172, 0, n_231169.kids.length+0-1)-0];
								result_231171.appendChild(vnode_to_dom_231167(k_231831, kxi_231170));
								i_254174 = addInt(i_254174, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_231169.text == null))) {
			result_231171.value = n_231169.text;
			}
			
		}
		}}}}
		if (!((n_231169.id == null))) {
		result_231171.id = n_231169.id;
		}
		
		if (!((n_231169.class == null))) {
		result_231171.className = n_231169.class;
		}
		
		L5: do {
			var k_231832 = null;
			var v_231833 = null;
			L6: do {
				var i_254185 = 0;
				var colontmp__254186 = 0;
				colontmp__254186 = subInt((n_231169.attrs != null ? n_231169.attrs.length : 0), 2);
				var res_254187 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_254187 <= colontmp__254186)) break L8;
							i_254185 = res_254187;
							k_231832 = n_231169.attrs[chckIndx(i_254185, 0, n_231169.attrs.length+0-1)-0];
							v_231833 = n_231169.attrs[chckIndx(addInt(i_254185, 1), 0, n_231169.attrs.length+0-1)-0];
							if (!((v_231833 == null))) {
							result_231171.setAttribute(k_231832, v_231833);
							}
							
							res_254187 = addInt(res_254187, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		apply_events_231086(n_231169);
			if (!!((kxi_231170 == null))) Tmp10 = false; else {				Tmp10 = (n_231169 == kxi_231170.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_231170.toFocus == null);			}		if (Tmp9) {
		kxi_231170.toFocus = result_231171;
		}
		
		if (!((n_231169.style == null))) {
		apply_style_99025(result_231171, n_231169.style);
		}
		
	} while (false);

	return result_231171;

}

function replace_by_id_232012(id_232014, new_tree_232015) {
		var x_232016 = document.getElementById(id_232014);
		x_232016.parentNode.replaceChild(new_tree_232015, x_232016);
		new_tree_232015.id = id_232014;

	
}

function len_210728(x_210730) {
	var result_210731 = 0;

		result_210731 = (x_210730.kids != null ? x_210730.kids.length : 0);

	return result_210731;

}

function HEX5BHEX5D_210750(x_210752, idx_210753) {
	var result_210754 = null;

		result_210754 = x_210752.kids[chckIndx(idx_210753, 0, x_210752.kids.length+0-1)-0];

	return result_210754;

}

function same_231920(n_231922, e_231923, nesting_231924) {
			var Tmp1;
			var Tmp2;

	var result_231926 = false;

	BeforeRet: do {
		if (kxi_230324[0].orphans.hasOwnProperty(n_231922.id)) {
		result_231926 = true;
		break BeforeRet;
		}
		
		if ((n_231922.kind == 5)) {
		result_231926 = same_231920(n_231922.expanded, e_231923, addInt(nesting_231924, 1));
		}
		else {
		if ((n_231922.kind == 6)) {
		result_231926 = true;
		}
		else {
			if ((n_231922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_231922.kind == 4);			}		if (Tmp1) {
		result_231926 = true;
		}
		else {
		if ((to_tag_209689[chckIndx(n_231922.kind, 0, to_tag_209689.length+0-1)-0] == e_231923.nodeName)) {
		result_231926 = true;
		if (!((n_231922.kind == 0))) {
			if (!!((e_231923.childNodes.length == len_210728(n_231922)))) Tmp2 = false; else {				Tmp2 = !((n_231922.kind == 111));			}		if (Tmp2) {
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_210728(n_231922))+""), makeNimstrLit(" real "), cstrToNimstr((e_231923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_209689[chckIndx(n_231922.kind, 0, to_tag_209689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_231924)+""));
		result_231926 = false;
		break BeforeRet;
		}
		
		L3: do {
			var i_231994 = 0;
			var colontmp__254221 = 0;
			colontmp__254221 = len_210728(n_231922);
			var i_254222 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_254222 < colontmp__254221)) break L5;
						i_231994 = i_254222;
						if (!(same_231920(HEX5BHEX5D_210750(n_231922, i_231994), e_231923.childNodes[i_231994], addInt(nesting_231924, 1)))) {
						result_231926 = false;
						break BeforeRet;
						}
						
						i_254222 = addInt(i_254222, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_209689[chckIndx(n_231922.kind, 0, to_tag_209689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_231923.nodeName));
		}
		}}}
	} while (false);

	return result_231926;

}

function eq_97814(a_97816, b_97817) {
	var result_97818 = false;

	BeforeRet: do {
		if ((a_97816 == null)) {
		if ((b_97817 == null)) {
		result_97818 = true;
		break BeforeRet;
		}
		else {
			result_97818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_97817 == null)) {
		result_97818 = false;
		break BeforeRet;
		}
		}
		if (!((a_97816.length == b_97817.length))) {
		result_97818 = false;
		break BeforeRet;
		}
		
		L1: do {
			var i_97916 = 0;
			var colontmp__254259 = 0;
			colontmp__254259 = a_97816.length;
			var i_254260 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_254260 < colontmp__254259)) break L3;
						i_97916 = i_254260;
						if (!((a_97816[i_97916] == b_97817[i_97916]))) {
						result_97818 = false;
						break BeforeRet;
						}
						
						i_254260 = addInt(i_254260, 1);
					}
			} while(false);
		} while(false);
		result_97818 = true;
		break BeforeRet;
	} while (false);

	return result_97818;

}

function same_attrs_212480(a_212482, b_212483) {
	var result_212484 = false;

	BeforeRet: do {
		if (((a_212482.attrs != null ? a_212482.attrs.length : 0) == (b_212483.attrs != null ? b_212483.attrs.length : 0))) {
		result_212484 = true;
		L1: do {
			var i_212507 = 0;
			var colontmp__254264 = 0;
			colontmp__254264 = (a_212482.attrs != null ? a_212482.attrs.length : 0);
			var i_254265 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_254265 < colontmp__254264)) break L3;
						i_212507 = i_254265;
						if (!((a_212482.attrs[chckIndx(i_212507, 0, a_212482.attrs.length+0-1)-0] == b_212483.attrs[chckIndx(i_212507, 0, b_212483.attrs.length+0-1)-0]))) {
						result_212484 = false;
						break BeforeRet;
						}
						
						i_254265 = addInt(i_254265, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);

	return result_212484;

}

function eq_232214(a_232216, b_232217) {
			var Tmp4;
			var Tmp5;

	var result_232218 = 0;

	BeforeRet: do {
		if (!((a_232216.kind == b_232217.kind))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		if (!((a_232216.id == b_232217.id))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		result_232218 = 3;
		if (!((a_232216.index == b_232217.index))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		if ((a_232216.kind == 0)) {
		if (!((a_232216.text == b_232217.text))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_232216.kind == 3)) {
		if (!((a_232216.text == b_232217.text))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		if (!((len_210728(a_232216) == len_210728(b_232217)))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			var i_233014 = 0;
			var colontmp__254254 = 0;
			colontmp__254254 = len_210728(a_232216);
			var i_254255 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_254255 < colontmp__254254)) break L3;
						i_233014 = i_254255;
						if ((eq_232214(HEX5BHEX5D_210750(a_232216, i_233014), HEX5BHEX5D_210750(b_232217, i_233014)) == 1)) {
						result_232218 = 1;
						break BeforeRet;
						}
						
						i_254255 = addInt(i_254255, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_232216.kind == 4)) {
		result_232218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_232216.kind == 6)) {
		if (!((a_232216.text == b_232217.text))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_232217.kind == 5)) {
		if (!((a_232216.text == b_232217.text))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		if (!((a_232216.key == b_232217.key))) {
		result_232218 = 1;
		break BeforeRet;
		}
		
		result_232218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_232216.class == b_232217.class))) Tmp5 = true; else {				Tmp5 = !(eq_97814(a_232216.style, b_232217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_212480(a_232216, b_232217));			}		if (Tmp4) {
		result_232218 = 2;
		break BeforeRet;
		}
		
		break BeforeRet;
	} while (false);

	return result_232218;

}

function update_styles_233629(new_node_233631, old_node_233632) {
		if (!((old_node_233632.dom == null))) {
		if (!((new_node_233631.style == null))) {
		apply_style_99025(old_node_233632.dom, new_node_233631.style);
		}
		else {
			old_node_233632.dom.style = {m_type: NTI84283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, opacity: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		old_node_233632.dom.className = new_node_233631.class;
		}
		
		old_node_233632.style = new_node_233631.style;
		old_node_233632.class = new_node_233631.class;

	
}

function take_over_attr_210660(new_node_210662, old_node_210663) {
		old_node_210663.attrs = new_node_210662.attrs;

	
}

function update_attributes_233677(new_node_233679, old_node_233680) {
		if (!((old_node_233680.dom == null))) {
		L1: do {
			var k_233689 = null;
			var __233690 = null;
			L2: do {
				var i_254271 = 0;
				var colontmp__254272 = 0;
				colontmp__254272 = subInt((old_node_233680.attrs != null ? old_node_233680.attrs.length : 0), 2);
				var res_254273 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_254273 <= colontmp__254272)) break L4;
							i_254271 = res_254273;
							k_233689 = old_node_233680.attrs[chckIndx(i_254271, 0, old_node_233680.attrs.length+0-1)-0];
							__233690 = old_node_233680.attrs[chckIndx(addInt(i_254271, 1), 0, old_node_233680.attrs.length+0-1)-0];
							old_node_233680.dom.removeAttribute(k_233689);
							res_254273 = addInt(res_254273, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			var k_233691 = null;
			var v_233692 = null;
			L6: do {
				var i_254279 = 0;
				var colontmp__254280 = 0;
				colontmp__254280 = subInt((new_node_233679.attrs != null ? new_node_233679.attrs.length : 0), 2);
				var res_254281 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_254281 <= colontmp__254280)) break L8;
							i_254279 = res_254281;
							k_233691 = new_node_233679.attrs[chckIndx(i_254279, 0, new_node_233679.attrs.length+0-1)-0];
							v_233692 = new_node_233679.attrs[chckIndx(addInt(i_254279, 1), 0, new_node_233679.attrs.length+0-1)-0];
							if (!((v_233692 == null))) {
							old_node_233680.dom.setAttribute(k_233691, v_233692);
							}
							
							res_254281 = addInt(res_254281, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		take_over_attr_210660(new_node_233679, old_node_233680);

	
}

function merge_events_233706(new_node_233708, old_node_233709, kxi_233710) {
						var Tmp4;

		var d_233711 = old_node_233709.dom;
		L1: do {
			var i_233724 = 0;
			var colontmp__254286 = 0;
			colontmp__254286 = (old_node_233709.events != null ? old_node_233709.events.length : 0);
			var i_254287 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_254287 < colontmp__254286)) break L3;
						i_233724 = i_254287;
						var k_233725 = old_node_233709.events[chckIndx(i_233724, 0, old_node_233709.events.length+0-1)-0]["Field0"];
						switch (k_233725) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_209695[chckIndx(k_233725, 0, to_event_name_209695.length+0-1)-0];
							break;
						}
						var name_233728 = Tmp4;
						d_233711.removeEventListener(name_233728, old_node_233709.events[chckIndx(i_233724, 0, old_node_233709.events.length+0-1)-0]["Field2"]);
						i_254287 = addInt(i_254287, 1);
					}
			} while(false);
		} while(false);
		old_node_233709.events = new_node_233708.events;
		apply_events_231086(old_node_233709);

	
}

function HEX5BHEX5DHEX3D_210768(x_210770, idx_210771, y_210772) {
		x_210770.kids[chckIndx(idx_210771, 0, x_210770.kids.length+0-1)-0] = y_210772;

	
}

function add_patch_v_233868(kxi_233870, parent_233871, pos_233872, new_child_233873) {
		var l_233874 = kxi_233870.patchLenV;
		if (((kxi_233870.patchesV != null ? kxi_233870.patchesV.length : 0) <= l_233874)) {
		if (kxi_233870.patchesV != null) { kxi_233870.patchesV.push({parent: parent_233871, newChild: new_child_233873, pos: pos_233872}); } else { kxi_233870.patchesV = [{parent: parent_233871, newChild: new_child_233873, pos: pos_233872}]; };
		}
		else {
			kxi_233870.patchesV[chckIndx(l_233874, 0, kxi_233870.patchesV.length+0-1)-0].parent = parent_233871;
			kxi_233870.patchesV[chckIndx(l_233874, 0, kxi_233870.patchesV.length+0-1)-0].newChild = new_child_233873;
			kxi_233870.patchesV[chckIndx(l_233874, 0, kxi_233870.patchesV.length+0-1)-0].pos = pos_233872;
		}
		
		kxi_233870.patchLenV = addInt(kxi_233870.patchLenV, 1);

	
}

function add_patch_233814(kxi_233816, ka_233817, parenta_233818, currenta_233819, na_233820) {
		var l_233821 = kxi_233816.patchLen;
		if (((kxi_233816.patches != null ? kxi_233816.patches.length : 0) <= l_233821)) {
		if (kxi_233816.patches != null) { kxi_233816.patches.push({k: ka_233817, parent: parenta_233818, current: currenta_233819, n: na_233820}); } else { kxi_233816.patches = [{k: ka_233817, parent: parenta_233818, current: currenta_233819, n: na_233820}]; };
		}
		else {
			kxi_233816.patches[chckIndx(l_233821, 0, kxi_233816.patches.length+0-1)-0].k = ka_233817;
			kxi_233816.patches[chckIndx(l_233821, 0, kxi_233816.patches.length+0-1)-0].parent = parenta_233818;
			kxi_233816.patches[chckIndx(l_233821, 0, kxi_233816.patches.length+0-1)-0].current = currenta_233819;
			kxi_233816.patches[chckIndx(l_233821, 0, kxi_233816.patches.length+0-1)-0].n = na_233820;
		}
		
		kxi_233816.patchLen = addInt(kxi_233816.patchLen, 1);

	
}

function diff_234045(new_node_234047, old_node_234048, parent_234049, current_234050, kxi_234051) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_234052 = 0;

	BeforeRet: do {
		result_234052 = eq_232214(new_node_234047, old_node_234048);
		switch (result_234052) {
		case 0:
			if (kxi_234051.components != null) { kxi_234051.components.push({oldNode: old_node_234048, newNode: new_node_234047, parent: parent_234049, current: current_234050}); } else { kxi_234051.components = [{oldNode: old_node_234048, newNode: new_node_234047, parent: parent_234049, current: current_234050}]; };
			break;
		case 3:
		case 2:
			new_node_234047.dom = old_node_234048.dom;
			if ((result_234052 == 2)) {
			update_styles_233629(new_node_234047, old_node_234048);
			update_attributes_233677(new_node_234047, old_node_234048);
			if ((old_node_234048.kind == 0)) {
			old_node_234048.text = new_node_234047.text;
			old_node_234048.dom.nodeValue = new_node_234047.text;
			}
			
			}
			
				if (!(((new_node_234047.events != null ? new_node_234047.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_234048.events != null ? old_node_234048.events.length : 0) == 0));				}			if (Tmp1) {
			merge_events_233706(new_node_234047, old_node_234048, kxi_234051);
			}
			
			var new_length_234401 = len_210728(new_node_234047);
			var old_length_234402 = len_210728(old_node_234048);
			if (((new_length_234401 == 0) && (old_length_234402 == 0))) {
			break BeforeRet;
			}
			
			var min_length_234403 = nimMin(new_length_234401, old_length_234402);
			if (!((old_node_234048.kind == new_node_234047.kind))) {
			failed_assert_impl_56866(makeNimstrLit("karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
			}
			
			var common_prefix_234602 = 0;
			if ((old_node_234048.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_234048.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_234048.kind == 4);			}			var is_special_234621 = Tmp2;
			L4: do {
					L5: while (true) {
					if (!(common_prefix_234602 < min_length_234403)) break L5;
						var old_lenHEX60gensym234645_234648 = kxi_234051.patchLen;
						var old_len_vHEX60gensym234646_234649 = kxi_234051.patchLenV;
						if (!((common_prefix_234602 < len_210728(new_node_234047)))) {
						failed_assert_impl_56866(makeNimstrLit("karax.nim(427, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_234602 < len_210728(old_node_234048)))) {
						failed_assert_impl_56866(makeNimstrLit("karax.nim(428, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						if (is_special_234621) {
						Tmp6 = diff_234045(HEX5BHEX5D_210750(new_node_234047, common_prefix_234602), HEX5BHEX5D_210750(old_node_234048, common_prefix_234602), parent_234049, current_234050, kxi_234051);
						}
						else {
						Tmp6 = diff_234045(HEX5BHEX5D_210750(new_node_234047, common_prefix_234602), HEX5BHEX5D_210750(old_node_234048, common_prefix_234602), current_234050, current_234050.childNodes[chckIndx(common_prefix_234602, 0, current_234050.childNodes.length+0-1)-0], kxi_234051);
						}
						
						var rHEX60gensym234647_235005 = Tmp6;
						switch (rHEX60gensym234647_235005) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_210768(new_node_234047, common_prefix_234602, HEX5BHEX5D_210750(old_node_234048, common_prefix_234602));
							common_prefix_234602 = addInt(common_prefix_234602, 1);
							break;
						case 4:
							add_patch_v_233868(kxi_234051, old_node_234048, common_prefix_234602, HEX5BHEX5D_210750(new_node_234047, common_prefix_234602));
							common_prefix_234602 = addInt(common_prefix_234602, 1);
							result_234052 = 4;
							break;
						case 1:
							kxi_234051.patchLen = old_lenHEX60gensym234645_234648;
							kxi_234051.patchLenV = old_len_vHEX60gensym234646_234649;
							if (!((result_234052 == 1))) {
							result_234052 = rHEX60gensym234647_235005;
							}
							
							break L4;
							break;
						}
					}
			} while(false);
			var old_pos_235023 = subInt(old_length_234402, 1);
			var new_pos_235024 = subInt(new_length_234401, 1);
			L7: do {
					L8: while (true) {
						if (!(common_prefix_234602 <= old_pos_235023)) Tmp9 = false; else {							Tmp9 = (common_prefix_234602 <= new_pos_235024);						}					if (!Tmp9) break L8;
						var old_lenHEX60gensym235025_235028 = kxi_234051.patchLen;
						var old_len_vHEX60gensym235026_235029 = kxi_234051.patchLenV;
						if (!((new_pos_235024 < len_210728(new_node_234047)))) {
						failed_assert_impl_56866(makeNimstrLit("karax.nim(427, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_235023 < len_210728(old_node_234048)))) {
						failed_assert_impl_56866(makeNimstrLit("karax.nim(428, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						if (is_special_234621) {
						Tmp10 = diff_234045(HEX5BHEX5D_210750(new_node_234047, new_pos_235024), HEX5BHEX5D_210750(old_node_234048, old_pos_235023), parent_234049, current_234050, kxi_234051);
						}
						else {
						Tmp10 = diff_234045(HEX5BHEX5D_210750(new_node_234047, new_pos_235024), HEX5BHEX5D_210750(old_node_234048, old_pos_235023), current_234050, current_234050.childNodes[chckIndx(old_pos_235023, 0, current_234050.childNodes.length+0-1)-0], kxi_234051);
						}
						
						var rHEX60gensym235027_235405 = Tmp10;
						switch (rHEX60gensym235027_235405) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_210768(new_node_234047, new_pos_235024, HEX5BHEX5D_210750(old_node_234048, old_pos_235023));
							old_pos_235023 = subInt(old_pos_235023, 1);
							new_pos_235024 = subInt(new_pos_235024, 1);
							break;
						case 4:
							add_patch_v_233868(kxi_234051, old_node_234048, old_pos_235023, HEX5BHEX5D_210750(new_node_234047, new_pos_235024));
							old_pos_235023 = subInt(old_pos_235023, 1);
							new_pos_235024 = subInt(new_pos_235024, 1);
							result_234052 = 4;
							break;
						case 1:
							kxi_234051.patchLen = old_lenHEX60gensym235025_235028;
							kxi_234051.patchLenV = old_len_vHEX60gensym235026_235029;
							if (!((result_234052 == 1))) {
							result_234052 = rHEX60gensym235027_235405;
							}
							
							break L7;
							break;
						}
					}
			} while(false);
			var pos_235435 = addInt(nimMin(old_pos_235023, new_pos_235024), 1);
			L11: do {
				var i_235441 = 0;
				var colontmp__254229 = 0;
				colontmp__254229 = subInt(pos_235435, 1);
				var res_254230 = common_prefix_234602;
				L12: do {
						L13: while (true) {
						if (!(res_254230 <= colontmp__254229)) break L13;
							i_235441 = res_254230;
							var r_235442 = diff_234045(HEX5BHEX5D_210750(new_node_234047, i_235441), HEX5BHEX5D_210750(old_node_234048, i_235441), current_234050, current_234050.childNodes[chckIndx(i_235441, 0, current_234050.childNodes.length+0-1)-0], kxi_234051);
							if ((r_235442 == 4)) {
							add_patch_v_233868(kxi_234051, old_node_234048, i_235441, HEX5BHEX5D_210750(new_node_234047, i_235441));
							}
							else {
							if (!((r_235442 == 1))) {
							HEX5BHEX5DHEX3D_210768(new_node_234047, i_235441, HEX5BHEX5D_210750(old_node_234048, i_235441));
							}
							}
							res_254230 = addInt(res_254230, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_235023, 1) == old_length_234402)) {
			L14: do {
				var i_235458 = 0;
				var res_254236 = pos_235435;
				L15: do {
						L16: while (true) {
						if (!(res_254236 <= new_pos_235024)) break L16;
							i_235458 = res_254236;
							add_patch_233814(kxi_234051, 2, current_234050, null, HEX5BHEX5D_210750(new_node_234047, i_235458));
							result_234052 = 4;
							res_254236 = addInt(res_254236, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				var before_235459 = current_234050.childNodes[chckIndx(addInt(old_pos_235023, 1), 0, current_234050.childNodes.length+0-1)-0];
				L17: do {
					var i_235465 = 0;
					var res_254242 = pos_235435;
					L18: do {
							L19: while (true) {
							if (!(res_254242 <= new_pos_235024)) break L19;
								i_235465 = res_254242;
								add_patch_233814(kxi_234051, 3, current_234050, before_235459, HEX5BHEX5D_210750(new_node_234047, i_235465));
								result_234052 = 4;
								res_254242 = addInt(res_254242, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				var i_235471 = 0;
				var res_254248 = pos_235435;
				L21: do {
						L22: while (true) {
						if (!(res_254248 <= old_pos_235023)) break L22;
							i_235471 = res_254248;
							add_patch_233814(kxi_230324[0], 4, null, null, HEX5BHEX5D_210750(old_node_234048, i_235471));
							add_patch_233814(kxi_234051, 1, current_234050, current_234050.childNodes[chckIndx(i_235471, 0, current_234050.childNodes.length+0-1)-0], null);
							result_234052 = 4;
							res_254248 = addInt(res_254248, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			add_patch_233814(kxi_230324[0], 4, null, null, old_node_234048);
			add_patch_233814(kxi_234051, 0, parent_234049, current_234050, new_node_234047);
			break;
		case 4:
			if (true) {
			failed_assert_impl_56866(makeNimstrLit("karax.nim(491, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);

	return result_234052;

}

function apply_components_235814(kxi_235816) {
						var Tmp3;

		var i_235818 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_235818 < (kxi_235816.components != null ? kxi_235816.components.length : 0))) break L2;
					var x_235824 = kxi_235816.components[chckIndx(i_235818, 0, kxi_235816.components.length+0-1)-0].oldNode;
					var new_node_235825 = kxi_235816.components[chckIndx(i_235818, 0, kxi_235816.components.length+0-1)-0].newNode;
						if (!!((x_235824.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_235824.changedImpl(x_235824, new_node_235825);						}					if (Tmp3) {
					var current_236201 = kxi_235816.components[chckIndx(i_235818, 0, kxi_235816.components.length+0-1)-0].current;
					var parent_236202 = kxi_235816.components[chckIndx(i_235818, 0, kxi_235816.components.length+0-1)-0].parent;
					x_235824.updatedImpl(x_235824, new_node_235825);
					var old_expanded_236203 = x_235824.expanded;
					x_235824.expanded = x_235824.renderImpl(x_235824);
					x_235824.renderedVersion = x_235824.version;
					if ((old_expanded_236203 == null)) {
					add_patch_233814(kxi_230324[0], 4, null, null, x_235824);
					add_patch_233814(kxi_235816, 0, parent_236202, current_236201, x_235824.expanded);
					}
					else {
						var res_236601 = diff_234045(x_235824.expanded, old_expanded_236203, parent_236202, current_236201, kxi_235816);
						if ((res_236601 == 4)) {
						}
						else {
						if (!((res_236601 == 1))) {
						x_235824.expanded = old_expanded_236203;
						if (!(!((old_expanded_236203.dom == null)))) {
						failed_assert_impl_56866(makeNimstrLit("karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_235824.expanded.dom == null)))) {
							failed_assert_impl_56866(makeNimstrLit("karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					i_235818 = addInt(i_235818, 1);
				}
		} while(false);
		if (kxi_235816.components === null) kxi_235816.components = [];
               if (kxi_235816.components.length < 0) { for (var i=kxi_235816.components.length;i<0;++i) kxi_235816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_235816.components.length = 0; };

	
}

function apply_patch_233906(kxi_233908) {
		L1: do {
			var i_233916 = 0;
			var colontmp__254294 = 0;
			colontmp__254294 = kxi_233908.patchLen;
			var i_254295 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_254295 < colontmp__254294)) break L3;
						i_233916 = i_254295;
						var p_233917 = nimCopy(null, kxi_233908.patches[chckIndx(i_233916, 0, kxi_233908.patches.length+0-1)-0], NTI230209);
						switch (p_233917.k) {
						case 0:
							var nn_233918 = vnode_to_dom_231167(p_233917.n, kxi_233908);
							if ((p_233917.parent == null)) {
							replace_by_id_232012(kxi_233908.rootId, nn_233918);
							}
							else {
							p_233917.parent.replaceChild(nn_233918, p_233917.current);
							}
							
							break;
						case 1:
							p_233917.parent.removeChild(p_233917.current);
							break;
						case 2:
							var nn_233927 = vnode_to_dom_231167(p_233917.n, kxi_233908);
							p_233917.parent.appendChild(nn_233927);
							break;
						case 3:
							var nn_233928 = vnode_to_dom_231167(p_233917.n, kxi_233908);
							p_233917.parent.insertBefore(nn_233928, p_233917.current);
							break;
						case 4:
							var n_233929 = p_233917.n;
							if (!((n_233929.id == null))) {
							delete kxi_233908.byId[n_233929.id];
							}
							
							if ((n_233929.kind == 5)) {
							var x_233947 = n_233929;
							if (!((x_233947.onDetachImpl == null))) {
							x_233947.onDetachImpl(x_233947);
							}
							
							}
							
							if (!(kxi_233908.surpressRedraws)) {
							n_233929.dom = null;
							}
							
							break;
						}
						i_254295 = addInt(i_254295, 1);
					}
			} while(false);
		} while(false);
		kxi_233908.patchLen = 0;
		L4: do {
			var i_233960 = 0;
			var colontmp__254299 = 0;
			colontmp__254299 = kxi_233908.patchLenV;
			var i_254300 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_254300 < colontmp__254299)) break L6;
						i_233960 = i_254300;
						var p_233961 = nimCopy(null, kxi_233908.patchesV[chckIndx(i_233960, 0, kxi_233908.patchesV.length+0-1)-0], NTI230211);
						HEX5BHEX5DHEX3D_210768(p_233961.parent, p_233961.pos, p_233961.newChild);
						if (!(!((p_233961.newChild.dom == null)))) {
						failed_assert_impl_56866(makeNimstrLit("karax.nim(377, 12) `p.newChild.dom != nil` "));
						}
						
						i_254300 = addInt(i_254300, 1);
					}
			} while(false);
		} while(false);
		kxi_233908.patchLenV = 0;

	
}

function dodraw_238646(kxi_238648) {
	BeforeRet: do {
		if ((kxi_238648.renderer == null)) {
		break BeforeRet;
		}
		
		var rdata_238653 = {hashPart: window.location.hash};
		var newtree_238654 = kxi_238648.renderer(rdata_238653);
		kxi_238648.runCount = addInt(kxi_238648.runCount, 1);
		newtree_238654.id = kxi_238648.rootId;
		kxi_238648.toFocus = null;
		if ((kxi_238648.currentTree == null)) {
		var asdom_238669 = vnode_to_dom_231167(newtree_238654, kxi_238648);
		replace_by_id_232012(kxi_238648.rootId, asdom_238669);
		}
		else {
			if (!(same_231920(kxi_238648.currentTree, document.getElementById(kxi_238648.rootId), 0))) {
			failed_assert_impl_56866(makeNimstrLit("karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			var olddom_238801 = document.getElementById(kxi_238648.rootId);
			diff_234045(newtree_238654, kxi_238648.currentTree, null, olddom_238801, kxi_238648);
		}
		
		apply_components_235814(kxi_238648);
		apply_patch_233906(kxi_238648);
		kxi_238648.currentTree = newtree_238654;
		if (!(same_231920(kxi_238648.currentTree, document.getElementById(kxi_238648.rootId), 0))) {
		failed_assert_impl_56866(makeNimstrLit("karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_238648.postRenderCallback == null))) {
		kxi_238648.postRenderCallback(rdata_238653);
		}
		
		if (!((kxi_238648.toFocus == null))) {
		kxi_238648.toFocus.focus();
		}
		
		kxi_238648.renderId = 0;
	} while (false);

	
}

function redraw_239814(kxi_239816) {

		function HEX3Aanonymous_240001() {
				dodraw_238646(kxi_239816);

			
		}

		if ((kxi_239816.renderId == 0)) {
		kxi_239816.renderId = window.requestAnimationFrame(HEX3Aanonymous_240001);
		}
		

	
}

function view_selector_254124(view_254126, no_redraw_254127) {
		rawEcho(makeNimstrLit("view"), reprEnum(view_254126, NTI254045));
		switch (view_254126) {
		case 0:
			show_scan_seed_btn_254061[0] = true;
			show_scanning_254062[0] = true;
			show_cam_tools_254063[0] = true;
			show_scan_result_254064[0] = false;
			show_page2_254070[0] = false;
			break;
		case 1:
			show_scan_seed_btn_254061[0] = true;
			show_scanning_254062[0] = true;
			show_cam_tools_254063[0] = true;
			show_scan_result_254064[0] = false;
			show_page2_254070[0] = false;
			break;
		case 2:
			show_scan_seed_btn_254061[0] = false;
			show_scanning_254062[0] = true;
			show_cam_tools_254063[0] = true;
			show_scan_result_254064[0] = true;
			show_page2_254070[0] = true;
			break;
		case 3:
			show_page2_254070[0] = false;
			break;
		case 4:
			show_page2_254070[0] = true;
			break;
		case 5:
			show_scan_result_254064[0] = false;
			mnemonic_fulfill_254073[0] = false;
			show_scan_seed_btn2_254065[0] = true;
			show_scanning2_254066[0] = true;
			show_cam_tools2_254067[0] = true;
			show_scan_result2_254068[0] = false;
			show_page1_254069[0] = false;
			show_page2_254070[0] = true;
			break;
		case 8:
			show_scan_seed_btn2_254065[0] = false;
			show_scanning2_254066[0] = true;
			show_cam_tools2_254067[0] = true;
			show_scan_result2_254068[0] = true;
			show_page3_254071[0] = false;
			break;
		case 9:
			show_page3_254071[0] = true;
			break;
		case 11:
			show_page3_254071[0] = true;
			break;
		case 12:
			show_scan_result2_254068[0] = false;
			key_card_fulfill_254074[0] = false;
			passphrase_fulfill_254075[0] = false;
			show_page1_254069[0] = false;
			show_page2_254070[0] = false;
			show_page3_254071[0] = true;
			show_page4_254072[0] = false;
			break;
		case 13:
			show_page1_254069[0] = false;
			show_page2_254070[0] = false;
			show_page3_254071[0] = true;
			show_page4_254072[0] = true;
			show_settings_254080[0] = false;
			show_trade_logs_254079[0] = true;
			break;
		case 14:
			show_page1_254069[0] = false;
			show_page2_254070[0] = false;
			show_page3_254071[0] = true;
			show_page4_254072[0] = true;
			show_trade_logs_254079[0] = false;
			show_settings_254080[0] = true;
			break;
		default: 
			break;
		}
		if (!(no_redraw_254127)) {
		redraw_239814(app_inst_254014[0]);
		}
		

	
}
  jsViewSelector = view_selector_254124;
  function setSupressRedraw(flag) {
    supress_redraw_254076[0] = flag;
  }
  function getSupressRedraw() {
    return supress_redraw_254076[0];
  }


function HEX3Aanonymous_254491(x_254493) {
	var result_254494 = null;

		result_254494 = x_254493;

	return result_254494;

}

function HEX3Aanonymous_254537(x_254539) {
	var result_254540 = null;

		result_254540 = x_254539;

	return result_254540;

}
var seed_card_infos_254427 = [null];
var editing_words_254428 = [""];
var input_words_254429 = [""];
var autocomplete_words_254446 = [[]];
var chklist_254454 = [null];
var prev_check_word_254455 = [""];
var pass_phrase_254456 = [""];
var bip39_254468 = [coinlibs.bip39];
var bip39_wordlist_254479 = [bip39_254468[0].wordlists.japanese];
var wl_japanese_254525 = [nimCopy(null, bip39_254468[0].wordlists.japanese.map((HEX3Aanonymous_254491)), NTI254480)];
var wl_english_254566 = [nimCopy(null, bip39_254468[0].wordlists.english.map((HEX3Aanonymous_254537)), NTI254526)];
var wl_select_254567 = [nimCopy(null, wl_japanese_254525[0], NTI254480)];
var wl_select_id_254569 = [1];

function seed_to_keys_255261() {
		    var wallet = pastel.wallet;
  
		if ((current_import_type_254037[0] == 0)) {
		      wallet.setSeedCard(seed_card_infos_254427[0]);
    
		}
		else {
		if ((current_import_type_254037[0] == 1)) {
		      wallet.setMnemonic(input_words_254429[0], wl_select_id_254569[0]);
    
		}
		}

	
}

function clear_sensitive_254617() {
		seed_card_infos_254427[0] = nimCopy(null, [], NTI254633);
		editing_words_254428[0] = "";
		input_words_254429[0] = "";
		autocomplete_words_254446[0] = nimCopy(null, [], NTI254648);
		chklist_254454[0] = nimCopy(null, [], NTI254663);
		prev_check_word_254455[0] = "";
		pass_phrase_254456[0] = "";

	
}
  jsSeedToKeys = seed_to_keys_255261;
  jsClearSensitive = clear_sensitive_254617;

var key_card_val_255835 = [""];
// https://github.com/gustf/js-levenshtein
var levenshtein = (function()
{
  function _min(d0, d1, d2, bx, ay)
  {
    return d0 < d1 || d2 < d1
        ? d0 > d2
            ? d2 + 1
            : d0 + 1
        : bx === ay
            ? d1
            : d1 + 1;
  }

  return function(a, b)
  {
    if (a === b) {
      return 0;
    }

    if (a.length > b.length) {
      var tmp = a;
      a = b;
      b = tmp;
    }

    var la = a.length;
    var lb = b.length;

    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {
      la--;
      lb--;
    }

    var offset = 0;

    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {
      offset++;
    }

    la -= offset;
    lb -= offset;

    if (la === 0 || lb < 3) {
      return lb;
    }

    var x = 0;
    var y;
    var d0;
    var d1;
    var d2;
    var d3;
    var dd;
    var dy;
    var ay;
    var bx0;
    var bx1;
    var bx2;
    var bx3;

    var vector = [];

    for (y = 0; y < la; y++) {
      vector.push(y + 1);
      vector.push(a.charCodeAt(offset + y));
    }

    var len = vector.length - 1;

    for (; x < lb - 3;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      bx1 = b.charCodeAt(offset + (d1 = x + 1));
      bx2 = b.charCodeAt(offset + (d2 = x + 2));
      bx3 = b.charCodeAt(offset + (d3 = x + 3));
      dd = (x += 4);
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        ay = vector[y + 1];
        d0 = _min(dy, d0, d1, bx0, ay);
        d1 = _min(d0, d1, d2, bx1, ay);
        d2 = _min(d1, d2, d3, bx2, ay);
        dd = _min(d2, d3, dd, bx3, ay);
        vector[y] = dd;
        d3 = d2;
        d2 = d1;
        d1 = d0;
        d0 = dy;
      }
    }

    for (; x < lb;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      dd = ++x;
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);
        d0 = dy;
      }
    }

    return dd;
  };
})();

function levens(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var similars = [];
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    similars.push(data[score]);
    if(result.length > 0 && score > 0.5) {
      break;
    }
    if((result.length == 0 && data[score].length <= 30) || (result.length + data[score].length) <= 7) {
      result = result.concat(data[score]);
    }
  }
  return result;
}
function levens_one(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    if(lev != 1) {
      continue;
    }
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    result = result.concat(data[score]);
  }
  return result;
}

var confirm_mnemonic_advanced_256297 = [false];
  function initSendForm() {
    $('#btn-send-clear').off('click').click(function() {
      $('#send-coins input[name="address"]').val('');
      $('#send-coins input[name="amount"]').val('');
      uriOptions = [];
      jsViewSelector(12);
      $(this).blur();
    });
    $('#btn-send-qrcode').off('click').click(function() {
      qrReaderModal.show(function(uri) {
        var data = bip21reader(uri);
        $('#send-coins input[name="address"]').val(data.address || '');
        $('#send-coins input[name="amount"]').val(data.amount || '');
        uriOptions = [];
        for(var k in data) {
          var p = data[k];
          if(k == 'address' || k == 'amount') {
            continue;
          }
          var key = crlftab_to_html(k);
          key = key.charAt(0).toUpperCase() + key.slice(1);
          uriOptions.push({key: key, value: crlftab_to_html(p)});
        }
        jsViewSelector(12);
      });
      $(this).blur();
    });
  }
  var sendrecv_switch = 0;
  var sendrecv_switch_busy = false;
  var sendrecv_switch_tval;
  var sendrecv_last = null;
  var sendrecv_wait = 0;
  function send_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 2) {
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          $('#send-coins').transition({
            animation: 'fade down',
            onComplete : function() {
              sendrecv_last = 1;
              sendrecv_switch_busy = false;
            }
          });
          initSendForm();
        }
      });
    } else {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 1;
          sendrecv_switch_busy = false;
        }
      });
      initSendForm();
    }
  }
  function recv_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 1) {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          showRecvAddress(function() {
            $('#receive-address').transition({
              animation: 'fade down',
              onComplete : function() {
                showRecvAddressAfterEffect();
                sendrecv_last = 2;
                sendrecv_switch_busy = false;
              }
            });
          });
        }
      });
    } else {
      showRecvAddress(function() {
        $('#receive-address').transition({
          animation: 'fade down',
          onComplete : function() {
            showRecvAddressAfterEffect();
            sendrecv_last = 2;
            sendrecv_switch_busy = false;
          }
        });
      });
    }
  }
  function reset_switch(switch_id) {
    if(!$('#send-coins').hasClass('hidden') && (switch_id == null || switch_id == 1)) {
      sendrecv_switch_busy = true;
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
    if(!$('#receive-address').hasClass('hidden') && (switch_id == null || switch_id == 2)) {
      sendrecv_switch_busy = true;
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
  }
  function sendrecv_switch_worker() {
    if(sendrecv_switch_busy) {
      sendrecv_switch_tval = setTimeout(function() {
        sendrecv_wait++;
        if(sendrecv_wait < 300) {
          sendrecv_switch_worker();
        } else {
          sendrecv_switch_busy = false;
        }
      }, 50);
      return;
    }
    sendrecv_wait = 0;
    if(sendrecv_last == sendrecv_switch) {
      return;
    }
    if(sendrecv_switch == 1) {
      send_switch();
    } else if(sendrecv_switch == 2) {
      recv_switch();
    } else {
      reset_switch();
    }
  }
  function sendrecv_select(val) {
    clearTimeout(sendrecv_switch_tval);
    sendrecv_switch = val;
    sendrecv_switch_worker();
  }

  var uriOptions = [];


function new_seq_240213(len_240216) {
	var result_240218 = null;

		result_240218 = new Array(len_240216); for (var i=0;i<len_240216;++i) {result_240218[i]={k: 0, parent: null, current: null, n: null};}
	return result_240218;

}

function new_seq_240250(len_240253) {
	var result_240255 = null;

		result_240255 = new Array(len_240253); for (var i=0;i<len_240253;++i) {result_240255[i]={parent: null, newChild: null, pos: 0};}
	return result_240255;

}

function init_240046(ev_240048) {

		function HEX3Aanonymous_240049() {
				dodraw_238646(kxi_230324[0]);

			
		}

		kxi_230324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_240049);

	
}

function set_initializer_240462(renderer_240467, root_240468, client_post_render_callback_240472) {
	var result_240473 = null;

		result_240473 = {rootId: root_240468, renderer: renderer_240467, postRenderCallback: client_post_render_callback_240472, patches: new_seq_240213(60), patchesV: new_seq_240250(30), components: [], surpressRedraws: true, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		kxi_230324[0] = result_240473;
		window.onload = init_240046;

	return result_240473;

}

function new_vnode_212028(kind_212030) {
	var result_212031 = null;

		result_212031 = {kind: kind_212030, index: -1, m_type: NTI209714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_212031;

}

function add_210786(parent_210788, kid_210789) {
		if (parent_210788.kids != null) { parent_210788.kids.push(kid_210789); } else { parent_210788.kids = [kid_210789]; };

	
}

function tree_212046(kind_212048, kids_212050) {
	var result_212051 = null;

		result_212051 = new_vnode_212028(kind_212048);
		L1: do {
			var k_212082 = null;
			var i_259680 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_259680 < (kids_212050 != null ? kids_212050.length : 0))) break L3;
						k_212082 = kids_212050[chckIndx(i_259680, 0, kids_212050.length+0-1)-0];
						add_210786(result_212051, k_212082);
						i_259680 = addInt(i_259680, 1);
					}
			} while(false);
		} while(false);

	return result_212051;

}

function text_212164(s_212166) {
	var result_212167 = null;

		result_212167 = {kind: 0, text: toJSStr(s_212166), index: -1, m_type: NTI209714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_212167;

}

function add_event_listener_212521(n_212523, event_212524, handler_212525) {
		if (n_212523.events != null) { n_212523.events.push({Field0: event_212524, Field1: handler_212525, Field2: null}); } else { n_212523.events = [{Field0: event_212524, Field1: handler_212525, Field2: null}]; };

	
}

function add_event_handler_240584(n_240586, k_240587, action_240590, kxi_240591) {

		function wrapper_240592(ev_240594, n_240595) {
				action_240590();
				if (!(kxi_240591.surpressRedraws)) {
				redraw_239814(kxi_240591);
				}
				

			
		}

		add_event_listener_212521(n_240586, k_240587, wrapper_240592);

	
}

function view_update_254303() {
		if (!(supress_redraw_254076[0])) {
		redraw_239814(app_inst_254014[0]);
		}
		

	
}

function import_selector_254318(import_type_254320) {

		function HEX3Aanonymous_254324() {
				      qrReader.hide();
    
				current_import_type_254037[0] = import_type_254320;
				if ((current_import_type_254037[0] == 0)) {
				show_page2_254070[0] = show_scan_result_254064[0];
				}
				else {
				if ((current_import_type_254037[0] == 1)) {
				show_page2_254070[0] = mnemonic_fulfill_254073[0];
				}
				}
				if ((current_import_type_254037[0] == 0)) {
				        $('#seedselector').removeClass('grey').addClass('olive');
        $('#mnemonicselector').removeClass('olive').addClass('grey');
      
				}
				else {
					        $('#mnemonicselector').removeClass('grey').addClass('olive');
        $('#seedselector').removeClass('olive').addClass('grey');
      
				}
				
				view_update_254303();

			
		}

	var result_254323 = null;

		result_254323 = HEX3Aanonymous_254324;

	return result_254323;

}

function set_attr_210568(n_210570, key_210571, val_210572) {
	BeforeRet: do {
		if (((n_210570.attrs != null ? n_210570.attrs.length : 0) == 0)) {
		n_210570.attrs = nimCopy(null, [key_210571, val_210572], NTI210588);
		}
		else {
			L1: do {
				var i_210601 = 0;
				var colontmp__259715 = 0;
				colontmp__259715 = subInt((n_210570.attrs != null ? n_210570.attrs.length : 0), 2);
				var res_259716 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_259716 <= colontmp__259715)) break L3;
							i_210601 = res_259716;
							if ((n_210570.attrs[chckIndx(i_210601, 0, n_210570.attrs.length+0-1)-0] == key_210571)) {
							n_210570.attrs[chckIndx(addInt(i_210601, 1), 0, n_210570.attrs.length+0-1)-0] = val_210572;
							break BeforeRet;
							}
							
							res_259716 = addInt(res_259716, 2);
						}
				} while(false);
			} while(false);
			if (n_210570.attrs != null) { n_210570.attrs.push(key_210571); } else { n_210570.attrs = [key_210571]; };
			if (n_210570.attrs != null) { n_210570.attrs.push(val_210572); } else { n_210570.attrs = [val_210572]; };
		}
		
	} while (false);

	
}

function text_212201(s_212203) {
	var result_212204 = null;

		result_212204 = {kind: 0, text: s_212203, index: -1, m_type: NTI209714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_212204;

}

function to_int_52291(f_52293) {
		var Tmp1;

	var result_52294 = 0;

		if ((0.0 <= f_52293)) {
		Tmp1 = (((f_52293 + 5.0000000000000000e-01))|0);
		}
		else {
		Tmp1 = (((f_52293 - 5.0000000000000000e-01))|0);
		}
		
		result_52294 = Tmp1;

	return result_52294;

}

function to_float_52257(i_52259) {
	var result_52260 = 0.0;

		result_52260 = i_52259;

	return result_52260;

}

function HEX2F_67817(x_67819, y_67820) {
	var result_67821 = 0.0;

		result_67821 = (to_float_52257(x_67819) / to_float_52257(y_67820));

	return result_67821;

}

function raiseRangeError() {
		var eHEX60gensym63457_63603 = null;
		eHEX60gensym63457_63603 = {m_type: NTI46462, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym63457_63603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI43040);
		eHEX60gensym63457_63603.parent = null;
		raiseException(eHEX60gensym63457_63603, "RangeError");

	
}

function HEX5BHEX5D_124281(s_124285, x_124287) {
	var result_124288 = null;

		var a_124401 = x_124287.a;
		var l_124601 = addInt(subInt(x_124287.b, a_124401), 1);
		result_124288 = nimCopy(null, mnewString(chckRange(l_124601, 0, 2147483647)), NTI43040);
		L1: do {
			var i_124609 = 0;
			var i_259728 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_259728 < l_124601)) break L3;
						i_124609 = i_259728;
						result_124288[chckIndx(i_124609, 0, result_124288.length+0-1)-0] = s_124285[chckIndx(addInt(i_124609, a_124401), 0, s_124285.length+0-1)-0];
						i_259728 = addInt(i_259728, 1);
					}
			} while(false);
		} while(false);

	return result_124288;

}

function HEX2EHEX2E_124220(a_124224, b_124225) {
	var result_124227 = {a: 0, b: 0};

		nimCopy(result_124227, {a: a_124224, b: b_124225}, NTI113907);

	return result_124227;

}

function HEX5BHEX5D_151304(s_151308, x_151310) {
	var result_151311 = null;

		var a_151401 = x_151310.a;
		var l_151601 = addInt(subInt(subInt((s_151308 != null ? s_151308.length : 0), x_151310.b), a_151401), 1);
		result_151311 = nimCopy(null, mnewString(chckRange(l_151601, 0, 2147483647)), NTI43040);
		L1: do {
			var i_151609 = 0;
			var i_259736 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_259736 < l_151601)) break L3;
						i_151609 = i_259736;
						result_151311[chckIndx(i_151609, 0, result_151311.length+0-1)-0] = s_151308[chckIndx(addInt(i_151609, a_151401), 0, s_151308.length+0-1)-0];
						i_259736 = addInt(i_259736, 1);
					}
			} while(false);
		} while(false);

	return result_151311;

}

function HEX2EHEX2E_151239(a_151243, b_151244) {
	var result_151250 = {a: 0, b: 0};

		nimCopy(result_151250, {a: a_151243, b: b_151244}, NTI151247);

	return result_151250;

}

function add_event_handler_240548(n_240550, k_240551, action_240552, kxi_240553) {

		function wrapper_240554(ev_240556, n_240557) {
				action_240552(ev_240556, n_240557);
				if (!(kxi_240553.surpressRedraws)) {
				redraw_239814(kxi_240553);
				}
				

			
		}

		add_event_listener_212521(n_240550, k_240551, wrapper_240554);

	
}

function delete_254685(x_254690, x_254690_Idx, i_254691) {
		x_254690[x_254690_Idx].splice(i_254691, 1);

	
}

function remove_seed_card_254677(idx_254679) {

		function HEX3Aanonymous_254683() {
				delete_254685(seed_card_infos_254427, 0, chckRange(idx_254679, 0, 2147483647));
				if (((seed_card_infos_254427[0] != null ? seed_card_infos_254427[0].length : 0) == 0)) {
				view_selector_254124(1, false);
				}
				else {
				view_update_254303();
				}
				

			
		}

	var result_254682 = null;

		result_254682 = HEX3Aanonymous_254683;

	return result_254682;

}

function seed_card_256879(card_info_256881, idx_256882) {
		var Tmp1;

		function HEX3Aanonymous_257700(ev_257702, n_257703) {
				seed_card_infos_254427[0][chckIndx(idx_256882, 0, seed_card_infos_254427[0].length+0-1)-0].sv = value_209822(n_257703);

			
		}

	var result_256883 = null;

		var tmp_256884 = tree_212046(43, []);
		tmp_256884.class = "ui card seed-card";
		var tmp_256885 = tree_212046(43, []);
		tmp_256885.class = "image";
		var tmp_256886 = tree_212046(43, []);
		tmp_256886.class = "seed-qrcode";
		set_attr_210568(tmp_256886, "data-orig", card_info_256881.orig);
		var tmp_256887 = tree_212046(84, []);
		set_attr_210568(tmp_256887, "width", "188");
		set_attr_210568(tmp_256887, "height", "188");
		add_210786(tmp_256886, tmp_256887);
		add_210786(tmp_256885, tmp_256886);
		add_210786(tmp_256884, tmp_256885);
		var tmp_256888 = tree_212046(43, []);
		tmp_256888.class = "content";
		if (!((card_info_256881.tag == null))) {
		var tmp_256889 = tree_212046(43, []);
		tmp_256889.class = "ui tag label mini tag";
		add_210786(tmp_256889, text_212201(card_info_256881.tag));
		add_210786(tmp_256888, tmp_256889);
		}
		
		var tmp_256890 = tree_212046(43, []);
		tmp_256890.class = "header";
		add_210786(tmp_256890, text_212164(makeNimstrLit("Seed")));
		add_210786(tmp_256888, tmp_256890);
		var tmp_256891 = tree_212046(43, []);
		tmp_256891.class = "meta";
		var tmp_256892 = tree_212046(70, []);
		tmp_256892.class = "date";
		if (!((card_info_256881.gen == null))) {
		Tmp1 = card_info_256881.gen;
		}
		else {
		Tmp1 = "unknown";
		}
		
		add_210786(tmp_256892, text_212201(Tmp1));
		add_210786(tmp_256891, tmp_256892);
		add_210786(tmp_256888, tmp_256891);
		var clen_256944 = (card_info_256881.seed != null ? card_info_256881.seed.length : 0);
		if ((0 < clen_256944)) {
		var half_256947 = to_int_52291(HEX2F_67817(clen_256944, 2));
		var seed_256948 = cstrToNimstr(card_info_256881.seed);
		var seed_upper_257039 = HEX5BHEX5D_124281(seed_256948, HEX2EHEX2E_124220(0, subInt(half_256947, 1)));
		var seed_lower_257072 = HEX5BHEX5D_151304(seed_256948, HEX2EHEX2E_151239(half_256947, 1));
		seed_upper_257039 = nimCopy(null, (HEX5BHEX5D_124281(seed_upper_257039, HEX2EHEX2E_124220(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_upper_257039, HEX2EHEX2E_124220(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_upper_257039, HEX2EHEX2E_124220(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_upper_257039, HEX2EHEX2E_124220(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_upper_257039, HEX2EHEX2E_124220(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_151304(seed_upper_257039, HEX2EHEX2E_151239(20, 1)) || []), NTI43040);
		seed_lower_257072 = nimCopy(null, (HEX5BHEX5D_124281(seed_lower_257072, HEX2EHEX2E_124220(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_lower_257072, HEX2EHEX2E_124220(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_lower_257072, HEX2EHEX2E_124220(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_lower_257072, HEX2EHEX2E_124220(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_124281(seed_lower_257072, HEX2EHEX2E_124220(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_151304(seed_lower_257072, HEX2EHEX2E_151239(20, 1)) || []), NTI43040);
		var tmp_256893 = tree_212046(43, []);
		tmp_256893.class = "seed-body";
		var tmp_256894 = tree_212046(43, []);
		tmp_256894.class = "seed";
		add_210786(tmp_256894, text_212164(seed_upper_257039));
		add_210786(tmp_256893, tmp_256894);
		var tmp_256895 = tree_212046(43, []);
		tmp_256895.class = "seed";
		add_210786(tmp_256895, text_212164(seed_lower_257072));
		add_210786(tmp_256893, tmp_256895);
		add_210786(tmp_256888, tmp_256893);
		}
		else {
			var tmp_256896 = tree_212046(43, []);
			tmp_256896.class = "seed-body";
			clen_256944 = (card_info_256881.orig != null ? card_info_256881.orig.length : 0);
			if ((20 < clen_256944)) {
			var half_257509 = to_int_52291(HEX2F_67817(clen_256944, 2));
			var orig_257510 = cstrToNimstr(card_info_256881.orig);
			var tmp_256897 = tree_212046(43, []);
			tmp_256897.class = "seed";
			add_210786(tmp_256897, text_212164(HEX5BHEX5D_124281(orig_257510, HEX2EHEX2E_124220(0, subInt(half_257509, 1)))));
			add_210786(tmp_256896, tmp_256897);
			var tmp_256898 = tree_212046(43, []);
			tmp_256898.class = "seed";
			add_210786(tmp_256898, text_212164(HEX5BHEX5D_151304(orig_257510, HEX2EHEX2E_151239(half_257509, 1))));
			add_210786(tmp_256896, tmp_256898);
			}
			else {
				var tmp_256899 = tree_212046(43, []);
				tmp_256899.class = "seed";
				add_210786(tmp_256899, text_212201(card_info_256881.orig));
				add_210786(tmp_256896, tmp_256899);
			}
			
			add_210786(tmp_256888, tmp_256896);
		}
		
		add_210786(tmp_256884, tmp_256888);
		var tmp_256900 = tree_212046(43, []);
		tmp_256900.class = "extra content";
		var tmp_256901 = tree_212046(43, []);
		tmp_256901.class = "inline field";
		var tmp_256902 = tree_212046(43, []);
		tmp_256902.class = "vector-label";
		add_210786(tmp_256902, text_212164(makeNimstrLit("Seed Vector:")));
		add_210786(tmp_256901, tmp_256902);
		var tmp_256903 = tree_212046(43, []);
		tmp_256903.class = "ui mini input vector-input";
		var tmp_256904 = tree_212046(105, []);
		set_attr_210568(tmp_256904, "type", "text");
		set_attr_210568(tmp_256904, "placeholder", "Type your seed vector");
		add_event_handler_240548(tmp_256904, 3, HEX3Aanonymous_257700, kxi_230324[0]);
		add_210786(tmp_256903, tmp_256904);
		add_210786(tmp_256901, tmp_256903);
		add_210786(tmp_256900, tmp_256901);
		add_210786(tmp_256884, tmp_256900);
		var tmp_256905 = tree_212046(43, []);
		tmp_256905.class = "bt-seed-del";
		var tmp_256906 = tree_212046(106, []);
		tmp_256906.class = "circular ui icon mini button";
		add_event_handler_240584(tmp_256906, 0, remove_seed_card_254677(idx_256882), kxi_230324[0]);
		var tmp_256907 = tree_212046(61, []);
		tmp_256907.class = "cut icon";
		add_210786(tmp_256906, tmp_256907);
		add_210786(tmp_256905, tmp_256906);
		add_210786(tmp_256884, tmp_256905);
		result_256883 = tmp_256884;

	return result_256883;

}

function substr_71222(s_71224, first_71225, last_71226) {
	var result_71227 = null;

		var first_71228 = nimMax(first_71225, 0);
		var l_71230 = nimMax(addInt(subInt(nimMin(last_71226, (s_71224 != null ? (s_71224.length-1) : -1)), first_71228), 1), 0);
		result_71227 = nimCopy(null, mnewString(chckRange(l_71230, 0, 2147483647)), NTI43040);
		L1: do {
			var i_71239 = 0;
			var colontmp__209678 = 0;
			colontmp__209678 = subInt(l_71230, 1);
			var res_209679 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_209679 <= colontmp__209678)) break L3;
						i_71239 = res_209679;
						result_71227[chckIndx(i_71239, 0, result_71227.length+0-1)-0] = s_71224[chckIndx(addInt(i_71239, first_71228), 0, s_71224.length+0-1)-0];
						res_209679 = addInt(res_209679, 1);
					}
			} while(false);
		} while(false);

	return result_71227;

}

function nsuSplitChar(s_199455, sep_199456, maxsplit_199458) {
	var result_199460 = null;

		result_199460 = nimCopy(null, [], NTI199476);
		L1: do {
			var xHEX60gensym199461_199477 = null;
			var lastHEX60gensym198812_259767 = 0;
			var splitsHEX60gensym198813_259768 = maxsplit_199458;
			L2: do {
					L3: while (true) {
					if (!(lastHEX60gensym198812_259767 <= (s_199455 != null ? s_199455.length : 0))) break L3;
						var firstHEX60gensym198814_259770 = lastHEX60gensym198812_259767;
						L4: do {
								L5: while (true) {
								if (!((lastHEX60gensym198812_259767 < (s_199455 != null ? s_199455.length : 0)) && !((s_199455[chckIndx(lastHEX60gensym198812_259767, 0, s_199455.length+0-1)-0] == sep_199456)))) break L5;
									lastHEX60gensym198812_259767 = addInt(lastHEX60gensym198812_259767, 1);
								}
						} while(false);
						if ((splitsHEX60gensym198813_259768 == 0)) {
						lastHEX60gensym198812_259767 = (s_199455 != null ? s_199455.length : 0);
						}
						
						xHEX60gensym199461_199477 = substr_71222(s_199455, firstHEX60gensym198814_259770, subInt(lastHEX60gensym198812_259767, 1));
						var Tmp6 = nimCopy(null, xHEX60gensym199461_199477, NTI43040);
						if (result_199460 != null) { result_199460.push(Tmp6); } else { result_199460 = [Tmp6]; };
						if ((splitsHEX60gensym198813_259768 == 0)) {
						break L2;
						}
						
						splitsHEX60gensym198813_259768 = subInt(splitsHEX60gensym198813_259768, 1);
						lastHEX60gensym198812_259767 = addInt(lastHEX60gensym198812_259767, 1);
					}
			} while(false);
		} while(false);

	return result_199460;

}

function new_255314() {
	var result_255318 = null;

	BeforeRet: do {
		var r_255401 = null;
		r_255401 = {seed: null, gen: null, tag: null, orig: null, sv: null};
		result_255318 = r_255401;
		break BeforeRet;
	} while (false);

	return result_255318;

}

function nsuStartsWith(s_203326, prefix_203327) {
						var Tmp3;

	var result_203328 = false;

	BeforeRet: do {
		var i_203330 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					if (((prefix_203327 != null ? prefix_203327.length : 0) <= i_203330)) {
					result_203328 = true;
					break BeforeRet;
					}
					
						if (((s_203326 != null ? s_203326.length : 0) <= i_203330)) Tmp3 = true; else {							Tmp3 = !((s_203326[chckIndx(i_203330, 0, s_203326.length+0-1)-0] == prefix_203327[chckIndx(i_203330, 0, prefix_203327.length+0-1)-0]));						}					if (Tmp3) {
					result_203328 = false;
					break BeforeRet;
					}
					
					i_203330 = addInt(i_203330, 1);
				}
		} while(false);
	} while (false);

	return result_203328;

}

function init_repr_closure_67147(cl_67150) {
		cl_67150.recDepth = -1;
		cl_67150.indent = 0;

	
}

function reprInt(x_66803) {
	var result_66804 = null;

	BeforeRet: do {
		result_66804 = nimCopy(null, cstrToNimstr((x_66803)+""), NTI43040);
		break BeforeRet;
	} while (false);

	return result_66804;

}

function reprChar(x_66916) {
	var result_66917 = null;

		result_66917 = nimCopy(null, makeNimstrLit("\'"), NTI43040);
		switch (x_66916) {
		case 34:
			if (result_66917 != null) { result_66917 = (result_66917).concat(makeNimstrLit("\\\"")); } else { result_66917 = makeNimstrLit("\\\""); };
			break;
		case 92:
			if (result_66917 != null) { result_66917 = (result_66917).concat(makeNimstrLit("\\\\")); } else { result_66917 = makeNimstrLit("\\\\"); };
			break;
		case 127:
		case 128:
		case 129:
		case 130:
		case 131:
		case 132:
		case 133:
		case 134:
		case 135:
		case 136:
		case 137:
		case 138:
		case 139:
		case 140:
		case 141:
		case 142:
		case 143:
		case 144:
		case 145:
		case 146:
		case 147:
		case 148:
		case 149:
		case 150:
		case 151:
		case 152:
		case 153:
		case 154:
		case 155:
		case 156:
		case 157:
		case 158:
		case 159:
		case 160:
		case 161:
		case 162:
		case 163:
		case 164:
		case 165:
		case 166:
		case 167:
		case 168:
		case 169:
		case 170:
		case 171:
		case 172:
		case 173:
		case 174:
		case 175:
		case 176:
		case 177:
		case 178:
		case 179:
		case 180:
		case 181:
		case 182:
		case 183:
		case 184:
		case 185:
		case 186:
		case 187:
		case 188:
		case 189:
		case 190:
		case 191:
		case 192:
		case 193:
		case 194:
		case 195:
		case 196:
		case 197:
		case 198:
		case 199:
		case 200:
		case 201:
		case 202:
		case 203:
		case 204:
		case 205:
		case 206:
		case 207:
		case 208:
		case 209:
		case 210:
		case 211:
		case 212:
		case 213:
		case 214:
		case 215:
		case 216:
		case 217:
		case 218:
		case 219:
		case 220:
		case 221:
		case 222:
		case 223:
		case 224:
		case 225:
		case 226:
		case 227:
		case 228:
		case 229:
		case 230:
		case 231:
		case 232:
		case 233:
		case 234:
		case 235:
		case 236:
		case 237:
		case 238:
		case 239:
		case 240:
		case 241:
		case 242:
		case 243:
		case 244:
		case 245:
		case 246:
		case 247:
		case 248:
		case 249:
		case 250:
		case 251:
		case 252:
		case 253:
		case 254:
		case 255:
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
		case 11:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:
		case 24:
		case 25:
		case 26:
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
			if (result_66917 != null) { result_66917 = (result_66917).concat((makeNimstrLit("\\") || []).concat(reprInt(x_66916) || [])); } else { result_66917 = (makeNimstrLit("\\") || []).concat(reprInt(x_66916) || []).slice(); };
			break;
		default: 
			if (result_66917 != null) { addChar(result_66917, x_66916); } else { result_66917 = [x_66916]; };
			break;
		}
		if (result_66917 != null) { result_66917 = (result_66917).concat(makeNimstrLit("\'")); } else { result_66917 = makeNimstrLit("\'"); };

	return result_66917;

}

function reprBool(x_66857) {
	var result_66858 = null;

		if (x_66857) {
		result_66858 = nimCopy(null, makeNimstrLit("true"), NTI43040);
		}
		else {
			result_66858 = nimCopy(null, makeNimstrLit("false"), NTI43040);
		}
		

	return result_66858;

}

function reprFloat(x_66820) {
		var Tmp1;

	var result_66821 = null;

		if (eqStrings(cstrToNimstr((x_66820)+""), cstrToNimstr((((x_66820)|0))+""))) {
		Tmp1 = (cstrToNimstr((x_66820)+"") || []).concat(makeNimstrLit(".0") || []);
		}
		else {
		Tmp1 = cstrToNimstr((x_66820)+"");
		}
		
		result_66821 = nimCopy(null, Tmp1, NTI43040);

	return result_66821;

}

function repr_str_aux_66935(result_66938, result_66938_Idx, s_66939, len_66940) {
		if (result_66938[result_66938_Idx] != null) { result_66938[result_66938_Idx] = (result_66938[result_66938_Idx]).concat(makeNimstrLit("\"")); } else { result_66938[result_66938_Idx] = makeNimstrLit("\""); };
		L1: do {
			var i_67021 = 0;
			var colontmp__259781 = 0;
			colontmp__259781 = (len_66940 - 1);
			var res_259782 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_259782 <= colontmp__259781)) break L3;
						i_67021 = res_259782;
						var c_67022 = s_66939.charCodeAt(i_67021);
						switch (c_67022) {
						case 34:
							if (result_66938[result_66938_Idx] != null) { result_66938[result_66938_Idx] = (result_66938[result_66938_Idx]).concat(makeNimstrLit("\\\"")); } else { result_66938[result_66938_Idx] = makeNimstrLit("\\\""); };
							break;
						case 92:
							if (result_66938[result_66938_Idx] != null) { result_66938[result_66938_Idx] = (result_66938[result_66938_Idx]).concat(makeNimstrLit("\\\\")); } else { result_66938[result_66938_Idx] = makeNimstrLit("\\\\"); };
							break;
						case 127:
						case 128:
						case 129:
						case 130:
						case 131:
						case 132:
						case 133:
						case 134:
						case 135:
						case 136:
						case 137:
						case 138:
						case 139:
						case 140:
						case 141:
						case 142:
						case 143:
						case 144:
						case 145:
						case 146:
						case 147:
						case 148:
						case 149:
						case 150:
						case 151:
						case 152:
						case 153:
						case 154:
						case 155:
						case 156:
						case 157:
						case 158:
						case 159:
						case 160:
						case 161:
						case 162:
						case 163:
						case 164:
						case 165:
						case 166:
						case 167:
						case 168:
						case 169:
						case 170:
						case 171:
						case 172:
						case 173:
						case 174:
						case 175:
						case 176:
						case 177:
						case 178:
						case 179:
						case 180:
						case 181:
						case 182:
						case 183:
						case 184:
						case 185:
						case 186:
						case 187:
						case 188:
						case 189:
						case 190:
						case 191:
						case 192:
						case 193:
						case 194:
						case 195:
						case 196:
						case 197:
						case 198:
						case 199:
						case 200:
						case 201:
						case 202:
						case 203:
						case 204:
						case 205:
						case 206:
						case 207:
						case 208:
						case 209:
						case 210:
						case 211:
						case 212:
						case 213:
						case 214:
						case 215:
						case 216:
						case 217:
						case 218:
						case 219:
						case 220:
						case 221:
						case 222:
						case 223:
						case 224:
						case 225:
						case 226:
						case 227:
						case 228:
						case 229:
						case 230:
						case 231:
						case 232:
						case 233:
						case 234:
						case 235:
						case 236:
						case 237:
						case 238:
						case 239:
						case 240:
						case 241:
						case 242:
						case 243:
						case 244:
						case 245:
						case 246:
						case 247:
						case 248:
						case 249:
						case 250:
						case 251:
						case 252:
						case 253:
						case 254:
						case 255:
						case 0:
						case 1:
						case 2:
						case 3:
						case 4:
						case 5:
						case 6:
						case 7:
						case 8:
						case 9:
						case 10:
						case 11:
						case 12:
						case 13:
						case 14:
						case 15:
						case 16:
						case 17:
						case 18:
						case 19:
						case 20:
						case 21:
						case 22:
						case 23:
						case 24:
						case 25:
						case 26:
						case 27:
						case 28:
						case 29:
						case 30:
						case 31:
							if (result_66938[result_66938_Idx] != null) { result_66938[result_66938_Idx] = (result_66938[result_66938_Idx]).concat((makeNimstrLit("\\") || []).concat(reprInt(c_67022) || [])); } else { result_66938[result_66938_Idx] = (makeNimstrLit("\\") || []).concat(reprInt(c_67022) || []).slice(); };
							break;
						default: 
							if (result_66938[result_66938_Idx] != null) { addChar(result_66938[result_66938_Idx], c_67022); } else { result_66938[result_66938_Idx] = [c_67022]; };
							break;
						}
						res_259782 += 1;
					}
			} while(false);
		} while(false);
		if (result_66938[result_66938_Idx] != null) { result_66938[result_66938_Idx] = (result_66938[result_66938_Idx]).concat(makeNimstrLit("\"")); } else { result_66938[result_66938_Idx] = makeNimstrLit("\""); };

	
}

function reprStr(s_67042) {
	var result_67043 = [null];

		result_67043[0] = nimCopy(null, [], NTI43040);
		var s_is_nil_67044 = false;
		s_is_nil_67044 = s_67042 === null
		if (s_is_nil_67044) {
		if (result_67043[0] != null) { result_67043[0] = (result_67043[0]).concat(makeNimstrLit("nil")); } else { result_67043[0] = makeNimstrLit("nil"); };
		}
		else {
		repr_str_aux_66935(result_67043, 0, toJSStr(s_67042), (s_67042 != null ? s_67042.length : 0));
		}
		

	return result_67043[0];

}

function add_set_elem_67059(result_67062, result_67062_Idx, elem_67063, typ_67064) {
		switch (typ_67064.kind) {
		case 14:
			if (result_67062[result_67062_Idx] != null) { result_67062[result_67062_Idx] = (result_67062[result_67062_Idx]).concat(reprEnum(elem_67063, typ_67064)); } else { result_67062[result_67062_Idx] = reprEnum(elem_67063, typ_67064).slice(); };
			break;
		case 1:
			if (result_67062[result_67062_Idx] != null) { result_67062[result_67062_Idx] = (result_67062[result_67062_Idx]).concat(reprBool(elem_67063)); } else { result_67062[result_67062_Idx] = reprBool(elem_67063).slice(); };
			break;
		case 2:
			if (result_67062[result_67062_Idx] != null) { result_67062[result_67062_Idx] = (result_67062[result_67062_Idx]).concat(reprChar(elem_67063)); } else { result_67062[result_67062_Idx] = reprChar(elem_67063).slice(); };
			break;
		case 20:
			add_set_elem_67059(result_67062, result_67062_Idx, elem_67063, typ_67064.base);
			break;
		case 31:
		case 32:
		case 33:
		case 34:
		case 35:
		case 41:
		case 42:
			if (result_67062[result_67062_Idx] != null) { result_67062[result_67062_Idx] = (result_67062[result_67062_Idx]).concat(reprInt(elem_67063)); } else { result_67062[result_67062_Idx] = reprInt(elem_67063).slice(); };
			break;
		default: 
			if (result_67062[result_67062_Idx] != null) { result_67062[result_67062_Idx] = (result_67062[result_67062_Idx]).concat(makeNimstrLit(" (invalid data!)")); } else { result_67062[result_67062_Idx] = makeNimstrLit(" (invalid data!)"); };
			break;
		}

	
}

function repr_set_aux_67103(result_67106, result_67106_Idx, s_67107, typ_67108) {
		if (result_67106[result_67106_Idx] != null) { result_67106[result_67106_Idx] = (result_67106[result_67106_Idx]).concat(makeNimstrLit("{")); } else { result_67106[result_67106_Idx] = makeNimstrLit("{"); };
		var first_67109 = true;
		L1: do {
			var el_67110 = 0;
			var len_259789 = 0;
			var yield_res_259790 = 0;
			var i_259791 = 0;
			  var setObjKeys = Object.getOwnPropertyNames(s_67107);
  len_259789 = setObjKeys.length;
  
			L2: do {
					L3: while (true) {
					if (!(i_259791 < len_259789)) break L3;
						yield_res_259790 = parseInt(setObjKeys[i_259791],10);

						el_67110 = yield_res_259790;
						if (first_67109) {
						first_67109 = false;
						}
						else {
						if (result_67106[result_67106_Idx] != null) { result_67106[result_67106_Idx] = (result_67106[result_67106_Idx]).concat(makeNimstrLit(", ")); } else { result_67106[result_67106_Idx] = makeNimstrLit(", "); };
						}
						
						add_set_elem_67059(result_67106, result_67106_Idx, el_67110, typ_67108.base);
						i_259791 += 1;
					}
			} while(false);
		} while(false);
		if (result_67106[result_67106_Idx] != null) { result_67106[result_67106_Idx] = (result_67106[result_67106_Idx]).concat(makeNimstrLit("}")); } else { result_67106[result_67106_Idx] = makeNimstrLit("}"); };

	
}

function reprSet(e_67126, typ_67127) {
	var result_67128 = [null];

		result_67128[0] = nimCopy(null, [], NTI43040);
		repr_set_aux_67103(result_67128, 0, e_67126, typ_67127);

	return result_67128[0];

}

function repr_record_aux_67262(result_67265, result_67265_Idx, o_67266, o_67266_Idx, typ_67267, cl_67269) {
		if (result_67265[result_67265_Idx] != null) { result_67265[result_67265_Idx] = (result_67265[result_67265_Idx]).concat(makeNimstrLit("[")); } else { result_67265[result_67265_Idx] = makeNimstrLit("["); };
		var first_67270 = true;
		var val_67271 = o_67266, val_67271_Idx = o_67266_Idx;
		if ((typ_67267.node.len == 0)) {
		var key_67272 = typ_67267.node.name;
		if (result_67265[result_67265_Idx] != null) { result_67265[result_67265_Idx] = (result_67265[result_67265_Idx]).concat((cstrToNimstr(key_67272) || []).concat(makeNimstrLit(" = ") || [])); } else { result_67265[result_67265_Idx] = (cstrToNimstr(key_67272) || []).concat(makeNimstrLit(" = ") || []).slice(); };
		val_67271 = o_67266[key_67272];

		repr_aux_67165(result_67265, result_67265_Idx, val_67271, val_67271_Idx, typ_67267.node.typ, cl_67269);
		}
		else {
			L1: do {
				var i_67281 = 0;
				var colontmp__259794 = 0;
				colontmp__259794 = (typ_67267.node.len - 1);
				var res_259795 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_259795 <= colontmp__259794)) break L3;
							i_67281 = res_259795;
							if (first_67270) {
							first_67270 = false;
							}
							else {
							if (result_67265[result_67265_Idx] != null) { result_67265[result_67265_Idx] = (result_67265[result_67265_Idx]).concat(makeNimstrLit(",\x0A")); } else { result_67265[result_67265_Idx] = makeNimstrLit(",\x0A"); };
							}
							
							var key_67282 = typ_67267.node.sons[i_67281].name;
							if (result_67265[result_67265_Idx] != null) { result_67265[result_67265_Idx] = (result_67265[result_67265_Idx]).concat((cstrToNimstr(key_67282) || []).concat(makeNimstrLit(" = ") || [])); } else { result_67265[result_67265_Idx] = (cstrToNimstr(key_67282) || []).concat(makeNimstrLit(" = ") || []).slice(); };
							val_67271 = o_67266[key_67282];

							repr_aux_67165(result_67265, result_67265_Idx, val_67271, val_67271_Idx, typ_67267.node.sons[i_67281].typ, cl_67269);
							res_259795 += 1;
						}
				} while(false);
			} while(false);
		}
		
		if (result_67265[result_67265_Idx] != null) { result_67265[result_67265_Idx] = (result_67265[result_67265_Idx]).concat(makeNimstrLit("]")); } else { result_67265[result_67265_Idx] = makeNimstrLit("]"); };

	
}

function reprRecord(o_67298, o_67298_Idx, typ_67299, cl_67301) {
	var result_67302 = [null];

		result_67302[0] = nimCopy(null, [], NTI43040);
		repr_record_aux_67262(result_67302, 0, o_67298, o_67298_Idx, typ_67299, cl_67301);

	return result_67302[0];

}

function reprArray(a_67175, a_67175_Idx, typ_67176, cl_67178) {
			var Tmp1;
		var Tmp2;

	var result_67179 = [null];

	BeforeRet: do {
		var is_nil_array_or_seq_67180 = false;
		    if (a_67175 == null) {
      is_nil_array_or_seq_67180 = true;
    } else if (a_67175[0] == null) {
      is_nil_array_or_seq_67180 = true;
    } else {
      is_nil_array_or_seq_67180 = false;
    };
    
			if (!(typ_67176.kind == 24)) Tmp1 = false; else {				Tmp1 = is_nil_array_or_seq_67180;			}		if (Tmp1) {
		result_67179[0] = nimCopy(null, makeNimstrLit("nil"), NTI43040);
		break BeforeRet;
		}
		
		if ((typ_67176.kind == 24)) {
		Tmp2 = makeNimstrLit("@[");
		}
		else {
		Tmp2 = makeNimstrLit("[");
		}
		
		result_67179[0] = nimCopy(null, Tmp2, NTI43040);
		var len_67191 = 0;
		var i_67192 = 0;
		len_67191 = a_67175.length;

		var dereffed_67193 = a_67175, dereffed_67193_Idx = a_67175_Idx;
		L3: do {
			var i_67202 = 0;
			var colontmp__259801 = 0;
			colontmp__259801 = (len_67191 - 1);
			var res_259802 = 0;
			L4: do {
					L5: while (true) {
					if (!(res_259802 <= colontmp__259801)) break L5;
						i_67202 = res_259802;
						if ((0 < i_67202)) {
						if (result_67179[0] != null) { result_67179[0] = (result_67179[0]).concat(makeNimstrLit(", ")); } else { result_67179[0] = makeNimstrLit(", "); };
						}
						
						    dereffed_67193_Idx = i_67202;
    dereffed_67193 = a_67175[dereffed_67193_Idx];
    
						repr_aux_67165(result_67179, 0, dereffed_67193, dereffed_67193_Idx, typ_67176.base, cl_67178);
						res_259802 += 1;
					}
			} while(false);
		} while(false);
		if (result_67179[0] != null) { result_67179[0] = (result_67179[0]).concat(makeNimstrLit("]")); } else { result_67179[0] = makeNimstrLit("]"); };
	} while (false);

	return result_67179[0];

}

function reprPointer(p_66839, p_66839_Idx) {
	var result_66840 = null;

		var tmp_66841 = 0;
		    if (p_66839_Idx == null) {
      tmp_66841 = 0;
    } else {
      tmp_66841 = p_66839_Idx;
    }
  
		result_66840 = nimCopy(null, cstrToNimstr((tmp_66841)+""), NTI43040);

	return result_66840;

}

function is_pointed_to_nil_67219(p_67221, p_67221_Idx) {
	var result_67222 = false;

		if (p_67221 === null) {result_67222 = true};


	return result_67222;

}

function repr_ref_67236(result_67239, result_67239_Idx, p_67240, p_67240_Idx, typ_67241, cl_67243) {
	BeforeRet: do {
		if (is_pointed_to_nil_67219(p_67240, p_67240_Idx)) {
		if (result_67239[result_67239_Idx] != null) { result_67239[result_67239_Idx] = (result_67239[result_67239_Idx]).concat(makeNimstrLit("nil")); } else { result_67239[result_67239_Idx] = makeNimstrLit("nil"); };
		break BeforeRet;
		}
		
		if (result_67239[result_67239_Idx] != null) { result_67239[result_67239_Idx] = (result_67239[result_67239_Idx]).concat((makeNimstrLit("ref ") || []).concat(reprPointer(p_67240, p_67240_Idx) || [])); } else { result_67239[result_67239_Idx] = (makeNimstrLit("ref ") || []).concat(reprPointer(p_67240, p_67240_Idx) || []).slice(); };
		if (result_67239[result_67239_Idx] != null) { result_67239[result_67239_Idx] = (result_67239[result_67239_Idx]).concat(makeNimstrLit(" --> ")); } else { result_67239[result_67239_Idx] = makeNimstrLit(" --> "); };
		if (!((typ_67241.base.kind == 16))) {
		    if (p_67240 != null && p_67240.length > 0) {
      p_67240 = p_67240[p_67240_Idx];
    }
    
		}
		
		repr_aux_67165(result_67239, result_67239_Idx, p_67240, p_67240_Idx, typ_67241.base, cl_67243);
	} while (false);

	
}

function reprJSONStringify(p_67319) {
	var result_67320 = null;

		var tmp_67321 = null;
		tmp_67321 = JSON.stringify(p_67319);

		result_67320 = nimCopy(null, cstrToNimstr(tmp_67321), NTI43040);

	return result_67320;

}

function repr_aux_67165(result_67168, result_67168_Idx, p_67169, p_67169_Idx, typ_67170, cl_67172) {
	BeforeRet: do {
		if ((cl_67172.recDepth == 0)) {
		if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(makeNimstrLit("...")); } else { result_67168[result_67168_Idx] = makeNimstrLit("..."); };
		break BeforeRet;
		}
		
		cl_67172.recDepth -= 1;
		switch (typ_67170.kind) {
		case 31:
		case 32:
		case 33:
		case 34:
		case 35:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprInt(p_67169, p_67169_Idx)); } else { result_67168[result_67168_Idx] = reprInt(p_67169, p_67169_Idx).slice(); };
			break;
		case 2:
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprChar(p_67169, p_67169_Idx)); } else { result_67168[result_67168_Idx] = reprChar(p_67169, p_67169_Idx).slice(); };
			break;
		case 1:
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprBool(p_67169, p_67169_Idx)); } else { result_67168[result_67168_Idx] = reprBool(p_67169, p_67169_Idx).slice(); };
			break;
		case 36:
		case 37:
		case 38:
		case 39:
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprFloat(p_67169, p_67169_Idx)); } else { result_67168[result_67168_Idx] = reprFloat(p_67169, p_67169_Idx).slice(); };
			break;
		case 28:
			var fp_67349 = 0;
			fp_67349 = p_67169;

			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprStr(p_67169, p_67169_Idx)); } else { result_67168[result_67168_Idx] = reprStr(p_67169, p_67169_Idx).slice(); };
			break;
		case 29:
			var fp_67350 = null;
			fp_67350 = p_67169;

			if ((fp_67350 == null)) {
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(makeNimstrLit("nil")); } else { result_67168[result_67168_Idx] = makeNimstrLit("nil"); };
			}
			else {
			repr_str_aux_66935(result_67168, result_67168_Idx, fp_67350, (fp_67350 != null ? fp_67350.length : 0));
			}
			
			break;
		case 14:
		case 15:
			var fp_67351 = 0;
			fp_67351 = p_67169;

			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprEnum(fp_67351, typ_67170)); } else { result_67168[result_67168_Idx] = reprEnum(fp_67351, typ_67170).slice(); };
			break;
		case 19:
			var fp_67352 = 0;
			fp_67352 = p_67169;

			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprSet(fp_67352, typ_67170)); } else { result_67168[result_67168_Idx] = reprSet(fp_67352, typ_67170).slice(); };
			break;
		case 20:
			repr_aux_67165(result_67168, result_67168_Idx, p_67169, p_67169_Idx, typ_67170.base, cl_67172);
			break;
		case 17:
		case 18:
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprRecord(p_67169, p_67169_Idx, typ_67170, cl_67172)); } else { result_67168[result_67168_Idx] = reprRecord(p_67169, p_67169_Idx, typ_67170, cl_67172).slice(); };
			break;
		case 16:
		case 4:
		case 24:
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprArray(p_67169, p_67169_Idx, typ_67170, cl_67172)); } else { result_67168[result_67168_Idx] = reprArray(p_67169, p_67169_Idx, typ_67170, cl_67172).slice(); };
			break;
		case 26:
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprPointer(p_67169, p_67169_Idx)); } else { result_67168[result_67168_Idx] = reprPointer(p_67169, p_67169_Idx).slice(); };
			break;
		case 21:
		case 22:
			repr_ref_67236(result_67168, result_67168_Idx, p_67169, p_67169_Idx, typ_67170, cl_67172);
			break;
		case 25:
			if (is_pointed_to_nil_67219(p_67169, p_67169_Idx)) {
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(makeNimstrLit("nil")); } else { result_67168[result_67168_Idx] = makeNimstrLit("nil"); };
			}
			else {
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat(reprPointer(p_67169, p_67169_Idx)); } else { result_67168[result_67168_Idx] = reprPointer(p_67169, p_67169_Idx).slice(); };
			}
			
			break;
		default: 
			if (result_67168[result_67168_Idx] != null) { result_67168[result_67168_Idx] = (result_67168[result_67168_Idx]).concat((makeNimstrLit("(invalid data!)") || []).concat(reprJSONStringify(p_67169, p_67169_Idx) || [])); } else { result_67168[result_67168_Idx] = (makeNimstrLit("(invalid data!)") || []).concat(reprJSONStringify(p_67169, p_67169_Idx) || []).slice(); };
			break;
		}
		cl_67172.recDepth += 1;
	} while (false);

	
}

function cb_seed_qr_done_255304(data_255306) {
							var Tmp7;
							var Tmp8;

		rawEcho(makeNimstrLit("cbQrDone:"), cstrToNimstr(data_255306));
		var escape_data_255310 = escape_html(data_255306);
		var sdata_255311 = cstrToNimstr(escape_data_255310);
		var ds_255312 = nsuSplitChar(sdata_255311, 44, -1);
		var seed_card_info_255436 = new_255314();
		L1: do {
			var d_255614 = null;
			var i_259756 = 0;
			var l_259757 = (ds_255312 != null ? ds_255312.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_259756 < l_259757)) break L3;
						d_255614 = ds_255312[chckIndx(i_259756, 0, ds_255312.length+0-1)-0];
						if (nsuStartsWith(d_255614, makeNimstrLit("seed:"))) {
						seed_card_info_255436.seed = toJSStr(HEX5BHEX5D_151304(d_255614, HEX2EHEX2E_151239(5, 1)));
						rawEcho(cstrToNimstr(seed_card_info_255436.seed));
						}
						else {
						if (nsuStartsWith(d_255614, makeNimstrLit("tag:"))) {
						seed_card_info_255436.tag = toJSStr(HEX5BHEX5D_151304(d_255614, HEX2EHEX2E_151239(4, 1)));
						rawEcho(cstrToNimstr(seed_card_info_255436.tag));
						}
						else {
						if (nsuStartsWith(d_255614, makeNimstrLit("gen:"))) {
						seed_card_info_255436.gen = toJSStr(HEX5BHEX5D_151304(d_255614, HEX2EHEX2E_151239(4, 1)));
						rawEcho(cstrToNimstr(seed_card_info_255436.gen));
						}
						}}
						i_259756 = addInt(i_259756, 1);
						if (!(((ds_255312 != null ? ds_255312.length : 0) == l_259757))) {
						failed_assert_impl_56866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		seed_card_info_255436.orig = data_255306;
		rawEcho(reprAny(seed_card_info_255436, null, NTI254411));
		    var seed_valid = false;
    if(seed_card_info_255436.seed) {
      var dec = base58.dec(seed_card_info_255436.seed);
      if(dec && dec.length == 32) {
        seed_valid = true;
      }
    }
    if(!seed_valid) {
      Notify.show("Warning", "Unsupported seed card was scanned.", Notify.msgtype.warning);
    }

  
		var dupcheck_255730 = false;
		L4: do {
			var s_255814 = null;
			var i_259761 = 0;
			var l_259762 = (seed_card_infos_254427[0] != null ? seed_card_infos_254427[0].length : 0);
			L5: do {
					L6: while (true) {
					if (!(i_259761 < l_259762)) break L6;
						s_255814 = seed_card_infos_254427[0][chckIndx(i_259761, 0, seed_card_infos_254427[0].length+0-1)-0];
							if (!(s_255814.seed == null)) Tmp7 = false; else {								Tmp7 = (seed_card_info_255436.seed == null);							}						if (Tmp7) {
						if ((s_255814.orig == seed_card_info_255436.orig)) {
						dupcheck_255730 = true;
						break L4;
						}
						
						}
						else {
							if ((s_255814.seed == seed_card_info_255436.seed)) Tmp8 = true; else {								Tmp8 = (s_255814.tag == seed_card_info_255436.tag);							}						if (Tmp8) {
						dupcheck_255730 = true;
						break L4;
						}
						}
						i_259761 = addInt(i_259761, 1);
						if (!(((seed_card_infos_254427[0] != null ? seed_card_infos_254427[0].length : 0) == l_259762))) {
						failed_assert_impl_56866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (dupcheck_255730) {
		      Notify.show("Error", "The seed card has already been scanned.", Notify.msgtype.error);
    
		}
		else {
		if (seed_card_infos_254427[0] != null) { seed_card_infos_254427[0].push(seed_card_info_255436); } else { seed_card_infos_254427[0] = [seed_card_info_255436]; };
		}
		
		    qrReader.hide();
  
		view_selector_254124(2, false);

	
}

function show_seed_qr_255868() {

		function HEX3Aanonymous_255873() {
				      qrReader.show(cb_seed_qr_done_255304);
    

			
		}

	var result_255872 = null;

		result_255872 = HEX3Aanonymous_255873;

	return result_255872;

}

function cam_change_255952() {

		function HEX3Aanonymous_255957() {
				      $('.camtools button').blur();
      qrReader.next();
    

			
		}

	var result_255956 = null;

		result_255956 = HEX3Aanonymous_255957;

	return result_255956;

}

function cam_close_255985() {

		function HEX3Aanonymous_255990() {
				      qrReader.hide();
    

			
		}

	var result_255989 = null;

		result_255989 = HEX3Aanonymous_255990;

	return result_255989;

}

function change_language_256570(ev_256572, n_256573) {
		var lang_id_256574 = value_209822(n_256573);
		if ((lang_id_256574 == 0)) {
		bip39_wordlist_254479[0] = bip39_254468[0].wordlists.english;
		wl_select_254567[0] = nimCopy(null, wl_english_254566[0], NTI254526);
		wl_select_id_254569[0] = 0;
		}
		else {
		if ((lang_id_256574 == 1)) {
		bip39_wordlist_254479[0] = bip39_254468[0].wordlists.japanese;
		wl_select_254567[0] = nimCopy(null, wl_japanese_254525[0], NTI254480);
		wl_select_id_254569[0] = 1;
		}
		}
		autocomplete_words_254446[0] = nimCopy(null, [], NTI256609);
		chklist_254454[0] = nimCopy(null, [], NTI256624);
		view_update_254303();

	
}

function check_mnemonic_256053(ev_256055, n_256056) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

		var s_256057 = value_209822(n_256056);
		if (!((s_256057 == prev_check_word_254455[0]))) {
		chklist_254454[0] = nimCopy(null, [], NTI256072);
		}
		
		prev_check_word_254455[0] = s_256057;
			if (!!((s_256057 == null))) Tmp1 = false; else {				Tmp1 = (0 < (s_256057 != null ? s_256057.length : 0));			}		if (Tmp1) {
			if (!mnemonic_fulfill_254073[0]) Tmp2 = false; else {				Tmp2 = !((editing_words_254428[0] == s_256057));			}		if (Tmp2) {
		mnemonic_fulfill_254073[0] = false;
		view_selector_254124(3, false);
		}
		
		editing_words_254428[0] = s_256057;
		var cur_256092 = document.getElementById((n_256056.id)).selectionStart;
		      s_256057 = s_256057.substr(0, cur_256092).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
    
			if (!!((s_256057 == null))) Tmp3 = false; else {				Tmp3 = (0 < (s_256057 != null ? s_256057.length : 0));			}		if (Tmp3) {
		var tmplist_256111 = [];
		L4: do {
			var word_256112 = null;
			var v_259857 = null;
			for (var k in bip39_wordlist_254479[0]) {
			  if (!bip39_wordlist_254479[0].hasOwnProperty(k)) continue;
			  v_259857=bip39_wordlist_254479[0][k];
			word_256112 = v_259857;
			var w_256113 = word_256112;
			if (w_256113.startsWith(s_256057)) {
			if (tmplist_256111 != null) { tmplist_256111.push(w_256113); } else { tmplist_256111 = [w_256113]; };
			}
			
			}
		} while(false);
		autocomplete_words_254446[0] = nimCopy(null, tmplist_256111, NTI256095);
		}
		else {
			autocomplete_words_254446[0] = nimCopy(null, [], NTI256135);
		}
		
		}
		else {
			autocomplete_words_254446[0] = nimCopy(null, [], NTI256150);
		}
		
		view_update_254303();

	
}

function get_vnode_by_id_231117(id_231119, kxi_231120) {
	var result_231121 = null;

		if (kxi_231120.byId.hasOwnProperty(id_231119)) {
		result_231121 = kxi_231120.byId[id_231119];
		}
		

	return result_231121;

}

function raiseDivByZero() {
		var eHEX60gensym63257_63403 = null;
		eHEX60gensym63257_63403 = {m_type: NTI46444, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym63257_63403.message = nimCopy(null, makeNimstrLit("division by zero"), NTI43040);
		eHEX60gensym63257_63403.parent = null;
		raiseException(eHEX60gensym63257_63403, "DivByZeroError");

	
}

function confirm_mnemonic_256311(input_id_256313, advance_256314) {

		function HEX3Aanonymous_256318() {
					var Tmp1;
					var Tmp5;
					var Tmp6;

				confirm_mnemonic_advanced_256297[0] = advance_256314;
				var x_256320 = get_vnode_by_id_231117(input_id_256313, kxi_230324[0]);
				var s_256321 = value_209822(x_256320);
					if (!!((s_256321 == null))) Tmp1 = false; else {						Tmp1 = (0 < (s_256321 != null ? s_256321.length : 0));					}				if (Tmp1) {
				var words_256325 = null;
				        input_words_254429[0] = s_256321.replace(/[ 　\n\r]+/g, ' ').trim();
        words_256325 = input_words_254429[0].split(' ');
      
				chklist_254454[0] = nimCopy(null, [], NTI256340);
				var idx_256341 = 0;
				var allvalid_256342 = true;
				L2: do {
					var word_256414 = null;
					var i_259862 = 0;
					var l_259863 = (words_256325 != null ? words_256325.length : 0);
					L3: do {
							L4: while (true) {
							if (!(i_259862 < l_259863)) break L4;
								word_256414 = words_256325[chckIndx(i_259862, 0, words_256325.length+0-1)-0];
								if (wl_select_254567[0].includes(word_256414)) {
								if (advance_256314) {
								var levs_256420 = nimCopy(null, levens_one((word_256414), bip39_wordlist_254479[0]), NTI256415);
								if (chklist_254454[0] != null) { chklist_254454[0].push({Field0: idx_256341, Field1: word_256414, Field2: true, Field3: nimCopy(null, levs_256420, NTI254452)}); } else { chklist_254454[0] = [{Field0: idx_256341, Field1: word_256414, Field2: true, Field3: nimCopy(null, levs_256420, NTI254452)}]; };
								}
								else {
								if (chklist_254454[0] != null) { chklist_254454[0].push({Field0: idx_256341, Field1: word_256414, Field2: true, Field3: []}); } else { chklist_254454[0] = [{Field0: idx_256341, Field1: word_256414, Field2: true, Field3: []}]; };
								}
								
								}
								else {
									var levs_256456 = nimCopy(null, levens((word_256414), bip39_wordlist_254479[0]), NTI256451);
									if (chklist_254454[0] != null) { chklist_254454[0].push({Field0: idx_256341, Field1: word_256414, Field2: false, Field3: nimCopy(null, levs_256456, NTI254452)}); } else { chklist_254454[0] = [{Field0: idx_256341, Field1: word_256414, Field2: false, Field3: nimCopy(null, levs_256456, NTI254452)}]; };
									allvalid_256342 = false;
								}
								
								idx_256341 = addInt(idx_256341, 1);
								i_259862 = addInt(i_259862, 1);
								if (!(((words_256325 != null ? words_256325.length : 0) == l_259863))) {
								failed_assert_impl_56866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
					if (!allvalid_256342) Tmp6 = false; else {						Tmp6 = (12 <= idx_256341);					}					if (!Tmp6) Tmp5 = false; else {						Tmp5 = (modInt(idx_256341, 3) == 0);					}				if (Tmp5) {
				          var bip39 = coinlibs.bip39;
          if(bip39.validateMnemonic(input_words_254429[0], bip39_wordlist_254479[0])) {
            mnemonic_fulfill_254073[0] = true
          } else {
            Notify.show('Warning', 'There are no misspellings, but some words seem to be wrong.' + (advance_256314 ? '' : ' Try to use [Advanced Check]'), Notify.msgtype.warning);
          }
        
				if (mnemonic_fulfill_254073[0]) {
				view_selector_254124(4, false);
				}
				
				}
				
				}
				else {
					chklist_254454[0] = nimCopy(null, [], NTI256486);
				}
				
				autocomplete_words_254446[0] = nimCopy(null, [], NTI256501);
				view_update_254303();

			
		}

	var result_256317 = null;

		result_256317 = HEX3Aanonymous_256318;

	return result_256317;

}

function set_input_text_240832(n_240834, s_240835) {
		n_240834.text = s_240835;
		if (!((n_240834.dom == null))) {
		n_240834.dom.value = s_240835;
		}
		

	
}

function select_word_256164(input_id_256166, word_256167, whole_replace_256168) {

		function HEX3Aanonymous_256172() {
					var Tmp1;

				var x_256174 = get_vnode_by_id_231117(input_id_256166, kxi_230324[0]);
				var s_256175 = value_209822(x_256174);
					if (!!((s_256175 == null))) Tmp1 = false; else {						Tmp1 = (0 < (s_256175 != null ? s_256175.length : 0));					}				if (Tmp1) {
				var input_elm_256190 = document.getElementById((input_id_256166));
				var cur_256196 = input_elm_256190.selectionStart;
				var newcur_256197 = cur_256196;
				if (whole_replace_256168) {
				          var t = s_256175.substr(0, cur_256196).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            s_256175 = s_256175.substr(0, cur_256196 - t.length) + word_256167;
            newcur_256197 = s_256175.length;
          }
        
				set_input_text_240832(x_256174, s_256175);
				editing_words_254428[0] = s_256175;
				input_elm_256190.focus();
				input_elm_256190.selectionStart = newcur_256197;
				input_elm_256190.selectionEnd = newcur_256197;
				}
				else {
					          var t = s_256175.substr(0, cur_256196).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            var tail = s_256175.substr(cur_256196) || '';
            s_256175 = s_256175.substr(0, cur_256196 - t.length) + word_256167 + tail;
            newcur_256197 = s_256175.length - tail.length;
          }
        
					set_input_text_240832(x_256174, s_256175);
					editing_words_254428[0] = s_256175;
					input_elm_256190.focus();
					input_elm_256190.selectionEnd = newcur_256197;
				}
				
				}
				
				autocomplete_words_254446[0] = nimCopy(null, [], NTI256270);
				view_update_254303();

			
		}

	var result_256171 = null;

		result_256171 = HEX3Aanonymous_256172;

	return result_256171;

}

function fix_word_256528(input_id_256530, idx_256531, word_256532) {

		function HEX3Aanonymous_256536() {
					var Tmp1;

				var x_256538 = get_vnode_by_id_231117(input_id_256530, kxi_230324[0]);
				var s_256539 = value_209822(x_256538);
					if (!!((s_256539 == null))) Tmp1 = false; else {						Tmp1 = (0 < (s_256539 != null ? s_256539.length : 0));					}				if (Tmp1) {
				var ret_256542 = null;
				        ret_256542 = "";
        var count = 0;
        var find = false;
        var skip = false;
        for(var t in s_256539) {
          if(/[ 　\n\r]/.test(s_256539[t])) {
            ret_256542 += s_256539[t];
            if(find) {
              count++;
            }
            find = false;
            skip = false;
          } else {
            find = true;
            if(idx_256531 == count && skip == false) {
              ret_256542 += word_256532;
              skip = true;
            } else {
              if(!skip) {
                ret_256542 += s_256539[t];
              }
            }
          }
        }
      
				set_input_text_240832(x_256538, ret_256542);
				editing_words_254428[0] = ret_256542;
				confirm_mnemonic_256311(input_id_256530, confirm_mnemonic_advanced_256297[0])();
				}
				

			
		}

	var result_256535 = null;

		result_256535 = HEX3Aanonymous_256536;

	return result_256535;

}

function mnemonic_editor_256638() {
	var result_256640 = null;

		var input_id_256641 = "minput";
		var tmp_256684 = tree_212046(43, []);
		var tmp_256685 = tree_212046(43, []);
		tmp_256685.class = "ui clearing segment medit-seg";
		var tmp_256691 = tree_212046(43, []);
		tmp_256691.class = "ui form";
		var tmp_256692 = tree_212046(43, []);
		tmp_256692.class = "field";
		var tmp_256693 = tree_212046(104, []);
		add_210786(tmp_256693, text_212164(makeNimstrLit("Select mnemonic language")));
		add_210786(tmp_256692, tmp_256693);
		var tmp_256694 = tree_212046(43, []);
		tmp_256694.class = "ui selection dropdown";
		var tmp_256695 = tree_212046(105, []);
		set_attr_210568(tmp_256695, "type", "hidden");
		set_attr_210568(tmp_256695, "name", "mnemonic-language");
		valueHEX3D_209839(tmp_256695, "1");
		add_event_handler_240548(tmp_256695, 8, change_language_256570, kxi_230324[0]);
		add_210786(tmp_256694, tmp_256695);
		var tmp_256696 = tree_212046(61, []);
		tmp_256696.class = "dropdown icon";
		add_210786(tmp_256694, tmp_256696);
		var tmp_256697 = tree_212046(43, []);
		tmp_256697.class = "default text";
		add_210786(tmp_256697, text_212164(makeNimstrLit("Mnemonic Language")));
		add_210786(tmp_256694, tmp_256697);
		var tmp_256698 = tree_212046(43, []);
		tmp_256698.class = "menu";
		var tmp_256699 = tree_212046(43, []);
		tmp_256699.class = "item";
		set_attr_210568(tmp_256699, "data-value", "1");
		add_210786(tmp_256699, text_212164(makeNimstrLit("Japanese")));
		add_210786(tmp_256698, tmp_256699);
		var tmp_256700 = tree_212046(43, []);
		tmp_256700.class = "item";
		set_attr_210568(tmp_256700, "data-value", "0");
		add_210786(tmp_256700, text_212164(makeNimstrLit("English")));
		add_210786(tmp_256698, tmp_256700);
		add_210786(tmp_256694, tmp_256698);
		add_210786(tmp_256692, tmp_256694);
		add_210786(tmp_256691, tmp_256692);
		var tmp_256701 = tree_212046(43, []);
		tmp_256701.class = "field minput-field";
		var tmp_256702 = tree_212046(104, []);
		add_210786(tmp_256702, text_212164(makeNimstrLit("Import your mnemonic you already have")));
		add_210786(tmp_256701, tmp_256702);
		var tmp_256703 = tree_212046(111, []);
		tmp_256703.id = input_id_256641;
		valueHEX3D_209839(tmp_256703, editing_words_254428[0]);
		add_event_handler_240548(tmp_256703, 3, check_mnemonic_256053, kxi_230324[0]);
		add_event_handler_240548(tmp_256703, 16, check_mnemonic_256053, kxi_230324[0]);
		set_attr_210568(tmp_256703, "spellcheck", "false");
		add_210786(tmp_256701, tmp_256703);
		add_210786(tmp_256691, tmp_256701);
		add_210786(tmp_256685, tmp_256691);
		var tmp_256704 = tree_212046(106, []);
		tmp_256704.class = "ui right floated primary button";
		add_event_handler_240584(tmp_256704, 0, confirm_mnemonic_256311(input_id_256641, false), kxi_230324[0]);
		add_210786(tmp_256704, text_212164(makeNimstrLit("Check")));
		add_210786(tmp_256685, tmp_256704);
		var tmp_256705 = tree_212046(106, []);
		tmp_256705.class = "ui right floated default button";
		add_event_handler_240584(tmp_256705, 0, confirm_mnemonic_256311(input_id_256641, true), kxi_230324[0]);
		add_210786(tmp_256705, text_212164(makeNimstrLit("Advanced Check")));
		add_210786(tmp_256685, tmp_256705);
		add_210786(tmp_256684, tmp_256685);
		var tmp_256706 = tree_212046(43, []);
		tmp_256706.class = "medit-autocomp";
		L1: do {
			var word_256797 = null;
			var i_259828 = 0;
			var l_259829 = (autocomplete_words_254446[0] != null ? autocomplete_words_254446[0].length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_259828 < l_259829)) break L3;
						word_256797 = autocomplete_words_254446[0][chckIndx(i_259828, 0, autocomplete_words_254446[0].length+0-1)-0];
						var tmp_256707 = tree_212046(106, []);
						tmp_256707.class = "ui mini teal label";
						add_event_handler_240584(tmp_256707, 0, select_word_256164(input_id_256641, word_256797, true), kxi_230324[0]);
						add_210786(tmp_256707, text_212201(word_256797));
						add_210786(tmp_256706, tmp_256707);
						i_259828 = addInt(i_259828, 1);
						if (!(((autocomplete_words_254446[0] != null ? autocomplete_words_254446[0].length : 0) == l_259829))) {
						failed_assert_impl_56866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L4: do {
			var i_256820 = 0;
			var colontmp__259848 = 0;
			colontmp__259848 = (chklist_254454[0] != null ? (chklist_254454[0].length-1) : -1);
			var res_259849 = 0;
			L5: do {
					L6: while (true) {
					if (!(res_259849 <= colontmp__259848)) break L6;
						i_256820 = res_259849;
						if (chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field2) {
						var tmp_256708 = tree_212046(106, []);
						tmp_256708.class = "ui mini green label";
						var tmp_256709 = tree_212046(61, []);
						tmp_256709.class = "check circle icon";
						add_210786(tmp_256709, text_212201((" " + chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field1)));
						add_210786(tmp_256708, tmp_256709);
						L7: do {
							var lev_256835 = null;
							var colontmp__259836 = null;
							colontmp__259836 = chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field3;
							var i_259837 = 0;
							var l_259838 = (colontmp__259836 != null ? colontmp__259836.length : 0);
							L8: do {
									L9: while (true) {
									if (!(i_259837 < l_259838)) break L9;
										lev_256835 = colontmp__259836[chckIndx(i_259837, 0, colontmp__259836.length+0-1)-0];
										if (!((chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field1 == lev_256835))) {
										var tmp_256710 = tree_212046(106, []);
										tmp_256710.class = "ui mini blue basic label";
										add_event_handler_240584(tmp_256710, 0, fix_word_256528(input_id_256641, chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field0, lev_256835), kxi_230324[0]);
										add_210786(tmp_256710, text_212201(lev_256835));
										add_210786(tmp_256708, tmp_256710);
										}
										
										i_259837 = addInt(i_259837, 1);
										if (!(((colontmp__259836 != null ? colontmp__259836.length : 0) == l_259838))) {
										failed_assert_impl_56866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						add_210786(tmp_256706, tmp_256708);
						}
						else {
							var tmp_256711 = tree_212046(106, []);
							tmp_256711.class = "ui mini pink label";
							var tmp_256712 = tree_212046(61, []);
							tmp_256712.class = "x icon";
							add_210786(tmp_256712, text_212201((" " + chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field1)));
							add_210786(tmp_256711, tmp_256712);
							L10: do {
								var lev_256855 = null;
								var colontmp__259844 = null;
								colontmp__259844 = chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field3;
								var i_259845 = 0;
								var l_259846 = (colontmp__259844 != null ? colontmp__259844.length : 0);
								L11: do {
										L12: while (true) {
										if (!(i_259845 < l_259846)) break L12;
											lev_256855 = colontmp__259844[chckIndx(i_259845, 0, colontmp__259844.length+0-1)-0];
											var tmp_256713 = tree_212046(106, []);
											tmp_256713.class = "ui mini blue basic label";
											add_event_handler_240584(tmp_256713, 0, fix_word_256528(input_id_256641, chklist_254454[0][chckIndx(i_256820, 0, chklist_254454[0].length+0-1)-0].Field0, lev_256855), kxi_230324[0]);
											add_210786(tmp_256713, text_212201(lev_256855));
											add_210786(tmp_256711, tmp_256713);
											i_259845 = addInt(i_259845, 1);
											if (!(((colontmp__259844 != null ? colontmp__259844.length : 0) == l_259846))) {
											failed_assert_impl_56866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
											}
											
										}
								} while(false);
							} while(false);
							add_210786(tmp_256706, tmp_256711);
						}
						
						res_259849 = addInt(res_259849, 1);
					}
			} while(false);
		} while(false);
		add_210786(tmp_256684, tmp_256706);
		result_256640 = tmp_256684;

	return result_256640;

}

function protect_selector_254370(protect_type_254372) {

		function HEX3Aanonymous_254376() {
				      qrReader.hide();
    
				current_protect_type_254043[0] = protect_type_254372;
				show_page1_254069[0] = false;
				show_page2_254070[0] = true;
				if ((current_protect_type_254043[0] == 0)) {
				        $('#keyselector').removeClass('grey').addClass('olive');
        $('#passselector').removeClass('olive').addClass('grey');
      
				}
				else {
					        $('#passselector').removeClass('grey').addClass('olive');
        $('#keyselector').removeClass('olive').addClass('grey');
      
				}
				
				view_update_254303();

			
		}

	var result_254375 = null;

		result_254375 = HEX3Aanonymous_254376;

	return result_254375;

}

function confirm_key_card_255934(ev_255936, n_255937) {
		var ret_lock_255938 = false;
		    console.log('confirmKeyCard');
    var wallet = pastel.wallet;
    ret_lock_255938 = wallet.lockShieldedKeys(key_card_val_255835[0], 1, true);
  
		if (ret_lock_255938) {
		key_card_fulfill_254074[0] = true;
		show_page3_254071[0] = true;
		view_update_254303();
		}
		else {
			      Notify.show("Error", "Failed to lock your wallet with the key card.", Notify.msgtype.error);
    
		}
		

	
}

function cb_key_qr_done_255849(data_255851) {
		rawEcho(makeNimstrLit("cbQrDone:"), cstrToNimstr(data_255851));
		key_card_val_255835[0] = data_255851;
		    qrReader.hide();
  
		view_selector_254124(8, false);

	
}

function show_key_qr_255901() {

		function HEX3Aanonymous_255906() {
				key_card_fulfill_254074[0] = false;
				show_page3_254071[0] = false;
				      qrReader.show(cb_key_qr_done_255849);
    

			
		}

	var result_255905 = null;

		result_255905 = HEX3Aanonymous_255906;

	return result_255905;

}

function change_passphrase_257745(ev_257747, n_257748) {
		passphrase_fulfill_254075[0] = false;
		show_page3_254071[0] = false;
		pass_phrase_254456[0] = value_209822(n_257748);
		view_update_254303();

	
}

function confirm_passphrase_257762(ev_257764, n_257765) {
		var ret_lock_257766 = false;
		    var wallet = pastel.wallet;
    ret_lock_257766 = wallet.lockShieldedKeys($('input[name="input-passphrase"]').val(), 2, true);
  
		if (ret_lock_257766) {
		passphrase_fulfill_254075[0] = true;
		show_page3_254071[0] = true;
		view_update_254303();
		}
		else {
			      Notify.show("Error", "Failed to lock your wallet with the passphrase.", Notify.msgtype.error);
    
		}
		

	
}

function passphrase_editor_257780() {
	var result_257782 = null;

		var tmp_257783 = tree_212046(43, []);
		var tmp_257784 = tree_212046(43, []);
		tmp_257784.class = "ui clearing segment passphrase-seg";
		var tmp_257785 = tree_212046(43, []);
		tmp_257785.class = "ui inverted segment";
		var tmp_257786 = tree_212046(24, []);
		tmp_257786.class = "ui grey inverted header center";
		add_210786(tmp_257786, text_212164(makeNimstrLit("Input passphrase")));
		add_210786(tmp_257785, tmp_257786);
		var tmp_257787 = tree_212046(43, []);
		tmp_257787.class = "ui form";
		var tmp_257788 = tree_212046(43, []);
		tmp_257788.class = "field";
		var tmp_257789 = tree_212046(105, []);
		tmp_257789.class = "center";
		set_attr_210568(tmp_257789, "type", "text");
		set_attr_210568(tmp_257789, "name", "input-passphrase");
		valueHEX3D_209839(tmp_257789, pass_phrase_254456[0]);
		set_attr_210568(tmp_257789, "placeholder", "Passphrase");
		add_event_handler_240548(tmp_257789, 3, change_passphrase_257745, kxi_230324[0]);
		add_210786(tmp_257788, tmp_257789);
		add_210786(tmp_257787, tmp_257788);
		add_210786(tmp_257785, tmp_257787);
		add_210786(tmp_257784, tmp_257785);
		var tmp_257790 = tree_212046(106, []);
		tmp_257790.class = "ui right floated olive button";
		add_event_handler_240548(tmp_257790, 0, confirm_passphrase_257762, kxi_230324[0]);
		add_210786(tmp_257790, text_212164(makeNimstrLit("Save")));
		add_210786(tmp_257784, tmp_257790);
		add_210786(tmp_257783, tmp_257784);
		result_257782 = tmp_257783;

	return result_257782;

}

function btn_send_257952() {

		function HEX3Aanonymous_257957() {
				      sendrecv_select((sendrecv_switch == 1) ? 0 : 1);
    

			
		}

	var result_257956 = null;

		result_257956 = HEX3Aanonymous_257957;

	return result_257956;

}

function btn_receive_257985() {

		function HEX3Aanonymous_257990() {
				      if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 2) ? 0 : 2);
    

			
		}

	var result_257989 = null;

		result_257989 = HEX3Aanonymous_257990;

	return result_257989;

}

function btn_recv_close_258051() {

		function HEX3Aanonymous_258056() {
				      clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(2);
    

			
		}

	var result_258055 = null;

		result_258055 = HEX3Aanonymous_258056;

	return result_258055;

}

function recv_address_selector_258084() {
	var result_258086 = null;

		var tmp_258087 = tree_212046(43, []);
		tmp_258087.id = "receive-address";
		tmp_258087.class = "ui center aligned segment hidden";
		var tmp_258088 = tree_212046(43, []);
		tmp_258088.class = "ui top attached label recvaddress";
		add_210786(tmp_258088, text_212164(makeNimstrLit("Receive Address ")));
		var tmp_258089 = tree_212046(70, []);
		var tmp_258090 = tree_212046(61, []);
		tmp_258090.class = "window maximize outline icon btn-maximize";
		add_210786(tmp_258089, tmp_258090);
		var tmp_258091 = tree_212046(61, []);
		tmp_258091.class = "close icon btn-close";
		add_event_handler_240584(tmp_258091, 0, btn_recv_close_258051(), kxi_230324[0]);
		add_210786(tmp_258089, tmp_258091);
		add_210786(tmp_258088, tmp_258089);
		add_210786(tmp_258087, tmp_258088);
		var tmp_258092 = tree_212046(43, []);
		tmp_258092.class = "ui mini basic icon buttons";
		var tmp_258093 = tree_212046(106, []);
		tmp_258093.id = "btn-recv-copy";
		tmp_258093.class = "ui button";
		set_attr_210568(tmp_258093, "title", "Copy");
		var tmp_258094 = tree_212046(61, []);
		tmp_258094.class = "copy outline icon";
		add_210786(tmp_258093, tmp_258094);
		add_210786(tmp_258092, tmp_258093);
		var tmp_258095 = tree_212046(106, []);
		tmp_258095.id = "btn-recv-qrcode";
		tmp_258095.class = "ui button";
		set_attr_210568(tmp_258095, "title", "QR Code");
		var tmp_258096 = tree_212046(61, []);
		tmp_258096.class = "qrcode icon";
		add_210786(tmp_258095, tmp_258096);
		add_210786(tmp_258092, tmp_258095);
		add_210786(tmp_258087, tmp_258092);
		var tmp_258097 = tree_212046(43, []);
		tmp_258097.id = "address-text";
		tmp_258097.class = "address";
		add_210786(tmp_258097, text_212164([]));
		add_210786(tmp_258087, tmp_258097);
		var tmp_258098 = tree_212046(43, []);
		tmp_258098.class = "balls";
		var tmp_258099 = tree_212046(43, []);
		tmp_258099.class = "used";
		var tmp_258100 = tree_212046(43, []);
		tmp_258100.class = "circular ui icon mini button ball";
		var tmp_258101 = tree_212046(75, []);
		set_attr_210568(tmp_258101, "src", "");
		add_210786(tmp_258100, tmp_258101);
		add_210786(tmp_258099, tmp_258100);
		add_210786(tmp_258098, tmp_258099);
		var tmp_258102 = tree_212046(43, []);
		tmp_258102.class = "new";
		var tmp_258103 = tree_212046(43, []);
		tmp_258103.class = "circular ui icon mini button ball";
		var tmp_258104 = tree_212046(75, []);
		set_attr_210568(tmp_258104, "src", "");
		add_210786(tmp_258103, tmp_258104);
		add_210786(tmp_258102, tmp_258103);
		var tmp_258105 = tree_212046(43, []);
		tmp_258105.class = "circular ui icon mini button ball";
		var tmp_258106 = tree_212046(75, []);
		set_attr_210568(tmp_258106, "src", "");
		add_210786(tmp_258105, tmp_258106);
		add_210786(tmp_258102, tmp_258105);
		var tmp_258107 = tree_212046(43, []);
		tmp_258107.class = "circular ui icon mini button ball";
		var tmp_258108 = tree_212046(75, []);
		set_attr_210568(tmp_258108, "src", "");
		add_210786(tmp_258107, tmp_258108);
		add_210786(tmp_258102, tmp_258107);
		var tmp_258109 = tree_212046(43, []);
		tmp_258109.class = "circular ui icon mini button ball";
		var tmp_258110 = tree_212046(75, []);
		set_attr_210568(tmp_258110, "src", "");
		add_210786(tmp_258109, tmp_258110);
		add_210786(tmp_258102, tmp_258109);
		var tmp_258111 = tree_212046(43, []);
		tmp_258111.class = "circular ui icon mini button ball";
		var tmp_258112 = tree_212046(75, []);
		set_attr_210568(tmp_258112, "src", "");
		add_210786(tmp_258111, tmp_258112);
		add_210786(tmp_258102, tmp_258111);
		add_210786(tmp_258098, tmp_258102);
		add_210786(tmp_258087, tmp_258098);
		result_258086 = tmp_258087;

	return result_258086;

}

function recv_address_modal_258232() {
	var result_258234 = null;

		var tmp_258235 = tree_212046(43, []);
		tmp_258235.id = "recv-modal";
		tmp_258235.class = "ui";
		var tmp_258236 = tree_212046(61, []);
		tmp_258236.class = "close icon btn-close-arc";
		add_210786(tmp_258235, tmp_258236);
		var tmp_258237 = tree_212046(43, []);
		tmp_258237.class = "close-arc";
		add_210786(tmp_258235, tmp_258237);
		var tmp_258238 = tree_212046(43, []);
		tmp_258238.id = "recv-qrcode";
		tmp_258238.class = "qrcode";
		set_attr_210568(tmp_258238, "title", "");
		var tmp_258239 = tree_212046(84, []);
		set_attr_210568(tmp_258239, "width", "0");
		set_attr_210568(tmp_258239, "height", "0");
		add_210786(tmp_258238, tmp_258239);
		add_210786(tmp_258235, tmp_258238);
		var tmp_258240 = tree_212046(43, []);
		tmp_258240.id = "recvaddr-form";
		tmp_258240.class = "ui container";
		var tmp_258241 = tree_212046(43, []);
		tmp_258241.class = "ui form";
		var tmp_258242 = tree_212046(43, []);
		tmp_258242.class = "two fields";
		var tmp_258243 = tree_212046(43, []);
		tmp_258243.class = "field";
		var tmp_258244 = tree_212046(104, []);
		add_210786(tmp_258244, text_212164(makeNimstrLit("Receive Address")));
		add_210786(tmp_258243, tmp_258244);
		var tmp_258245 = tree_212046(43, []);
		tmp_258245.class = "ui selection dropdown addr-selection";
		set_attr_210568(tmp_258245, "tabindex", "0");
		var tmp_258246 = tree_212046(105, []);
		set_attr_210568(tmp_258246, "type", "hidden");
		set_attr_210568(tmp_258246, "name", "address");
		valueHEX3D_209839(tmp_258246, "");
		add_210786(tmp_258245, tmp_258246);
		var tmp_258247 = tree_212046(61, []);
		tmp_258247.class = "dropdown icon";
		add_210786(tmp_258245, tmp_258247);
		var tmp_258248 = tree_212046(43, []);
		tmp_258248.class = "text";
		var tmp_258249 = tree_212046(75, []);
		set_attr_210568(tmp_258249, "clsss", "ui mini avatar image");
		set_attr_210568(tmp_258249, "src", "");
		add_210786(tmp_258248, tmp_258249);
		add_210786(tmp_258248, text_212164([]));
		add_210786(tmp_258245, tmp_258248);
		var tmp_258250 = tree_212046(43, []);
		tmp_258250.class = "menu";
		set_attr_210568(tmp_258250, "tabindex", "-1");
		add_210786(tmp_258245, tmp_258250);
		add_210786(tmp_258243, tmp_258245);
		add_210786(tmp_258242, tmp_258243);
		var tmp_258251 = tree_212046(43, []);
		tmp_258251.class = "field";
		var tmp_258252 = tree_212046(104, []);
		add_210786(tmp_258252, text_212164(makeNimstrLit("Amount")));
		add_210786(tmp_258251, tmp_258252);
		var tmp_258253 = tree_212046(43, []);
		tmp_258253.class = "ui right labeled input";
		var tmp_258254 = tree_212046(105, []);
		tmp_258254.class = "right";
		set_attr_210568(tmp_258254, "type", "text");
		set_attr_210568(tmp_258254, "name", "amount");
		set_attr_210568(tmp_258254, "placeholder", "Amount");
		add_210786(tmp_258253, tmp_258254);
		var tmp_258255 = tree_212046(43, []);
		tmp_258255.class = "ui basic label";
		add_210786(tmp_258255, text_212164(makeNimstrLit("ZNY")));
		add_210786(tmp_258253, tmp_258255);
		add_210786(tmp_258251, tmp_258253);
		add_210786(tmp_258242, tmp_258251);
		add_210786(tmp_258241, tmp_258242);
		var tmp_258256 = tree_212046(43, []);
		tmp_258256.class = "two fields";
		var tmp_258257 = tree_212046(43, []);
		tmp_258257.class = "field";
		var tmp_258258 = tree_212046(104, []);
		add_210786(tmp_258258, text_212164(makeNimstrLit("Label")));
		add_210786(tmp_258257, tmp_258258);
		var tmp_258259 = tree_212046(105, []);
		tmp_258259.class = "ui input";
		set_attr_210568(tmp_258259, "type", "text");
		set_attr_210568(tmp_258259, "name", "label");
		set_attr_210568(tmp_258259, "placeholder", "Label");
		add_210786(tmp_258257, tmp_258259);
		add_210786(tmp_258256, tmp_258257);
		var tmp_258260 = tree_212046(43, []);
		tmp_258260.class = "field";
		var tmp_258261 = tree_212046(104, []);
		add_210786(tmp_258261, text_212164(makeNimstrLit("Message")));
		add_210786(tmp_258260, tmp_258261);
		var tmp_258262 = tree_212046(111, []);
		tmp_258262.class = "ui textarea";
		set_attr_210568(tmp_258262, "rows", "2");
		set_attr_210568(tmp_258262, "name", "message");
		set_attr_210568(tmp_258262, "placeholder", "Message");
		add_210786(tmp_258260, tmp_258262);
		add_210786(tmp_258256, tmp_258260);
		add_210786(tmp_258241, tmp_258256);
		add_210786(tmp_258240, tmp_258241);
		add_210786(tmp_258235, tmp_258240);
		result_258234 = tmp_258235;

	return result_258234;

}

function btn_send_close_258018() {

		function HEX3Aanonymous_258023() {
				      clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(1);
    

			
		}

	var result_258022 = null;

		result_258022 = HEX3Aanonymous_258023;

	return result_258022;

}

function send_form_258402() {
	var result_258404 = null;

		var tmp_258405 = tree_212046(43, []);
		tmp_258405.id = "send-coins";
		tmp_258405.class = "ui center aligned segment hidden";
		var tmp_258406 = tree_212046(43, []);
		tmp_258406.class = "ui top attached label sendcoins";
		add_210786(tmp_258406, text_212164(makeNimstrLit("Send Coins ")));
		var tmp_258407 = tree_212046(70, []);
		var tmp_258408 = tree_212046(61, []);
		tmp_258408.class = "window maximize outline icon btn-maximize";
		add_210786(tmp_258407, tmp_258408);
		var tmp_258409 = tree_212046(61, []);
		tmp_258409.class = "close icon btn-close";
		add_event_handler_240584(tmp_258409, 0, btn_send_close_258018(), kxi_230324[0]);
		add_210786(tmp_258407, tmp_258409);
		add_210786(tmp_258406, tmp_258407);
		add_210786(tmp_258405, tmp_258406);
		var tmp_258410 = tree_212046(43, []);
		tmp_258410.class = "ui mini basic icon buttons";
		var tmp_258411 = tree_212046(106, []);
		tmp_258411.id = "btn-send-clear";
		tmp_258411.class = "ui button";
		set_attr_210568(tmp_258411, "title", "Clear");
		var tmp_258412 = tree_212046(61, []);
		tmp_258412.class = "eraser icon";
		add_210786(tmp_258411, tmp_258412);
		add_210786(tmp_258410, tmp_258411);
		var tmp_258413 = tree_212046(106, []);
		tmp_258413.id = "btn-send-qrcode";
		tmp_258413.class = "ui button";
		set_attr_210568(tmp_258413, "title", "Scan QR Code");
		var tmp_258414 = tree_212046(61, []);
		tmp_258414.class = "camera icon";
		add_210786(tmp_258413, tmp_258414);
		add_210786(tmp_258410, tmp_258413);
		add_210786(tmp_258405, tmp_258410);
		var tmp_258415 = tree_212046(43, []);
		tmp_258415.class = "ui form";
		var tmp_258416 = tree_212046(43, []);
		tmp_258416.class = "field";
		var tmp_258417 = tree_212046(104, []);
		add_210786(tmp_258417, text_212164(makeNimstrLit("Send Address")));
		add_210786(tmp_258416, tmp_258417);
		var tmp_258418 = tree_212046(43, []);
		tmp_258418.class = "ui small input";
		var tmp_258419 = tree_212046(105, []);
		tmp_258419.class = "center";
		set_attr_210568(tmp_258419, "type", "text");
		set_attr_210568(tmp_258419, "name", "address");
		set_attr_210568(tmp_258419, "placeholder", "Address");
		add_210786(tmp_258418, tmp_258419);
		add_210786(tmp_258416, tmp_258418);
		add_210786(tmp_258415, tmp_258416);
		var tmp_258420 = tree_212046(43, []);
		tmp_258420.class = "field";
		var tmp_258421 = tree_212046(104, []);
		add_210786(tmp_258421, text_212164(makeNimstrLit("Amount")));
		add_210786(tmp_258420, tmp_258421);
		var tmp_258422 = tree_212046(43, []);
		tmp_258422.class = "ui small input";
		var tmp_258423 = tree_212046(105, []);
		tmp_258423.class = "center";
		set_attr_210568(tmp_258423, "type", "text");
		set_attr_210568(tmp_258423, "name", "amount");
		set_attr_210568(tmp_258423, "placeholder", "Amount");
		add_210786(tmp_258422, tmp_258423);
		var tmp_258424 = tree_212046(43, []);
		tmp_258424.class = "ui mini basic icon buttons utxoctrl";
		var tmp_258425 = tree_212046(106, []);
		tmp_258425.id = "btn-utxo-plus";
		tmp_258425.class = "ui button";
		set_attr_210568(tmp_258425, "title", "-1 Ball");
		var tmp_258426 = tree_212046(61, []);
		tmp_258426.class = "minus circle icon";
		add_210786(tmp_258425, tmp_258426);
		add_210786(tmp_258424, tmp_258425);
		var tmp_258427 = tree_212046(106, []);
		tmp_258427.id = "btn-utxo-count";
		tmp_258427.class = "ui button sendutxos";
		add_210786(tmp_258427, text_212164(makeNimstrLit("\xE2\x89\xA424")));
		add_210786(tmp_258424, tmp_258427);
		var tmp_258428 = tree_212046(106, []);
		tmp_258428.id = "btn-utxo-minus";
		tmp_258428.class = "ui button";
		set_attr_210568(tmp_258428, "title", "+1 Ball");
		var tmp_258429 = tree_212046(61, []);
		tmp_258429.class = "plus circle icon";
		add_210786(tmp_258428, tmp_258429);
		add_210786(tmp_258424, tmp_258428);
		add_210786(tmp_258422, tmp_258424);
		add_210786(tmp_258420, tmp_258422);
		add_210786(tmp_258415, tmp_258420);
		var tmp_258430 = tree_212046(43, []);
		tmp_258430.class = "ui list uri-options";
		L1: do {
			var d_258542 = null;
			var v_259960 = null;
			for (var k in uriOptions) {
			  if (!uriOptions.hasOwnProperty(k)) continue;
			  v_259960=uriOptions[k];
			d_258542 = v_259960;
			var tmp_258431 = tree_212046(43, []);
			tmp_258431.class = "item";
			var tmp_258432 = tree_212046(43, []);
			tmp_258432.class = "content";
			var tmp_258433 = tree_212046(43, []);
			tmp_258433.class = "header";
			add_210786(tmp_258433, text_212201(d_258542.key));
			add_210786(tmp_258432, tmp_258433);
			var tmp_258434 = tree_212046(43, []);
			tmp_258434.class = "description";
			add_210786(tmp_258434, text_212201(d_258542.value));
			add_210786(tmp_258432, tmp_258434);
			add_210786(tmp_258431, tmp_258432);
			add_210786(tmp_258430, tmp_258431);
			}
		} while(false);
		add_210786(tmp_258415, tmp_258430);
		var tmp_258435 = tree_212046(43, []);
		tmp_258435.class = "fluid ui buttons";
		var tmp_258436 = tree_212046(106, []);
		tmp_258436.id = "btn-send";
		tmp_258436.class = "ui inverted olive button center btn-send";
		add_210786(tmp_258436, text_212164(makeNimstrLit("Send")));
		add_210786(tmp_258435, tmp_258436);
		add_210786(tmp_258415, tmp_258435);
		add_210786(tmp_258405, tmp_258415);
		result_258404 = tmp_258405;

	return result_258404;

}

function go_settings_257838() {

		function HEX3Aanonymous_257843() {
				rawEcho(nimBoolToStr(show_page4_254072[0]));
				if (!(show_page4_254072[0])) {
				view_selector_254124(14, false);
				supress_redraw_254076[0] = true;
				        $('#section4').show();
      
				}
				else {
					        TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
					view_selector_254124(14, false);
					        goSection('#section4');
      
				}
				

			
		}

	var result_257842 = null;

		result_257842 = HEX3Aanonymous_257843;

	return result_257842;

}

function go_logs_257873() {

		function HEX3Aanonymous_257878() {
				if (!(show_page4_254072[0])) {
				view_selector_254124(13, false);
				supress_redraw_254076[0] = true;
				        $('#section4').show();
      
				}
				else {
					        TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
					view_selector_254124(13, false);
					        goSection('#section4');
      
				}
				

			
		}

	var result_257877 = null;

		result_257877 = HEX3Aanonymous_257878;

	return result_257877;

}

function back_wallet_257906() {

		function HEX3Aanonymous_257911() {
				view_selector_254124(12, true);
				      goSection('#section3', page_scroll_done);
    

			
		}

	var result_257910 = null;

		result_257910 = HEX3Aanonymous_257911;

	return result_257910;

}

function settings_page_258657() {
	var result_258659 = null;

		var tmp_258660 = tree_212046(43, []);
		tmp_258660.id = "settings";
		tmp_258660.class = "ui container";
		var tmp_258661 = tree_212046(23, []);
		tmp_258661.class = "ui dividing header";
		add_210786(tmp_258661, text_212164(makeNimstrLit("Settings")));
		add_210786(tmp_258660, tmp_258661);
		var tmp_258662 = tree_212046(106, []);
		tmp_258662.id = "btn-reset";
		tmp_258662.class = "ui inverted red button";
		add_210786(tmp_258662, text_212164(makeNimstrLit("Reset Wallet")));
		add_210786(tmp_258660, tmp_258662);
		var tmp_258663 = tree_212046(43, []);
		tmp_258663.class = "ui pink inverted segment";
		add_210786(tmp_258663, text_212164(makeNimstrLit("        Delete all your wallet data in your web browser, including your encrypted secret keys.\x0A         If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\x0A         or mnemonics before deleting it. Otherwise you will lost your coins forever.\x0A      ")));
		add_210786(tmp_258660, tmp_258663);
		var tmp_258664 = tree_212046(43, []);
		tmp_258664.class = "ui checkbox";
		var tmp_258665 = tree_212046(105, []);
		set_attr_210568(tmp_258665, "type", "checkbox");
		set_attr_210568(tmp_258665, "name", "confirm");
		add_210786(tmp_258664, tmp_258665);
		var tmp_258666 = tree_212046(104, []);
		add_210786(tmp_258666, text_212164(makeNimstrLit("I confirmed that I have the seed cards or mnemonics or no coins in my wallet.")));
		add_210786(tmp_258664, tmp_258666);
		add_210786(tmp_258660, tmp_258664);
		result_258659 = tmp_258660;

	return result_258659;

}

function settings_modal_258591() {
	var result_258593 = null;

		var tmp_258594 = tree_212046(43, []);
		tmp_258594.id = "settings-modal";
		tmp_258594.class = "ui basic modal";
		var tmp_258595 = tree_212046(43, []);
		tmp_258595.class = "ui icon header";
		var tmp_258596 = tree_212046(61, []);
		tmp_258596.class = "trash icon";
		add_210786(tmp_258595, tmp_258596);
		add_210786(tmp_258595, text_212164(makeNimstrLit("Reset Wallet")));
		add_210786(tmp_258594, tmp_258595);
		var tmp_258597 = tree_212046(43, []);
		tmp_258597.class = "content";
		var tmp_258598 = tree_212046(31, []);
		add_210786(tmp_258598, text_212164(makeNimstrLit("Are you sure to reset your wallet?")));
		add_210786(tmp_258597, tmp_258598);
		add_210786(tmp_258594, tmp_258597);
		var tmp_258599 = tree_212046(43, []);
		tmp_258599.class = "actions";
		var tmp_258600 = tree_212046(43, []);
		tmp_258600.class = "ui basic cancel inverted button";
		var tmp_258601 = tree_212046(61, []);
		tmp_258601.class = "remove icon";
		add_210786(tmp_258600, tmp_258601);
		add_210786(tmp_258600, text_212164(makeNimstrLit("Cancel")));
		add_210786(tmp_258599, tmp_258600);
		var tmp_258602 = tree_212046(43, []);
		tmp_258602.class = "ui red ok inverted button";
		var tmp_258603 = tree_212046(61, []);
		tmp_258603.class = "checkmark icon";
		add_210786(tmp_258602, tmp_258603);
		add_210786(tmp_258602, text_212164(makeNimstrLit("Reset")));
		add_210786(tmp_258599, tmp_258602);
		add_210786(tmp_258594, tmp_258599);
		result_258593 = tmp_258594;

	return result_258593;

}

function app_main_258708(data_258710) {
	var result_258711 = null;

		var tmp_258712 = tree_212046(43, []);
		if (show_page1_254069[0]) {
		var tmp_258713 = tree_212046(17, []);
		tmp_258713.id = "section1";
		tmp_258713.class = "section";
		var tmp_258714 = tree_212046(43, []);
		tmp_258714.class = "intro";
		var tmp_258715 = tree_212046(43, []);
		tmp_258715.class = "intro-head";
		var tmp_258716 = tree_212046(43, []);
		tmp_258716.class = "caption";
		add_210786(tmp_258716, text_212164(makeNimstrLit("Pastel Wallet")));
		add_210786(tmp_258715, tmp_258716);
		var tmp_258717 = tree_212046(43, []);
		tmp_258717.class = "ui container method-selector";
		var tmp_258718 = tree_212046(43, []);
		tmp_258718.class = "title";
		add_210786(tmp_258718, text_212164(makeNimstrLit("Import the master seed to start your wallet.")));
		add_210786(tmp_258717, tmp_258718);
		var tmp_258719 = tree_212046(43, []);
		tmp_258719.class = "ui buttons";
		var tmp_258720 = tree_212046(106, []);
		tmp_258720.id = "seedselector";
		tmp_258720.class = "ui olive button";
		add_event_handler_240584(tmp_258720, 0, import_selector_254318(0), kxi_230324[0]);
		var tmp_258721 = tree_212046(61, []);
		tmp_258721.class = "qrcode icon";
		add_210786(tmp_258720, tmp_258721);
		add_210786(tmp_258720, text_212164(makeNimstrLit("Seed card")));
		add_210786(tmp_258719, tmp_258720);
		var tmp_258722 = tree_212046(43, []);
		tmp_258722.class = "or";
		add_210786(tmp_258719, tmp_258722);
		var tmp_258723 = tree_212046(106, []);
		tmp_258723.id = "mnemonicselector";
		tmp_258723.class = "ui grey button";
		add_event_handler_240584(tmp_258723, 0, import_selector_254318(1), kxi_230324[0]);
		var tmp_258724 = tree_212046(61, []);
		tmp_258724.class = "list alternate icon";
		add_210786(tmp_258723, tmp_258724);
		add_210786(tmp_258723, text_212164(makeNimstrLit("Mnemonic")));
		add_210786(tmp_258719, tmp_258723);
		add_210786(tmp_258717, tmp_258719);
		add_210786(tmp_258715, tmp_258717);
		add_210786(tmp_258714, tmp_258715);
		var tmp_258725 = tree_212046(43, []);
		tmp_258725.class = "intro-body";
		if ((current_import_type_254037[0] == 0)) {
		var tmp_258726 = tree_212046(43, []);
		tmp_258726.id = "seed-seg";
		tmp_258726.class = "ui left aligned segment seed-seg";
		if (show_scan_result_254064[0]) {
		var tmp_258727 = tree_212046(43, []);
		tmp_258727.class = "ui link cards seed-card-holder";
		tmp_258727.id = "seed-card-holder";
		L1: do {
			var idx_259014 = 0;
			var seed_card_info_259015 = null;
			var i_259570 = 0;
			var l_259571 = (seed_card_infos_254427[0] != null ? seed_card_infos_254427[0].length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_259570 < l_259571)) break L3;
						idx_259014 = i_259570;
						seed_card_info_259015 = seed_card_infos_254427[0][chckIndx(i_259570, 0, seed_card_infos_254427[0].length+0-1)-0];
						add_210786(tmp_258727, seed_card_256879(seed_card_info_259015, idx_259014));
						i_259570 = addInt(i_259570, 1);
						if (!(((seed_card_infos_254427[0] != null ? seed_card_infos_254427[0].length : 0) == l_259571))) {
						failed_assert_impl_56866(makeNimstrLit("iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		var tmp_258728 = tree_212046(43, []);
		tmp_258728.class = "seed-add-container";
		var tmp_258729 = tree_212046(106, []);
		tmp_258729.class = "circular ui icon button bt-add-seed";
		add_event_handler_240584(tmp_258729, 0, show_seed_qr_255868(), kxi_230324[0]);
		var tmp_258730 = tree_212046(61, []);
		tmp_258730.class = "plus icon";
		add_210786(tmp_258729, tmp_258730);
		add_210786(tmp_258728, tmp_258729);
		add_210786(tmp_258727, tmp_258728);
		add_210786(tmp_258726, tmp_258727);
		var tmp_258731 = tree_212046(44, []);
		tmp_258731.class = "pagenext";
		set_attr_210568(tmp_258731, "href", "#section2");
		var tmp_258732 = tree_212046(70, []);
		add_210786(tmp_258731, tmp_258732);
		add_210786(tmp_258731, text_212164(makeNimstrLit("Next")));
		add_210786(tmp_258726, tmp_258731);
		}
		
		if (show_scanning_254062[0]) {
		var tmp_258733 = tree_212046(43, []);
		tmp_258733.class = "qr-scanning";
		var tmp_258734 = tree_212046(43, []);
		add_210786(tmp_258733, tmp_258734);
		var tmp_258735 = tree_212046(43, []);
		add_210786(tmp_258733, tmp_258735);
		add_210786(tmp_258726, tmp_258733);
		}
		
		if (show_scan_seed_btn_254061[0]) {
		var tmp_258736 = tree_212046(43, []);
		tmp_258736.class = "ui teal labeled icon button bt-scan-seed";
		add_event_handler_240584(tmp_258736, 0, show_seed_qr_255868(), kxi_230324[0]);
		add_210786(tmp_258736, text_212164(makeNimstrLit("Scan seed card with camera")));
		var tmp_258737 = tree_212046(61, []);
		tmp_258737.class = "camera icon";
		add_210786(tmp_258736, tmp_258737);
		add_210786(tmp_258726, tmp_258736);
		}
		
		if (show_cam_tools_254063[0]) {
		var tmp_258738 = tree_212046(43, []);
		tmp_258738.class = "ui small basic icon buttons camtools";
		var tmp_258739 = tree_212046(106, []);
		tmp_258739.class = "ui button";
		add_event_handler_240584(tmp_258739, 0, cam_change_255952(), kxi_230324[0]);
		var tmp_258740 = tree_212046(61, []);
		tmp_258740.class = "camera icon";
		add_210786(tmp_258739, tmp_258740);
		add_210786(tmp_258738, tmp_258739);
		var tmp_258741 = tree_212046(106, []);
		tmp_258741.class = "ui button";
		add_event_handler_240584(tmp_258741, 0, cam_close_255985(), kxi_230324[0]);
		var tmp_258742 = tree_212046(61, []);
		tmp_258742.class = "window close icon";
		add_210786(tmp_258741, tmp_258742);
		add_210786(tmp_258738, tmp_258741);
		add_210786(tmp_258726, tmp_258738);
		}
		
		var tmp_258743 = tree_212046(84, []);
		tmp_258743.id = "qrcanvas";
		add_210786(tmp_258726, tmp_258743);
		var tmp_258744 = tree_212046(43, []);
		tmp_258744.class = "ui dimmer qrcamera-loader";
		var tmp_258745 = tree_212046(43, []);
		tmp_258745.class = "ui indeterminate text loader";
		add_210786(tmp_258745, text_212164(makeNimstrLit("Preparing Camera")));
		add_210786(tmp_258744, tmp_258745);
		add_210786(tmp_258726, tmp_258744);
		var tmp_258746 = tree_212046(43, []);
		tmp_258746.class = "ui dimmer qrcamera-shutter";
		add_210786(tmp_258726, tmp_258746);
		add_210786(tmp_258725, tmp_258726);
		}
		else {
			var tmp_258747 = tree_212046(43, []);
			tmp_258747.class = "ui left aligned segment mnemonic-seg";
			add_210786(tmp_258747, mnemonic_editor_256638());
			if (mnemonic_fulfill_254073[0]) {
			var tmp_258748 = tree_212046(44, []);
			tmp_258748.class = "pagenext";
			set_attr_210568(tmp_258748, "href", "#section2");
			var tmp_258749 = tree_212046(70, []);
			add_210786(tmp_258748, tmp_258749);
			add_210786(tmp_258748, text_212164(makeNimstrLit("Next")));
			add_210786(tmp_258747, tmp_258748);
			}
			
			add_210786(tmp_258725, tmp_258747);
		}
		
		add_210786(tmp_258714, tmp_258725);
		add_210786(tmp_258713, tmp_258714);
		add_210786(tmp_258712, tmp_258713);
		}
		
		if (show_page2_254070[0]) {
		var tmp_258750 = tree_212046(17, []);
		tmp_258750.id = "section2";
		tmp_258750.class = "section";
		var tmp_258751 = tree_212046(43, []);
		tmp_258751.class = "intro";
		var tmp_258752 = tree_212046(43, []);
		tmp_258752.class = "intro-head";
		var tmp_258753 = tree_212046(43, []);
		tmp_258753.class = "caption";
		add_210786(tmp_258753, text_212164(makeNimstrLit("Pastel Wallet")));
		add_210786(tmp_258752, tmp_258753);
		var tmp_258754 = tree_212046(43, []);
		tmp_258754.class = "ui container method-selector";
		var tmp_258755 = tree_212046(43, []);
		tmp_258755.class = "title";
		add_210786(tmp_258755, text_212164(makeNimstrLit("                  A key card or passphrase is required to encrypt and save the private key in your browser.\x0A                   You will need key card or passphrase before sending your coins.\x0A                ")));
		add_210786(tmp_258754, tmp_258755);
		var tmp_258756 = tree_212046(43, []);
		tmp_258756.class = "ui buttons";
		var tmp_258757 = tree_212046(106, []);
		tmp_258757.id = "keyselector";
		tmp_258757.class = "ui olive button";
		add_event_handler_240584(tmp_258757, 0, protect_selector_254370(0), kxi_230324[0]);
		var tmp_258758 = tree_212046(61, []);
		tmp_258758.class = "qrcode icon";
		add_210786(tmp_258757, tmp_258758);
		add_210786(tmp_258757, text_212164(makeNimstrLit("Key card")));
		add_210786(tmp_258756, tmp_258757);
		var tmp_258759 = tree_212046(43, []);
		tmp_258759.class = "or";
		add_210786(tmp_258756, tmp_258759);
		var tmp_258760 = tree_212046(106, []);
		tmp_258760.id = "passselector";
		tmp_258760.class = "ui grey button";
		add_event_handler_240584(tmp_258760, 0, protect_selector_254370(1), kxi_230324[0]);
		var tmp_258761 = tree_212046(61, []);
		tmp_258761.class = "list alternate icon";
		add_210786(tmp_258760, tmp_258761);
		add_210786(tmp_258760, text_212164(makeNimstrLit("Passphrase")));
		add_210786(tmp_258756, tmp_258760);
		add_210786(tmp_258754, tmp_258756);
		add_210786(tmp_258752, tmp_258754);
		add_210786(tmp_258751, tmp_258752);
		var tmp_258762 = tree_212046(43, []);
		tmp_258762.class = "intro-body";
		if ((current_protect_type_254043[0] == 0)) {
		var tmp_258763 = tree_212046(43, []);
		tmp_258763.id = "seed-seg";
		tmp_258763.class = "ui left aligned segment seed-seg";
		if (show_scan_result2_254068[0]) {
		var tmp_258764 = tree_212046(43, []);
		tmp_258764.class = "ui clearing segment keycard-seg";
		var tmp_258765 = tree_212046(43, []);
		tmp_258765.class = "ui inverted segment";
		var tmp_258766 = tree_212046(24, []);
		tmp_258766.class = "ui grey inverted header center";
		add_210786(tmp_258766, text_212164(makeNimstrLit("Scanned key card")));
		add_210786(tmp_258765, tmp_258766);
		var tmp_258767 = tree_212046(31, []);
		tmp_258767.class = "center";
		add_210786(tmp_258767, text_212201(key_card_val_255835[0]));
		add_210786(tmp_258765, tmp_258767);
		add_210786(tmp_258764, tmp_258765);
		var tmp_258768 = tree_212046(106, []);
		tmp_258768.class = "ui right floated olive button";
		add_event_handler_240548(tmp_258768, 0, confirm_key_card_255934, kxi_230324[0]);
		add_210786(tmp_258768, text_212164(makeNimstrLit("Save")));
		add_210786(tmp_258764, tmp_258768);
		var tmp_258769 = tree_212046(106, []);
		tmp_258769.class = "ui right floated grey button";
		add_event_handler_240584(tmp_258769, 0, show_key_qr_255901(), kxi_230324[0]);
		add_210786(tmp_258769, text_212164(makeNimstrLit("Rescan")));
		add_210786(tmp_258764, tmp_258769);
		add_210786(tmp_258763, tmp_258764);
		}
		
		if (key_card_fulfill_254074[0]) {
		var tmp_258770 = tree_212046(44, []);
		tmp_258770.class = "pagenext";
		set_attr_210568(tmp_258770, "href", "#section3");
		var tmp_258771 = tree_212046(70, []);
		add_210786(tmp_258770, tmp_258771);
		add_210786(tmp_258770, text_212164(makeNimstrLit("Next")));
		add_210786(tmp_258763, tmp_258770);
		}
		
		if (show_scanning2_254066[0]) {
		var tmp_258772 = tree_212046(43, []);
		tmp_258772.class = "qr-scanning";
		var tmp_258773 = tree_212046(43, []);
		add_210786(tmp_258772, tmp_258773);
		var tmp_258774 = tree_212046(43, []);
		add_210786(tmp_258772, tmp_258774);
		add_210786(tmp_258763, tmp_258772);
		}
		
		if (show_scan_seed_btn2_254065[0]) {
		var tmp_258775 = tree_212046(43, []);
		tmp_258775.class = "ui teal labeled icon button bt-scan-seed";
		add_event_handler_240584(tmp_258775, 0, show_key_qr_255901(), kxi_230324[0]);
		add_210786(tmp_258775, text_212164(makeNimstrLit("Scan key card with camera")));
		var tmp_258776 = tree_212046(61, []);
		tmp_258776.class = "camera icon";
		add_210786(tmp_258775, tmp_258776);
		add_210786(tmp_258763, tmp_258775);
		}
		
		if (show_cam_tools2_254067[0]) {
		var tmp_258777 = tree_212046(43, []);
		tmp_258777.class = "ui small basic icon buttons camtools";
		var tmp_258778 = tree_212046(106, []);
		tmp_258778.class = "ui button";
		add_event_handler_240584(tmp_258778, 0, cam_change_255952(), kxi_230324[0]);
		var tmp_258779 = tree_212046(61, []);
		tmp_258779.class = "camera icon";
		add_210786(tmp_258778, tmp_258779);
		add_210786(tmp_258777, tmp_258778);
		var tmp_258780 = tree_212046(106, []);
		tmp_258780.class = "ui button";
		add_event_handler_240584(tmp_258780, 0, cam_close_255985(), kxi_230324[0]);
		var tmp_258781 = tree_212046(61, []);
		tmp_258781.class = "window close icon";
		add_210786(tmp_258780, tmp_258781);
		add_210786(tmp_258777, tmp_258780);
		add_210786(tmp_258763, tmp_258777);
		}
		
		var tmp_258782 = tree_212046(84, []);
		tmp_258782.id = "qrcanvas";
		add_210786(tmp_258763, tmp_258782);
		var tmp_258783 = tree_212046(43, []);
		tmp_258783.class = "ui dimmer qrcamera-loader";
		var tmp_258784 = tree_212046(43, []);
		tmp_258784.class = "ui indeterminate text loader";
		add_210786(tmp_258784, text_212164(makeNimstrLit("Preparing Camera")));
		add_210786(tmp_258783, tmp_258784);
		add_210786(tmp_258763, tmp_258783);
		var tmp_258785 = tree_212046(43, []);
		tmp_258785.class = "ui dimmer qrcamera-shutter";
		add_210786(tmp_258763, tmp_258785);
		add_210786(tmp_258762, tmp_258763);
		}
		else {
			var tmp_258786 = tree_212046(43, []);
			tmp_258786.class = "ui left aligned segment mnemonic-seg";
			add_210786(tmp_258786, passphrase_editor_257780());
			if (passphrase_fulfill_254075[0]) {
			var tmp_258787 = tree_212046(44, []);
			tmp_258787.class = "pagenext";
			set_attr_210568(tmp_258787, "href", "#section3");
			var tmp_258788 = tree_212046(70, []);
			add_210786(tmp_258787, tmp_258788);
			add_210786(tmp_258787, text_212164(makeNimstrLit("Next")));
			add_210786(tmp_258786, tmp_258787);
			}
			
			add_210786(tmp_258762, tmp_258786);
		}
		
		add_210786(tmp_258751, tmp_258762);
		add_210786(tmp_258750, tmp_258751);
		add_210786(tmp_258712, tmp_258750);
		}
		
		if (show_page3_254071[0]) {
		var tmp_258789 = tree_212046(17, []);
		tmp_258789.id = "section3";
		tmp_258789.class = "section";
		var tmp_258790 = tree_212046(43, []);
		tmp_258790.class = "intro";
		var tmp_258791 = tree_212046(43, []);
		tmp_258791.class = "intro-head  wallet-head";
		var tmp_258792 = tree_212046(43, []);
		tmp_258792.class = "caption";
		add_210786(tmp_258792, text_212164(makeNimstrLit("Pastel Wallet")));
		add_210786(tmp_258791, tmp_258792);
		var tmp_258793 = tree_212046(43, []);
		tmp_258793.class = "ui container wallet-btns";
		var tmp_258794 = tree_212046(43, []);
		tmp_258794.class = "two ui basic buttons sendrecv";
		var tmp_258795 = tree_212046(106, []);
		tmp_258795.id = "btn-send";
		tmp_258795.class = "ui small button send";
		add_event_handler_240584(tmp_258795, 0, btn_send_257952(), kxi_230324[0]);
		var tmp_258796 = tree_212046(61, []);
		tmp_258796.class = "counterclockwise rotated sign-out icon send";
		add_210786(tmp_258795, tmp_258796);
		add_210786(tmp_258795, text_212164(makeNimstrLit(" Send")));
		add_210786(tmp_258794, tmp_258795);
		var tmp_258797 = tree_212046(106, []);
		tmp_258797.id = "btn-receive";
		tmp_258797.class = "ui small button receive";
		add_event_handler_240584(tmp_258797, 0, btn_receive_257985(), kxi_230324[0]);
		var tmp_258798 = tree_212046(61, []);
		tmp_258798.class = "clockwise rotated sign-in icon receive";
		add_210786(tmp_258797, tmp_258798);
		add_210786(tmp_258797, text_212164(makeNimstrLit(" Receive")));
		add_210786(tmp_258794, tmp_258797);
		add_210786(tmp_258793, tmp_258794);
		add_210786(tmp_258791, tmp_258793);
		add_210786(tmp_258790, tmp_258791);
		var tmp_258799 = tree_212046(43, []);
		tmp_258799.class = "intro-body wallet-body";
		var tmp_258800 = tree_212046(43, []);
		tmp_258800.id = "wallet-balance";
		tmp_258800.class = "ui center aligned segment";
		var tmp_258801 = tree_212046(43, []);
		tmp_258801.class = "ui top left attached tiny label send";
		var tmp_258802 = tree_212046(70, []);
		add_210786(tmp_258802, text_212164(makeNimstrLit("0")));
		add_210786(tmp_258801, tmp_258802);
		add_210786(tmp_258801, text_212164(makeNimstrLit(" ")));
		var tmp_258803 = tree_212046(61, []);
		tmp_258803.class = "counterclockwise rotated sign-out icon";
		add_210786(tmp_258801, tmp_258803);
		add_210786(tmp_258800, tmp_258801);
		var tmp_258804 = tree_212046(43, []);
		tmp_258804.class = "ui top right attached tiny label receive";
		var tmp_258805 = tree_212046(61, []);
		tmp_258805.class = "clockwise rotated sign-in icon";
		add_210786(tmp_258804, tmp_258805);
		var tmp_258806 = tree_212046(70, []);
		add_210786(tmp_258806, text_212164(makeNimstrLit("0")));
		add_210786(tmp_258804, tmp_258806);
		add_210786(tmp_258800, tmp_258804);
		var tmp_258807 = tree_212046(43, []);
		tmp_258807.class = "ui bottom right attached tiny label symbol";
		add_210786(tmp_258807, text_212164(makeNimstrLit("ZNY")));
		add_210786(tmp_258800, tmp_258807);
		var tmp_258808 = tree_212046(70, []);
		tmp_258808.class = "balance";
		add_210786(tmp_258808, text_212164(makeNimstrLit("0")));
		add_210786(tmp_258800, tmp_258808);
		add_210786(tmp_258799, tmp_258800);
		if (show_recv_address_selector_254077[0]) {
		add_210786(tmp_258799, recv_address_selector_258084());
		}
		
		if (show_recv_address_modal_254078[0]) {
		add_210786(tmp_258799, recv_address_modal_258232());
		}
		
		add_210786(tmp_258799, send_form_258402());
		var tmp_258809 = tree_212046(43, []);
		tmp_258809.id = "ball-info";
		tmp_258809.class = "ui center aligned segment";
		add_210786(tmp_258809, text_212164([]));
		var tmp_258810 = tree_212046(71, []);
		add_210786(tmp_258809, tmp_258810);
		add_210786(tmp_258809, text_212164([]));
		add_210786(tmp_258799, tmp_258809);
		var tmp_258811 = tree_212046(43, []);
		tmp_258811.id = "wallet-seg";
		tmp_258811.class = "ui center aligned segment seed-seg";
		var tmp_258812 = tree_212046(84, []);
		set_attr_210568(tmp_258812, "width", "0");
		set_attr_210568(tmp_258812, "height", "0");
		add_210786(tmp_258811, tmp_258812);
		add_210786(tmp_258799, tmp_258811);
		add_210786(tmp_258790, tmp_258799);
		var tmp_258813 = tree_212046(43, []);
		tmp_258813.class = "ui two bottom attached buttons settings";
		var tmp_258814 = tree_212046(43, []);
		tmp_258814.class = "ui button";
		add_event_handler_240584(tmp_258814, 0, go_settings_257838(), kxi_230324[0]);
		var tmp_258815 = tree_212046(61, []);
		tmp_258815.class = "cog icon";
		add_210786(tmp_258814, tmp_258815);
		add_210786(tmp_258814, text_212164(makeNimstrLit("Settings")));
		var tmp_258816 = tree_212046(70, []);
		var tmp_258817 = tree_212046(61, []);
		tmp_258817.class = "chevron down icon";
		add_210786(tmp_258816, tmp_258817);
		add_210786(tmp_258814, tmp_258816);
		add_210786(tmp_258813, tmp_258814);
		var tmp_258818 = tree_212046(43, []);
		tmp_258818.class = "ui button";
		add_event_handler_240584(tmp_258818, 0, go_logs_257873(), kxi_230324[0]);
		var tmp_258819 = tree_212046(61, []);
		tmp_258819.class = "list alternate outline icon";
		add_210786(tmp_258818, tmp_258819);
		add_210786(tmp_258818, text_212164(makeNimstrLit("Logs")));
		var tmp_258820 = tree_212046(70, []);
		var tmp_258821 = tree_212046(61, []);
		tmp_258821.class = "chevron down icon";
		add_210786(tmp_258820, tmp_258821);
		add_210786(tmp_258818, tmp_258820);
		add_210786(tmp_258813, tmp_258818);
		var tmp_258822 = tree_212046(43, []);
		tmp_258822.id = "bottom-blink";
		add_210786(tmp_258813, tmp_258822);
		add_210786(tmp_258790, tmp_258813);
		add_210786(tmp_258789, tmp_258790);
		var tmp_258823 = tree_212046(111, []);
		tmp_258823.id = "clipboard";
		set_attr_210568(tmp_258823, "rows", "1");
		set_attr_210568(tmp_258823, "tabindex", "-1");
		add_210786(tmp_258789, tmp_258823);
		add_210786(tmp_258712, tmp_258789);
		}
		
		if ((show_page3_254071[0] || show_page4_254072[0])) {
		var tmp_258824 = tree_212046(17, []);
		tmp_258824.id = "section4";
		tmp_258824.class = "tradelogs-section";
		var tmp_258825 = tree_212046(43, []);
		tmp_258825.class = "ui buttons settings backpage";
		var tmp_258826 = tree_212046(43, []);
		tmp_258826.class = "ui button backwallet";
		add_event_handler_240584(tmp_258826, 0, back_wallet_257906(), kxi_230324[0]);
		var tmp_258827 = tree_212046(61, []);
		tmp_258827.class = "dot circle icon";
		add_210786(tmp_258826, tmp_258827);
		add_210786(tmp_258826, text_212164(makeNimstrLit("Back")));
		var tmp_258828 = tree_212046(70, []);
		var tmp_258829 = tree_212046(61, []);
		tmp_258829.class = "chevron up icon";
		add_210786(tmp_258828, tmp_258829);
		add_210786(tmp_258826, tmp_258828);
		add_210786(tmp_258825, tmp_258826);
		add_210786(tmp_258824, tmp_258825);
		if (show_trade_logs_254079[0]) {
		var tmp_258830 = tree_212046(43, []);
		tmp_258830.class = "ui container";
		var tmp_258831 = tree_212046(43, []);
		tmp_258831.id = "tradeunconfs";
		tmp_258831.class = "ui cards tradelogs";
		add_210786(tmp_258830, tmp_258831);
		var tmp_258832 = tree_212046(43, []);
		tmp_258832.id = "tradelogs";
		tmp_258832.class = "ui cards tradelogs";
		add_210786(tmp_258830, tmp_258832);
		add_210786(tmp_258824, tmp_258830);
		}
		
		if (show_settings_254080[0]) {
		add_210786(tmp_258824, settings_page_258657());
		add_210786(tmp_258824, settings_modal_258591());
		}
		
		add_210786(tmp_258712, tmp_258824);
		}
		
		result_258711 = tmp_258712;

	return result_258711;

}

function after_script_259505(data_259507) {
		$("#section0").remove();
		$(".ui.dropdown").dropdown();
		if (show_scan_result_254064[0]) {
		      function seedCardQrUpdate(vivid) {
        $('.seed-qrcode').each(function() {
          $(this).find('canvas').remove();
          var fillcolor;
          var fillStyleFn;
          if($(this).hasClass('active')) {
            fillcolor = vivid ? '#000' : '#7f7f7f';
            if(!vivid) {
              fillStyleFn = function(ctx) {
                var w = ctx.canvas.width;
                var h = ctx.canvas.height;
                var grd = ctx.createLinearGradient(0, 0, w, h);
                grd.addColorStop(0, "#666");
                grd.addColorStop(0.3, "#aaa");
                grd.addColorStop(1, "#555");
                return grd;
              }
            }
          } else {
            fillcolor = '#f8f8f8';
          }
          $(this).qrcode({
            render: 'canvas',
            ecLevel: 'Q',
            radius: 0.39,
            text: $(this).data('orig'),
            size: 188,
            mode: 2,
            label: '',
            fontname: 'sans',
            fontcolor: '#393939',
            fill: fillcolor,
            fillStyleFn: fillStyleFn
          });
        });
      }
      if(!$('.seed-qrcode .active').length) {
        $('.seed-qrcode').last().addClass('active');
      }
      seedCardQrUpdate();

      $('.seed-card').off('click').on('click', function() {
        $('.seed-card').not(this).each(function() {
          $(this).find('.seed-qrcode').removeClass('active');
        });
        $(this).find('.seed-qrcode').addClass('active');
        seedCardQrUpdate(true);
      });
      $('.seed-card').off('mouseleave').mouseleave(function() {
        $('.seed-qrcode').addClass('active');
        seedCardQrUpdate();
      });
      var holder = document.getElementById('seed-card-holder');
      if(holder) {
        holder.scrollLeft = holder.scrollWidth - holder.clientWidth;
      }
    
		}
		
		if ((show_scan_result_254064[0] || mnemonic_fulfill_254073[0])) {
		      target_page_scroll = '#section2';
      page_scroll_done = function() {
        $('a.pagenext').css('visibility', 'hidden');
        $('#section1').hide();
        window.scrollTo(0, 0);
        jsSeedToKeys();
        jsViewSelector(5);
        page_scroll_done = function() {};
      }
    
		}
		
		if ((key_card_fulfill_254074[0] || passphrase_fulfill_254075[0])) {
		      target_page_scroll = '#section3';
      page_scroll_done = function() {
        var wallet = pastel.wallet;
        var ret = wallet.lockShieldedKeys();
        if(!ret) {
          Notify.show("Error", "Failed to lock keys.", Notify.msgtype.error);
        }
        jsClearSensitive();
        $('a.pagenext').css('visibility', 'hidden');
        $('#section2').hide();
        window.scrollTo(0, 0);
        jsViewSelector(9);
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        }
        page_scroll_done = function() {};
      }
    
		}
		
		if ((((show_scan_result_254064[0] || mnemonic_fulfill_254073[0]) || key_card_fulfill_254074[0]) || passphrase_fulfill_254075[0])) {
		      for(var i in registerEventList) {
        var ev = registerEventList[i];
        ev.elm.removeEventListener(ev.type, ev.cb);
      }
      var elms = document.querySelectorAll('a.pagenext');
      Array.prototype.forEach.call(elms, function(elm) {
        var href = elm.getAttribute("href");
        if(href && href.startsWith('#')) {
          var cb = function(e) {
            e.preventDefault();
            var href = this.getAttribute('href');
            if(href == '#section2') {
              goSection(href, page_scroll_done);
            } else if(href == '#section3') {
              goSection(href, page_scroll_done);
            }
          }
          registerEventList.push({elm: elm, type: 'click', cb: cb});
          elm.addEventListener('click', cb);
        }
      });
    
		}
		
		if (show_page4_254072[0]) {
		      //$.fn.visibility.settings.silent = true;
      $('.backpage').visibility({
        type: 'fixed',
        offset: 0
      });
    
		if (show_trade_logs_254079[0]) {
		        TradeLogs.start();
      
		}
		
		if (show_settings_254080[0]) {
		        Settings.init();
      
		}
		
		      goSection('#section4', function() {
        target_page_scroll = '#section3';
        page_scroll_done = function() {
          TradeLogs.stop();
          $('.backpage').visibility({silent: true});
          $('#tradeunconfs').empty();
          $('#tradelogs').empty();
          $('#section4').hide();
          window.scrollTo(0, 0);
          setSupressRedraw(false);
          reloadViewSafeStart();
          jsViewSelector(12);
          page_scroll_done = function() {};
          $('#bottom-blink').fadeIn(100).fadeOut(400);
        }
      });
    
		}
		else {
			      $('#section4').hide();
    
		}
		
		if ((show_page3_254071[0] || show_page4_254072[0])) {
		      reloadViewSafeEnd();
    
		}
		

	
}
var wallet_setup_259537 = [false];
  var stor  = new Stor()
  var xpubs = stor.get_xpubs()
  stor = null;
  if(xpubs.length > 0) {
    wallet_setup_259537[0] = true;
    function check_stream_ready() {
      setTimeout(function() {
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        } else {
          check_stream_ready();
        }
      }, 50);
    }
    check_stream_ready();
  }

if (wallet_setup_259537[0]) {
view_selector_254124(12, true);
}

app_inst_254014[0] = set_initializer_240462(app_main_258708, "main", after_script_259505);
