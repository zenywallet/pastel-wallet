/* Generated by the Nim Compiler v0.20.2 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI217996 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218280 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218267 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218235 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218160 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI217895 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI217882 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI217846 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218028 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI218024 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI218390 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218377 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI159673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI108832 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI111647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI73907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI170587 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218066 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI218031 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI189211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI55084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI55085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI169761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI169757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI169137 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI169713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI169701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI169015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI169714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI169705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI43205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI43227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI43565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI43231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI189207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI189209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI43283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4114 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI4108 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI4026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI214052 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NNI214052 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI214052, name: "SeedNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI214052, name: "SeedScanning", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI214052, name: "SeedAfterScan", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI214052, name: "SetPassphrase", len: 0, sons: null}}};
NTI214052.node = NNI214052;
var NNI4046 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4046.node = NNI4046;
var NNI4042 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4042.node = NNI4042;
var NNI4028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4028.node = NNI4028;
NTI4108.base = NTI4026;
NTI4114.base = NTI4026;
var NNI4026 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI4108, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI4114, name: "up", sons: null}]};
NTI4026.node = NNI4026;
var NNI4008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4008.node = NNI4008;
NTI4026.base = NTI4008;
NTI4028.base = NTI4026;
NTI4042.base = NTI4028;
NTI4046.base = NTI4042;
var NNI4050 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4050.node = NNI4050;
NTI4050.base = NTI4028;
var NNI4058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4058.node = NNI4058;
NTI4058.base = NTI4028;
var NNI43283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI43283.node = NNI43283;
NTI43283.base = NTI4008;
var NNI189207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI189207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI189207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI189207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI189207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI189207, name: "pkDetach", len: 0, sons: null}}};
NTI189207.node = NNI189207;
NTI43561.base = NTI43229;
NTI43563.base = NTI43229;
NTI43565.base = NTI43229;
var NNI43227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI43227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI43227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI43227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI43227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI43227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI43227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI43227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI43227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI43227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI43227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI43227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI43227, name: "NotationNode", len: 0, sons: null}}};
NTI43227.node = NNI43227;
NTI43281.base = NTI43283;
var NNI43231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI43561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI43563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI43565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI43229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI43229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI43229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI43227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI43229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI43229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI43281, name: "style", sons: null}]};
NTI43231.node = NNI43231;
var NNI43205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI43372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI43376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI43380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI43384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI43388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI43392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI43396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI43400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI43404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI43408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI43412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI43416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI43420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI43424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI43428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI43432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI43436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI43440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI43444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI43448, name: "onunload", sons: null}]};
NTI43205.node = NNI43205;
NTI43205.base = NTI4008;
NTI43231.base = NTI43205;
NTI43229.base = NTI43231;
var NNI169015 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI169015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI169015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI169015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI169015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI169015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI169015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI169015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI169015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI169015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI169015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI169015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI169015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI169015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI169015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI169015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI169015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI169015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI169015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI169015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI169015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI169015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI169015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI169015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI169015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI169015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI169015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI169015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI169015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI169015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI169015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI169015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI169015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI169015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI169015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI169015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI169015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI169015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI169015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI169015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI169015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI169015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI169015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI169015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI169015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI169015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI169015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI169015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI169015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI169015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI169015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI169015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI169015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI169015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI169015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI169015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI169015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI169015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI169015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI169015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI169015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI169015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI169015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI169015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI169015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI169015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI169015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI169015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI169015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI169015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI169015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI169015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI169015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI169015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI169015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI169015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI169015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI169015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI169015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI169015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI169015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI169015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI169015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI169015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI169015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI169015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI169015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI169015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI169015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI169015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI169015, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI169015, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI169015, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI169015, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI169015, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI169015, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI169015, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI169015, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI169015, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI169015, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI169015, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI169015, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI169015, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI169015, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI169015, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI169015, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI169015, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI169015, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI169015, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI169015, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI169015, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI169015, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI169015, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI169015, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI169015, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI169015, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI169015, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI169015, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI169015, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI169015, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI169015, name: "menu", len: 0, sons: null}}};
NTI169015.node = NNI169015;
NTI169720.base = NTI169705;
NTI169722.base = NTI140;
var NNI169137 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI169137, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI169137, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI169137, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI169137, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI169137, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI169137, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI169137, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI169137, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI169137, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI169137, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI169137, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI169137, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI169137, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI169137, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI169137, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI169137, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI169137, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI169137, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI169137, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI169137, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI169137, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI169137, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI169137, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI169137, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI169137, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI169137, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI169137, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI169137, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI169137, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI169137, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI169137, name: "onkeyuplater", len: 0, sons: null}}};
NTI169137.node = NNI169137;
var NNI169713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI169137, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI169757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI169761, name: "Field2", sons: null}]};
NTI169713.node = NNI169713;
NTI169701.base = NTI169713;
var NNI55084 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI55084.node = NNI55084;
NTI55085.base = NTI55084;
var NNI169714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI169015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI140, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI140, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI169720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI169722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI169701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI55085, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI43229, name: "dom", sons: null}]};
NTI169714.node = NNI169714;
NTI169714.base = NTI4008;
NTI169705.base = NTI169714;
var NNI189209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI189207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI43229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI43229, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI169705, name: "n", sons: null}]};
NTI189209.node = NNI189209;
var NNI189211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI169705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI169705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI189211.node = NNI189211;
NTI218031.base = NTI140;
NTI218066.base = NTI140;
NTI170587.base = NTI140;
var NNI4062 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4062.node = NNI4062;
NTI4062.base = NTI4028;
var NNI73907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI104, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI73907.node = NNI73907;
var NNI111647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI108832, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI111647.node = NNI111647;
NTI159673.base = NTI138;
NTI218377.base = NTI140;
NTI218028.base = NTI140;
var NNI218024 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI140, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI130, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI218028, name: "Field3", sons: null}]};
NTI218024.node = NNI218024;
NTI218390.base = NTI218024;
NTI217846.base = NTI140;
NTI217882.base = NTI140;
NTI217895.base = NTI140;
NTI218160.base = NTI218024;
NTI218235.base = NTI140;
NTI218267.base = NTI218024;
NTI218280.base = NTI140;
NTI217996.base = NTI140;

function toJSStr(s_23288) {
		  if (s_23288 === null) return "";
  var len = s_23288.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_23288[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_23288[i] < 128)
      asciiPart[i] = fcc(s_23288[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function makeNimstrLit(c_23254) {
		  var ln = c_23254.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23254.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24427, src_24428, ti_24429) {
	var result_24619 = null;

		switch (ti_24429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24401(ti_24429))) {
			result_24619 = src_24428;
			}
			else {
				result_24619 = [src_24428[0], src_24428[1]];
			}
			
			break;
		case 19:
			      if (dest_24427 === null || dest_24427 === undefined) {
        dest_24427 = {};
      }
      else {
        for (var key in dest_24427) { delete dest_24427[key]; }
      }
      for (var key in src_24428) { dest_24427[key] = src_24428[key]; }
      result_24619 = dest_24427;
    
			break;
		case 18:
		case 17:
			if (!((ti_24429.base == null))) {
			result_24619 = nimCopy(dest_24427, src_24428, ti_24429.base);
			}
			else {
			if ((ti_24429.kind == 17)) {
			result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {m_type: ti_24429} : dest_24427;
			}
			else {
				result_24619 = (dest_24427 === null || dest_24427 === undefined) ? {} : dest_24427;
			}
			}
			nimCopyAux(result_24619, src_24428, ti_24429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24428 === null) {
        result_24619 = null;
      }
      else {
        if (dest_24427 === null || dest_24427 === undefined) {
          dest_24427 = new Array(src_24428.length);
        }
        else {
          dest_24427.length = src_24428.length;
        }
        result_24619 = dest_24427;
        for (var i = 0; i < src_24428.length; ++i) {
          result_24619[i] = nimCopy(result_24619[i], src_24428[i], ti_24429.base);
        }
      }
    
			break;
		case 28:
			      if (src_24428 !== null) {
        result_24619 = src_24428.slice(0);
      }
    
			break;
		default: 
			result_24619 = src_24428;
			break;
		}

	return result_24619;

}

function cstrToNimstr(c_23271) {
		  var ln = c_23271.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23271.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23271.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function reprEnum(e_25480, typ_25481) {
	var result_25482 = null;

		if (!(is_undefined_25483(typ_25481.node.sons[e_25480]))) {
		result_25482 = nimCopy(null, makeNimstrLit(typ_25481.node.sons[e_25480].name), NTI138);
		}
		else {
			result_25482 = nimCopy(null, (cstrToNimstr((e_25480)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI138);
		}
		

	return result_25482;

}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		throw e_21618;

	
}

function addInt(a_23603, b_23604) {
		    var result = a_23603 + b_23604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_169689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];

function chckIndx(i_24705, a_24706, b_24707) {
			var Tmp1;

	var result_24708 = 0;

	BeforeRet: do {
			if (!(a_24706 <= i_24705)) Tmp1 = false; else {				Tmp1 = (i_24705 <= b_24707);			}		if (Tmp1) {
		result_24708 = i_24705;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_24705, a_24706, b_24707);
		}
		
	} while (false);

	return result_24708;

}

function subInt(a_23621, b_23622) {
		    var result = a_23621 - b_23622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_event_name_169695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function nimMin(a_24003, b_24004) {
		var Tmp1;

	var result_24005 = 0;

	BeforeRet: do {
		if ((a_24003 <= b_24004)) {
		Tmp1 = a_24003;
		}
		else {
		Tmp1 = b_24004;
		}
		
		result_24005 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24005;

}

function mnewString(len_23305) {
		    return new Array(len_23305);
  

	
}

function chckRange(i_24724, a_24725, b_24726) {
			var Tmp1;

	var result_24727 = 0;

	BeforeRet: do {
			if (!(a_24725 <= i_24724)) Tmp1 = false; else {				Tmp1 = (i_24724 <= b_24726);			}		if (Tmp1) {
		result_24727 = i_24724;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_24727;

}

function nimMax(a_24021, b_24022) {
		var Tmp1;

	var result_24023 = 0;

	BeforeRet: do {
		if ((b_24022 <= a_24021)) {
		Tmp1 = a_24021;
		}
		else {
		Tmp1 = b_24022;
		}
		
		result_24023 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24023;

}

function addChar(x_24895, c_24896) {
		x_24895.push(c_24896);

	
}
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_170495 = [0];
var object_id_174437 = [0];
var vcomponents_182026 = [{}];
var kxi_189324 = [null];
var app_inst_214014 = [null];
var jsViewSelector = function() {}

var camDevice = (function() {
  var cam_ids = [];
  var sel_cam = null;
  var sel_cam_index = 0;
  navigator.mediaDevices.enumerateDevices().then(function(devices) {
    devices.forEach(function(device) {
      if(device.kind == 'videoinput') {
        cam_ids.push(device);
      }
    });
  });
  return {
    next: function() {
      if(cam_ids.length > 0) {
        if(sel_cam == null) {
          sel_cam_index = cam_ids.length - 1;
          sel_cam = cam_ids[sel_cam_index].deviceId;
        } else {
          sel_cam_index++;
          if(sel_cam_index >= cam_ids.length) {
            sel_cam_index = 0;
          }
          sel_cam = cam_ids[sel_cam_index].deviceId;
        }
      }
      return sel_cam;
    },
    count: function() {
      return cam_ids.length;
    }
  };
})();

var qrReader = (function() {
  var video, canvasElement, canvas, seedseg;
  var abort = false;
  var showing = false;
  //var scandata = null;
  //var loadingMessage = document.getElementById("loadingMessage");
  //var outputContainer = document.getElementById("output");
  //var outputMessage = document.getElementById("outputMessage");
  //var outputData = document.getElementById("outputData");

  function drawLine(begin, end, color) {
    canvas.beginPath();
    canvas.moveTo(begin.x, begin.y);
    canvas.lineTo(end.x, end.y);
    canvas.lineWidth = 4;
    canvas.strokeStyle = color;
    canvas.stroke();
  }

  function checkRange(rect, x1, y1, x2, y2) {
    return (rect.x > x1 && rect.x < x2
      && rect.y > y1 && rect.y < y2);
  }

  var cb_done = function() {}

  function qr_stop() {
    camera_scanning(false);
    video.pause();
    if(video.srcObject) {
      video.srcObject.getTracks().forEach(function(track) {
        track.stop();
      });
    }
    video.removeAttribute('src');
    video.load();
  }

  var skip_first_tick = false;
  function tick() {
    if(video.readyState === video.HAVE_ENOUGH_DATA) {
      camera_scanning(true);
      canvasElement.height = video.videoHeight;
      canvasElement.width = video.videoWidth;
      canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
      var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
      var code = jsQR(imageData.data, imageData.width, imageData.height, {
        inversionAttempts: "dontInvert",
      });
      if(code) {
        drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#ff3b58");
        drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#ff3b58");
        drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#ff3b58");
        drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#ff3b58");

        var sw = seedseg.offsetWidth - 28;
        var sh = seedseg.offsetHeight - 28;
        if(canvasElement.width > 0 && sw > 0) {
          var mergin = 14;
          var c = canvasElement.height / canvasElement.width;
          var s = sh / sw;
          var x1, y1, x2, y2;
          if(c < s) {
            var w = canvasElement.height / s;
            x1 = (canvasElement.width - w) / 2;
            y1 = 0;
            x2 = x1 + w;
            y2 = canvasElement.height;
            x1 += mergin;
            x2 -= mergin;
            y1 += mergin;
            y2 -= mergin;
          } else {
            var h = canvasElement.width * s;
            x1 = 0;
            y1 = (canvasElement.height - h) / 2;
            x2 = canvasElement.width;
            y2 = y1 + h;
            x1 += mergin;
            x2 -= mergin;
            y1 += mergin;
            y2 -= mergin;
          }
          if(skip_first_tick
            && checkRange(code.location.topLeftCorner, x1, y1, x2, y2)
            && checkRange(code.location.topRightCorner, x1, y1, x2, y2)
            && checkRange(code.location.bottomRightCorner, x1, y1, x2, y2)
            && checkRange(code.location.bottomLeftCorner, x1, y1, x2, y2)) {
            console.log(code.data);
            qr_stop();
            if(!abort && cb_done) {
              cb_done(code.data);
            }
            return;
          }
          skip_first_tick = true;
        }
      }
    }
    if(abort) {
      return;
    }
    requestAnimationFrame(tick);
  }

  var mode_show = true;
  var video = null;
  var qr_instance = null;

  var prev_camera_scanning_flag = false;
  function camera_scanning(flag) {
    if(prev_camera_scanning_flag != flag) {
      if(flag) {
        $('.qr-scanning').show();
      } else {
        $('.qr-scanning').hide();
      }
      prev_camera_scanning_flag = flag;
    }
  }

  function video_status_change() {
    if(mode_show) {
      canvasElement.hidden = false;
      $('.bt-scan-seed').css('visibility', 'hidden');
      $('.camtools').css('visibility', 'visible');
    } else {
      camera_scanning(false);
      $('.camtools').css('visibility', 'hidden');
      $('.bt-scan-seed').css('visibility', 'visible');
      if(canvasElement) {
        canvasElement.hidden = true;
      }
    }
  }

  return {
    show: function(cb) {
      mode_show = true;
      showing = false;
      abort = false;
      skip_first_tick = false;
      video = video || document.createElement("video");
      canvasElement = document.getElementById("qrcanvas");
      canvas = canvasElement.getContext("2d");
      seedseg = document.getElementById("seed-seg");
      cb_done = cb;

      // Use facingMode: environment to attemt to get the front camera on phones
      navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
        video.srcObject = stream;
        video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
        video.play();
        video_status_change();
        showing = true;
        requestAnimationFrame(tick);
      });
    },
    hide: function(rescan) {
      if(mode_show) {
        abort = true;
        if(showing) {
          qr_stop();
          showing = false;
        }
        if(canvas && canvasElement) {
          canvas.clearRect(0, 0, canvasElement.width, canvasElement.height);
        }
        if(rescan) {
          mode_show = false;
          video_status_change();
        } else {
          if(canvasElement) {
            canvasElement.hidden = true;
          }
        }
        mode_show = false;
      }
    }
  }
})();

var current_import_type_214050 = [0];
var show_scan_seed_btn_214057 = [true];
var show_scanning_214058 = [true];
var show_cam_tools_214059 = [true];
var show_scan_result_214060 = [false];
var show_page1_214061 = [true];
var show_page2_214062 = [false];

function is_undefined_25483(x_25486) {
	var result_25487 = false;

		result_25487 = x_25486 === undefined;

	return result_25487;

}

function is_fat_pointer_24401(ti_24403) {
	var result_24404 = false;

	BeforeRet: do {
		result_24404 = !((ConstSet1[ti_24403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24404;

}

function nimCopyAux(dest_24432, src_24433, n_24435) {
		switch (n_24435.kind) {
		case 0:
			break;
		case 1:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24435.sons.length; i++) {
      nimCopyAux(dest_24432, src_24433, n_24435.sons[i]);
    }
    
			break;
		case 3:
			      dest_24432[n_24435.offset] = nimCopy(dest_24432[n_24435.offset], src_24433[n_24435.offset], n_24435.typ);
      for (var i = 0; i < n_24435.sons.length; ++i) {
        nimCopyAux(dest_24432, src_24433, n_24435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function raiseOverflow() {
		var e_22042 = null;
		e_22042 = {m_type: NTI4046, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22042.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_22042.parent = null;
		raiseException(e_22042, "OverflowError");

	
}

function sys_fatal_14862(message_14866) {
		var e_15003 = null;
		e_15003 = {m_type: NTI4050, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_15003.message = nimCopy(null, message_14866, NTI138);
		raiseException(e_15003, "AssertionError");

	
}

function raise_assert_14858(msg_14860) {
		sys_fatal_14862(msg_14860);

	
}

function failed_assert_impl_15051(msg_15053) {
		raise_assert_14858(msg_15053);

	
}

function raiseIndexError(i_22639, a_22640, b_22641) {
		var Tmp1;

		var e_22802 = null;
		e_22802 = {m_type: NTI4058, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22641 < a_22640)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22639)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22640)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22641)+"") || []);
		}
		
		e_22802.message = nimCopy(null, Tmp1, NTI138);
		e_22802.parent = null;
		raiseException(e_22802, "IndexError");

	
}

function valueHEX3D_169839(n_169841, v_169842) {
		n_169841.text = v_169842;

	
}

function value_169822(n_169824) {
	var result_169825 = null;

		result_169825 = n_169824.text;

	return result_169825;

}

function wrap_event_189390(d_189392, n_189393, k_189394, action_189395) {

			function later_wrapper_189827() {

					function HEX3Aanonymous_189833(ev_189835) {

							function wrapper_189836() {
									var v_189838 = ev_189835.target.value;
									valueHEX3D_169839(n_189831, v_189838);
									if (!(!((action_189830 == null)))) {
									failed_assert_impl_15051(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
									}
									
									action_189830(ev_189835, n_189831);
									if (!((value_169822(n_189831) == v_189838))) {
									ev_189835.target.value = value_169822(n_189831);
									}
									

								
							}

							if (!((timer_189832 == null))) {
							clearTimeout(timer_189832);
							}
							
							timer_189832 = setTimeout(wrapper_189836, 400);

						
					}

				var result_189829 = null;

					var action_189830 = action_189395;
					var n_189831 = n_189393;
					var timer_189832 = null;
					result_189829 = HEX3Aanonymous_189833;

				return result_189829;

			}

			function enter_wrapper_189657() {

					function HEX3Aanonymous_189662(ev_189664) {
							if ((ev_189664.keyCode == 13)) {
							var v_189665 = ev_189664.target.value;
							valueHEX3D_169839(n_189661, v_189665);
							if (!(!((action_189660 == null)))) {
							failed_assert_impl_15051(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
							}
							
							action_189660(ev_189664, n_189661);
							if (!((value_169822(n_189661) == v_189665))) {
							ev_189664.target.value = value_169822(n_189661);
							}
							
							}
							

						
					}

				var result_189659 = null;

					var action_189660 = action_189395;
					var n_189661 = n_189393;
					result_189659 = HEX3Aanonymous_189662;

				return result_189659;

			}

			function std_wrapper_189397() {

					function HEX3Aanonymous_189402(ev_189404) {
								var Tmp1;
								var Tmp2;

								if ((n_189401.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_189401.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_189401.kind == 107);								}							if (Tmp1) {
							var v_189423 = ev_189404.target.value;
							valueHEX3D_169839(n_189401, v_189423);
							if (!(!((action_189400 == null)))) {
							failed_assert_impl_15051(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
							}
							
							action_189400(ev_189404, n_189401);
							if (!((value_169822(n_189401) == v_189423))) {
							ev_189404.target.value = value_169822(n_189401);
							}
							
							}
							else {
							action_189400(ev_189404, n_189401);
							}
							

						
					}

				var result_189399 = null;

					var action_189400 = action_189395;
					var n_189401 = n_189393;
					result_189399 = HEX3Aanonymous_189402;

				return result_189399;

			}

	var result_189396 = null;

		switch (k_189394) {
		case 30:
			result_189396 = later_wrapper_189827();
			d_189392.addEventListener("keyup", result_189396, false);
			break;
		case 29:
			result_189396 = enter_wrapper_189657();
			d_189392.addEventListener("keyup", result_189396, false);
			break;
		default: 
			result_189396 = std_wrapper_189397();
			d_189392.addEventListener(to_event_name_169695[chckIndx(k_189394, 0, to_event_name_169695.length+0-1)-0], result_189396, false);
			break;
		}

	return result_189396;

}

function apply_events_190086(n_190088) {
		var dest_190089 = n_190088.dom;
		L1: do {
			var i_190102 = 0;
			var colontmp__214166 = 0;
			colontmp__214166 = (n_190088.events != null ? n_190088.events.length : 0);
			var i_214167 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_214167 < colontmp__214166)) break L3;
						i_190102 = i_214167;
						n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field2"] = wrap_event_189390(dest_190089, n_190088, n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field0"], n_190088.events[chckIndx(i_190102, 0, n_190088.events.length+0-1)-0]["Field1"]);
						i_214167 = addInt(i_214167, 1);
					}
			} while(false);
		} while(false);

	
}

function apply_style_58025(n_58027, s_58028) {
		n_58027.style = {};
		L1: do {
			var i_58221 = 0;
			var colontmp__214178 = 0;
			colontmp__214178 = subInt(s_58028.length, 1);
			var res_214179 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_214179 <= colontmp__214178)) break L3;
						i_58221 = res_214179;
						n_58027.style[s_58028[i_58221]] = s_58028[addInt(i_58221, 1)];
						res_214179 = addInt(res_214179, 2);
					}
			} while(false);
		} while(false);

	
}

function vnode_to_dom_190167(n_190169, kxi_190170) {
			var Tmp9;
			var Tmp10;

	var result_190171 = null;

	BeforeRet: do {
		if ((n_190169.kind == 0)) {
		result_190171 = document.createTextNode(n_190169.text);
		n_190169.dom = result_190171;
		if (!((n_190169.id == null))) {
		kxi_189324[0].byId[n_190169.id] = n_190169;
		}
		
		}
		else {
		if ((n_190169.kind == 6)) {
		result_190171 = document.createElement("div");
		result_190171.innerHTML = n_190169.text;
		n_190169.dom = result_190171;
		if (!((n_190169.id == null))) {
		kxi_189324[0].byId[n_190169.id] = n_190169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 3)) {
		var x_190234 = vcomponents_182026[0][n_190169.text](n_190169.kids);
		result_190171 = vnode_to_dom_190167(x_190234, kxi_190170);
		n_190169.dom = result_190171;
		if (!((n_190169.id == null))) {
		kxi_189324[0].byId[n_190169.id] = n_190169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 4)) {
		result_190171 = n_190169.dom;
		if (!(!((result_190171 == null)))) {
		failed_assert_impl_15051(makeNimstrLit("karax.nim(154, 12) `result != nil` "));
		}
		
		n_190169.dom = result_190171;
		if (!((n_190169.id == null))) {
		kxi_189324[0].byId[n_190169.id] = n_190169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_190169.kind == 5)) {
		var x_190422 = n_190169;
		if (!((x_190422.onAttachImpl == null))) {
		x_190422.onAttachImpl(x_190422);
		}
		
		if (!(!((x_190422.renderImpl == null)))) {
		failed_assert_impl_15051(makeNimstrLit("karax.nim(161, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_190422.expanded == null)) {
		x_190422.expanded = x_190422.renderImpl(x_190422);
		}
		
		if (!(!((x_190422.expanded == null)))) {
		failed_assert_impl_15051(makeNimstrLit("karax.nim(165, 12) `x.expanded != nil` "));
		}
		
		result_190171 = vnode_to_dom_190167(x_190422.expanded, kxi_190170);
		n_190169.dom = result_190171;
		if (!((n_190169.id == null))) {
		kxi_189324[0].byId[n_190169.id] = n_190169;
		}
		
		break BeforeRet;
		}
		else {
			result_190171 = document.createElement(to_tag_169689[chckIndx(n_190169.kind, 0, to_tag_169689.length+0-1)-0]);
			n_190169.dom = result_190171;
			if (!((n_190169.id == null))) {
			kxi_189324[0].byId[n_190169.id] = n_190169;
			}
			
			L1: do {
				var k_190831 = null;
				L2: do {
					var i_214136 = 0;
					var colontmp__214137 = 0;
					colontmp__214137 = (n_190169.kids != null ? n_190169.kids.length : 0);
					var i_214138 = 0;
					L3: do {
							L4: while (true) {
							if (!(i_214138 < colontmp__214137)) break L4;
								i_214136 = i_214138;
								k_190831 = n_190169.kids[chckIndx(i_214136, 0, n_190169.kids.length+0-1)-0];
								result_190171.appendChild(vnode_to_dom_190167(k_190831, kxi_190170));
								i_214138 = addInt(i_214138, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_190169.text == null))) {
			result_190171.value = n_190169.text;
			}
			
		}
		}}}}
		if (!((n_190169.id == null))) {
		result_190171.id = n_190169.id;
		}
		
		if (!((n_190169.class == null))) {
		result_190171.className = n_190169.class;
		}
		
		L5: do {
			var k_190832 = null;
			var v_190833 = null;
			L6: do {
				var i_214149 = 0;
				var colontmp__214150 = 0;
				colontmp__214150 = subInt((n_190169.attrs != null ? n_190169.attrs.length : 0), 2);
				var res_214151 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_214151 <= colontmp__214150)) break L8;
							i_214149 = res_214151;
							k_190832 = n_190169.attrs[chckIndx(i_214149, 0, n_190169.attrs.length+0-1)-0];
							v_190833 = n_190169.attrs[chckIndx(addInt(i_214149, 1), 0, n_190169.attrs.length+0-1)-0];
							if (!((v_190833 == null))) {
							result_190171.setAttribute(k_190832, v_190833);
							}
							
							res_214151 = addInt(res_214151, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		apply_events_190086(n_190169);
			if (!!((kxi_190170 == null))) Tmp10 = false; else {				Tmp10 = (n_190169 == kxi_190170.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_190170.toFocus == null);			}		if (Tmp9) {
		kxi_190170.toFocus = result_190171;
		}
		
		if (!((n_190169.style == null))) {
		apply_style_58025(result_190171, n_190169.style);
		}
		
	} while (false);

	return result_190171;

}

function replace_by_id_191012(id_191014, new_tree_191015) {
		var x_191016 = document.getElementById(id_191014);
		x_191016.parentNode.replaceChild(new_tree_191015, x_191016);
		new_tree_191015.id = id_191014;

	
}

function len_170742(x_170744) {
	var result_170745 = 0;

		result_170745 = (x_170744.kids != null ? x_170744.kids.length : 0);

	return result_170745;

}

function HEX5BHEX5D_170764(x_170766, idx_170767) {
	var result_170768 = null;

		result_170768 = x_170766.kids[chckIndx(idx_170767, 0, x_170766.kids.length+0-1)-0];

	return result_170768;

}

function same_190920(n_190922, e_190923, nesting_190924) {
			var Tmp1;
			var Tmp2;

	var result_190926 = false;

	BeforeRet: do {
		if (kxi_189324[0].orphans.hasOwnProperty(n_190922.id)) {
		result_190926 = true;
		break BeforeRet;
		}
		
		if ((n_190922.kind == 5)) {
		result_190926 = same_190920(n_190922.expanded, e_190923, addInt(nesting_190924, 1));
		}
		else {
		if ((n_190922.kind == 6)) {
		result_190926 = true;
		}
		else {
			if ((n_190922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_190922.kind == 4);			}		if (Tmp1) {
		result_190926 = true;
		}
		else {
		if ((to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0] == e_190923.nodeName)) {
		result_190926 = true;
		if (!((n_190922.kind == 0))) {
			if (!!((e_190923.childNodes.length == len_170742(n_190922)))) Tmp2 = false; else {				Tmp2 = !((n_190922.kind == 111));			}		if (Tmp2) {
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_170742(n_190922))+""), makeNimstrLit(" real "), cstrToNimstr((e_190923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_190924)+""));
		result_190926 = false;
		break BeforeRet;
		}
		
		L3: do {
			var i_190994 = 0;
			var colontmp__214185 = 0;
			colontmp__214185 = len_170742(n_190922);
			var i_214186 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_214186 < colontmp__214185)) break L5;
						i_190994 = i_214186;
						if (!(same_190920(HEX5BHEX5D_170764(n_190922, i_190994), e_190923.childNodes[i_190994], addInt(nesting_190924, 1)))) {
						result_190926 = false;
						break BeforeRet;
						}
						
						i_214186 = addInt(i_214186, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_169689[chckIndx(n_190922.kind, 0, to_tag_169689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_190923.nodeName));
		}
		}}}
	} while (false);

	return result_190926;

}

function eq_56814(a_56816, b_56817) {
	var result_56818 = false;

	BeforeRet: do {
		if ((a_56816 == null)) {
		if ((b_56817 == null)) {
		result_56818 = true;
		break BeforeRet;
		}
		else {
			result_56818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_56817 == null)) {
		result_56818 = false;
		break BeforeRet;
		}
		}
		if (!((a_56816.length == b_56817.length))) {
		result_56818 = false;
		break BeforeRet;
		}
		
		L1: do {
			var i_56916 = 0;
			var colontmp__214223 = 0;
			colontmp__214223 = a_56816.length;
			var i_214224 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_214224 < colontmp__214223)) break L3;
						i_56916 = i_214224;
						if (!((a_56816[i_56916] == b_56817[i_56916]))) {
						result_56818 = false;
						break BeforeRet;
						}
						
						i_214224 = addInt(i_214224, 1);
					}
			} while(false);
		} while(false);
		result_56818 = true;
		break BeforeRet;
	} while (false);

	return result_56818;

}

function same_attrs_172680(a_172682, b_172683) {
	var result_172684 = false;

	BeforeRet: do {
		if (((a_172682.attrs != null ? a_172682.attrs.length : 0) == (b_172683.attrs != null ? b_172683.attrs.length : 0))) {
		result_172684 = true;
		L1: do {
			var i_172707 = 0;
			var colontmp__214228 = 0;
			colontmp__214228 = (a_172682.attrs != null ? a_172682.attrs.length : 0);
			var i_214229 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_214229 < colontmp__214228)) break L3;
						i_172707 = i_214229;
						if (!((a_172682.attrs[chckIndx(i_172707, 0, a_172682.attrs.length+0-1)-0] == b_172683.attrs[chckIndx(i_172707, 0, b_172683.attrs.length+0-1)-0]))) {
						result_172684 = false;
						break BeforeRet;
						}
						
						i_214229 = addInt(i_214229, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);

	return result_172684;

}

function eq_191214(a_191216, b_191217) {
			var Tmp4;
			var Tmp5;

	var result_191218 = 0;

	BeforeRet: do {
		if (!((a_191216.kind == b_191217.kind))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		if (!((a_191216.id == b_191217.id))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		result_191218 = 3;
		if (!((a_191216.index == b_191217.index))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		if ((a_191216.kind == 0)) {
		if (!((a_191216.text == b_191217.text))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_191216.kind == 3)) {
		if (!((a_191216.text == b_191217.text))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		if (!((len_170742(a_191216) == len_170742(b_191217)))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			var i_192014 = 0;
			var colontmp__214218 = 0;
			colontmp__214218 = len_170742(a_191216);
			var i_214219 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_214219 < colontmp__214218)) break L3;
						i_192014 = i_214219;
						if ((eq_191214(HEX5BHEX5D_170764(a_191216, i_192014), HEX5BHEX5D_170764(b_191217, i_192014)) == 1)) {
						result_191218 = 1;
						break BeforeRet;
						}
						
						i_214219 = addInt(i_214219, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_191216.kind == 4)) {
		result_191218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_191216.kind == 6)) {
		if (!((a_191216.text == b_191217.text))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_191217.kind == 5)) {
		if (!((a_191216.text == b_191217.text))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		if (!((a_191216.key == b_191217.key))) {
		result_191218 = 1;
		break BeforeRet;
		}
		
		result_191218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_191216.class == b_191217.class))) Tmp5 = true; else {				Tmp5 = !(eq_56814(a_191216.style, b_191217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_172680(a_191216, b_191217));			}		if (Tmp4) {
		result_191218 = 2;
		break BeforeRet;
		}
		
		break BeforeRet;
	} while (false);

	return result_191218;

}

function update_styles_192629(new_node_192631, old_node_192632) {
		if (!((old_node_192632.dom == null))) {
		if (!((new_node_192631.style == null))) {
		apply_style_58025(old_node_192632.dom, new_node_192631.style);
		}
		else {
			old_node_192632.dom.style = {m_type: NTI43283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		old_node_192632.dom.className = new_node_192631.class;
		}
		
		old_node_192632.style = new_node_192631.style;
		old_node_192632.class = new_node_192631.class;

	
}

function take_over_attr_170674(new_node_170676, old_node_170677) {
		old_node_170677.attrs = new_node_170676.attrs;

	
}

function update_attributes_192677(new_node_192679, old_node_192680) {
		if (!((old_node_192680.dom == null))) {
		L1: do {
			var k_192689 = null;
			var __192690 = null;
			L2: do {
				var i_214235 = 0;
				var colontmp__214236 = 0;
				colontmp__214236 = subInt((old_node_192680.attrs != null ? old_node_192680.attrs.length : 0), 2);
				var res_214237 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_214237 <= colontmp__214236)) break L4;
							i_214235 = res_214237;
							k_192689 = old_node_192680.attrs[chckIndx(i_214235, 0, old_node_192680.attrs.length+0-1)-0];
							__192690 = old_node_192680.attrs[chckIndx(addInt(i_214235, 1), 0, old_node_192680.attrs.length+0-1)-0];
							old_node_192680.dom.removeAttribute(k_192689);
							res_214237 = addInt(res_214237, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			var k_192691 = null;
			var v_192692 = null;
			L6: do {
				var i_214243 = 0;
				var colontmp__214244 = 0;
				colontmp__214244 = subInt((new_node_192679.attrs != null ? new_node_192679.attrs.length : 0), 2);
				var res_214245 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_214245 <= colontmp__214244)) break L8;
							i_214243 = res_214245;
							k_192691 = new_node_192679.attrs[chckIndx(i_214243, 0, new_node_192679.attrs.length+0-1)-0];
							v_192692 = new_node_192679.attrs[chckIndx(addInt(i_214243, 1), 0, new_node_192679.attrs.length+0-1)-0];
							if (!((v_192692 == null))) {
							old_node_192680.dom.setAttribute(k_192691, v_192692);
							}
							
							res_214245 = addInt(res_214245, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		take_over_attr_170674(new_node_192679, old_node_192680);

	
}

function merge_events_192706(new_node_192708, old_node_192709, kxi_192710) {
						var Tmp4;

		var d_192711 = old_node_192709.dom;
		L1: do {
			var i_192724 = 0;
			var colontmp__214250 = 0;
			colontmp__214250 = (old_node_192709.events != null ? old_node_192709.events.length : 0);
			var i_214251 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_214251 < colontmp__214250)) break L3;
						i_192724 = i_214251;
						var k_192725 = old_node_192709.events[chckIndx(i_192724, 0, old_node_192709.events.length+0-1)-0]["Field0"];
						switch (k_192725) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_169695[chckIndx(k_192725, 0, to_event_name_169695.length+0-1)-0];
							break;
						}
						var name_192728 = Tmp4;
						d_192711.removeEventListener(name_192728, old_node_192709.events[chckIndx(i_192724, 0, old_node_192709.events.length+0-1)-0]["Field2"]);
						i_214251 = addInt(i_214251, 1);
					}
			} while(false);
		} while(false);
		old_node_192709.events = new_node_192708.events;
		apply_events_190086(old_node_192709);

	
}

function HEX5BHEX5DHEX3D_170782(x_170784, idx_170785, y_170786) {
		x_170784.kids[chckIndx(idx_170785, 0, x_170784.kids.length+0-1)-0] = y_170786;

	
}

function add_patch_v_192868(kxi_192870, parent_192871, pos_192872, new_child_192873) {
		var l_192874 = kxi_192870.patchLenV;
		if (((kxi_192870.patchesV != null ? kxi_192870.patchesV.length : 0) <= l_192874)) {
		if (kxi_192870.patchesV != null) { kxi_192870.patchesV.push({parent: parent_192871, newChild: new_child_192873, pos: pos_192872}); } else { kxi_192870.patchesV = [{parent: parent_192871, newChild: new_child_192873, pos: pos_192872}]; };
		}
		else {
			kxi_192870.patchesV[chckIndx(l_192874, 0, kxi_192870.patchesV.length+0-1)-0].parent = parent_192871;
			kxi_192870.patchesV[chckIndx(l_192874, 0, kxi_192870.patchesV.length+0-1)-0].newChild = new_child_192873;
			kxi_192870.patchesV[chckIndx(l_192874, 0, kxi_192870.patchesV.length+0-1)-0].pos = pos_192872;
		}
		
		kxi_192870.patchLenV = addInt(kxi_192870.patchLenV, 1);

	
}

function add_patch_192814(kxi_192816, ka_192817, parenta_192818, currenta_192819, na_192820) {
		var l_192821 = kxi_192816.patchLen;
		if (((kxi_192816.patches != null ? kxi_192816.patches.length : 0) <= l_192821)) {
		if (kxi_192816.patches != null) { kxi_192816.patches.push({k: ka_192817, parent: parenta_192818, current: currenta_192819, n: na_192820}); } else { kxi_192816.patches = [{k: ka_192817, parent: parenta_192818, current: currenta_192819, n: na_192820}]; };
		}
		else {
			kxi_192816.patches[chckIndx(l_192821, 0, kxi_192816.patches.length+0-1)-0].k = ka_192817;
			kxi_192816.patches[chckIndx(l_192821, 0, kxi_192816.patches.length+0-1)-0].parent = parenta_192818;
			kxi_192816.patches[chckIndx(l_192821, 0, kxi_192816.patches.length+0-1)-0].current = currenta_192819;
			kxi_192816.patches[chckIndx(l_192821, 0, kxi_192816.patches.length+0-1)-0].n = na_192820;
		}
		
		kxi_192816.patchLen = addInt(kxi_192816.patchLen, 1);

	
}

function diff_193045(new_node_193047, old_node_193048, parent_193049, current_193050, kxi_193051) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_193052 = 0;

	BeforeRet: do {
		result_193052 = eq_191214(new_node_193047, old_node_193048);
		switch (result_193052) {
		case 0:
			if (kxi_193051.components != null) { kxi_193051.components.push({oldNode: old_node_193048, newNode: new_node_193047, parent: parent_193049, current: current_193050}); } else { kxi_193051.components = [{oldNode: old_node_193048, newNode: new_node_193047, parent: parent_193049, current: current_193050}]; };
			break;
		case 3:
		case 2:
			new_node_193047.dom = old_node_193048.dom;
			if ((result_193052 == 2)) {
			update_styles_192629(new_node_193047, old_node_193048);
			update_attributes_192677(new_node_193047, old_node_193048);
			if ((old_node_193048.kind == 0)) {
			old_node_193048.text = new_node_193047.text;
			old_node_193048.dom.nodeValue = new_node_193047.text;
			}
			
			}
			
				if (!(((new_node_193047.events != null ? new_node_193047.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_193048.events != null ? old_node_193048.events.length : 0) == 0));				}			if (Tmp1) {
			merge_events_192706(new_node_193047, old_node_193048, kxi_193051);
			}
			
			var new_length_193401 = len_170742(new_node_193047);
			var old_length_193402 = len_170742(old_node_193048);
			if (((new_length_193401 == 0) && (old_length_193402 == 0))) {
			break BeforeRet;
			}
			
			var min_length_193403 = nimMin(new_length_193401, old_length_193402);
			if (!((old_node_193048.kind == new_node_193047.kind))) {
			failed_assert_impl_15051(makeNimstrLit("karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
			}
			
			var common_prefix_193602 = 0;
			if ((old_node_193048.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_193048.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_193048.kind == 4);			}			var is_special_193621 = Tmp2;
			L4: do {
					L5: while (true) {
					if (!(common_prefix_193602 < min_length_193403)) break L5;
						var old_len_193645 = kxi_193051.patchLen;
						var old_len_v_193646 = kxi_193051.patchLenV;
						if (!((common_prefix_193602 < len_170742(new_node_193047)))) {
						failed_assert_impl_15051(makeNimstrLit("karax.nim(427, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_193602 < len_170742(old_node_193048)))) {
						failed_assert_impl_15051(makeNimstrLit("karax.nim(428, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						if (is_special_193621) {
						Tmp6 = diff_193045(HEX5BHEX5D_170764(new_node_193047, common_prefix_193602), HEX5BHEX5D_170764(old_node_193048, common_prefix_193602), parent_193049, current_193050, kxi_193051);
						}
						else {
						Tmp6 = diff_193045(HEX5BHEX5D_170764(new_node_193047, common_prefix_193602), HEX5BHEX5D_170764(old_node_193048, common_prefix_193602), current_193050, current_193050.childNodes[chckIndx(common_prefix_193602, 0, current_193050.childNodes.length+0-1)-0], kxi_193051);
						}
						
						var r_193647 = Tmp6;
						switch (r_193647) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_170782(new_node_193047, common_prefix_193602, HEX5BHEX5D_170764(old_node_193048, common_prefix_193602));
							common_prefix_193602 = addInt(common_prefix_193602, 1);
							break;
						case 4:
							add_patch_v_192868(kxi_193051, old_node_193048, common_prefix_193602, HEX5BHEX5D_170764(new_node_193047, common_prefix_193602));
							common_prefix_193602 = addInt(common_prefix_193602, 1);
							result_193052 = 4;
							break;
						case 1:
							kxi_193051.patchLen = old_len_193645;
							kxi_193051.patchLenV = old_len_v_193646;
							if (!((result_193052 == 1))) {
							result_193052 = r_193647;
							}
							
							break L4;
							break;
						}
					}
			} while(false);
			var old_pos_194022 = subInt(old_length_193402, 1);
			var new_pos_194023 = subInt(new_length_193401, 1);
			L7: do {
					L8: while (true) {
						if (!(common_prefix_193602 <= old_pos_194022)) Tmp9 = false; else {							Tmp9 = (common_prefix_193602 <= new_pos_194023);						}					if (!Tmp9) break L8;
						var old_len_194024 = kxi_193051.patchLen;
						var old_len_v_194025 = kxi_193051.patchLenV;
						if (!((new_pos_194023 < len_170742(new_node_193047)))) {
						failed_assert_impl_15051(makeNimstrLit("karax.nim(427, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_194022 < len_170742(old_node_193048)))) {
						failed_assert_impl_15051(makeNimstrLit("karax.nim(428, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						if (is_special_193621) {
						Tmp10 = diff_193045(HEX5BHEX5D_170764(new_node_193047, new_pos_194023), HEX5BHEX5D_170764(old_node_193048, old_pos_194022), parent_193049, current_193050, kxi_193051);
						}
						else {
						Tmp10 = diff_193045(HEX5BHEX5D_170764(new_node_193047, new_pos_194023), HEX5BHEX5D_170764(old_node_193048, old_pos_194022), current_193050, current_193050.childNodes[chckIndx(old_pos_194022, 0, current_193050.childNodes.length+0-1)-0], kxi_193051);
						}
						
						var r_194026 = Tmp10;
						switch (r_194026) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_170782(new_node_193047, new_pos_194023, HEX5BHEX5D_170764(old_node_193048, old_pos_194022));
							old_pos_194022 = subInt(old_pos_194022, 1);
							new_pos_194023 = subInt(new_pos_194023, 1);
							break;
						case 4:
							add_patch_v_192868(kxi_193051, old_node_193048, old_pos_194022, HEX5BHEX5D_170764(new_node_193047, new_pos_194023));
							old_pos_194022 = subInt(old_pos_194022, 1);
							new_pos_194023 = subInt(new_pos_194023, 1);
							result_193052 = 4;
							break;
						case 1:
							kxi_193051.patchLen = old_len_194024;
							kxi_193051.patchLenV = old_len_v_194025;
							if (!((result_193052 == 1))) {
							result_193052 = r_194026;
							}
							
							break L7;
							break;
						}
					}
			} while(false);
			var pos_194434 = addInt(nimMin(old_pos_194022, new_pos_194023), 1);
			L11: do {
				var i_194440 = 0;
				var colontmp__214193 = 0;
				colontmp__214193 = subInt(pos_194434, 1);
				var res_214194 = common_prefix_193602;
				L12: do {
						L13: while (true) {
						if (!(res_214194 <= colontmp__214193)) break L13;
							i_194440 = res_214194;
							var r_194441 = diff_193045(HEX5BHEX5D_170764(new_node_193047, i_194440), HEX5BHEX5D_170764(old_node_193048, i_194440), current_193050, current_193050.childNodes[chckIndx(i_194440, 0, current_193050.childNodes.length+0-1)-0], kxi_193051);
							if ((r_194441 == 4)) {
							add_patch_v_192868(kxi_193051, old_node_193048, i_194440, HEX5BHEX5D_170764(new_node_193047, i_194440));
							}
							else {
							if (!((r_194441 == 1))) {
							HEX5BHEX5DHEX3D_170782(new_node_193047, i_194440, HEX5BHEX5D_170764(old_node_193048, i_194440));
							}
							}
							res_214194 = addInt(res_214194, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_194022, 1) == old_length_193402)) {
			L14: do {
				var i_194457 = 0;
				var res_214200 = pos_194434;
				L15: do {
						L16: while (true) {
						if (!(res_214200 <= new_pos_194023)) break L16;
							i_194457 = res_214200;
							add_patch_192814(kxi_193051, 2, current_193050, null, HEX5BHEX5D_170764(new_node_193047, i_194457));
							result_193052 = 4;
							res_214200 = addInt(res_214200, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				var before_194458 = current_193050.childNodes[chckIndx(addInt(old_pos_194022, 1), 0, current_193050.childNodes.length+0-1)-0];
				L17: do {
					var i_194464 = 0;
					var res_214206 = pos_194434;
					L18: do {
							L19: while (true) {
							if (!(res_214206 <= new_pos_194023)) break L19;
								i_194464 = res_214206;
								add_patch_192814(kxi_193051, 3, current_193050, before_194458, HEX5BHEX5D_170764(new_node_193047, i_194464));
								result_193052 = 4;
								res_214206 = addInt(res_214206, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				var i_194470 = 0;
				var res_214212 = pos_194434;
				L21: do {
						L22: while (true) {
						if (!(res_214212 <= old_pos_194022)) break L22;
							i_194470 = res_214212;
							add_patch_192814(kxi_189324[0], 4, null, null, HEX5BHEX5D_170764(old_node_193048, i_194470));
							add_patch_192814(kxi_193051, 1, current_193050, current_193050.childNodes[chckIndx(i_194470, 0, current_193050.childNodes.length+0-1)-0], null);
							result_193052 = 4;
							res_214212 = addInt(res_214212, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			add_patch_192814(kxi_189324[0], 4, null, null, old_node_193048);
			add_patch_192814(kxi_193051, 0, parent_193049, current_193050, new_node_193047);
			break;
		case 4:
			if (true) {
			failed_assert_impl_15051(makeNimstrLit("karax.nim(491, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);

	return result_193052;

}

function apply_components_194814(kxi_194816) {
						var Tmp3;

		var i_194818 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_194818 < (kxi_194816.components != null ? kxi_194816.components.length : 0))) break L2;
					var x_194824 = kxi_194816.components[chckIndx(i_194818, 0, kxi_194816.components.length+0-1)-0].oldNode;
					var new_node_194825 = kxi_194816.components[chckIndx(i_194818, 0, kxi_194816.components.length+0-1)-0].newNode;
						if (!!((x_194824.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_194824.changedImpl(x_194824, new_node_194825);						}					if (Tmp3) {
					var current_195201 = kxi_194816.components[chckIndx(i_194818, 0, kxi_194816.components.length+0-1)-0].current;
					var parent_195202 = kxi_194816.components[chckIndx(i_194818, 0, kxi_194816.components.length+0-1)-0].parent;
					x_194824.updatedImpl(x_194824, new_node_194825);
					var old_expanded_195203 = x_194824.expanded;
					x_194824.expanded = x_194824.renderImpl(x_194824);
					x_194824.renderedVersion = x_194824.version;
					if ((old_expanded_195203 == null)) {
					add_patch_192814(kxi_189324[0], 4, null, null, x_194824);
					add_patch_192814(kxi_194816, 0, parent_195202, current_195201, x_194824.expanded);
					}
					else {
						var res_195601 = diff_193045(x_194824.expanded, old_expanded_195203, parent_195202, current_195201, kxi_194816);
						if ((res_195601 == 4)) {
						}
						else {
						if (!((res_195601 == 1))) {
						x_194824.expanded = old_expanded_195203;
						if (!(!((old_expanded_195203.dom == null)))) {
						failed_assert_impl_15051(makeNimstrLit("karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_194824.expanded.dom == null)))) {
							failed_assert_impl_15051(makeNimstrLit("karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					i_194818 = addInt(i_194818, 1);
				}
		} while(false);
		if (kxi_194816.components === null) kxi_194816.components = [];
               if (kxi_194816.components.length < 0) { for (var i=kxi_194816.components.length;i<0;++i) kxi_194816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_194816.components.length = 0; };

	
}

function apply_patch_192906(kxi_192908) {
		L1: do {
			var i_192916 = 0;
			var colontmp__214258 = 0;
			colontmp__214258 = kxi_192908.patchLen;
			var i_214259 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_214259 < colontmp__214258)) break L3;
						i_192916 = i_214259;
						var p_192917 = nimCopy(null, kxi_192908.patches[chckIndx(i_192916, 0, kxi_192908.patches.length+0-1)-0], NTI189209);
						switch (p_192917.k) {
						case 0:
							var nn_192918 = vnode_to_dom_190167(p_192917.n, kxi_192908);
							if ((p_192917.parent == null)) {
							replace_by_id_191012(kxi_192908.rootId, nn_192918);
							}
							else {
							p_192917.parent.replaceChild(nn_192918, p_192917.current);
							}
							
							break;
						case 1:
							p_192917.parent.removeChild(p_192917.current);
							break;
						case 2:
							var nn_192927 = vnode_to_dom_190167(p_192917.n, kxi_192908);
							p_192917.parent.appendChild(nn_192927);
							break;
						case 3:
							var nn_192928 = vnode_to_dom_190167(p_192917.n, kxi_192908);
							p_192917.parent.insertBefore(nn_192928, p_192917.current);
							break;
						case 4:
							var n_192929 = p_192917.n;
							if (!((n_192929.id == null))) {
							delete kxi_192908.byId[n_192929.id];
							}
							
							if ((n_192929.kind == 5)) {
							var x_192947 = n_192929;
							if (!((x_192947.onDetachImpl == null))) {
							x_192947.onDetachImpl(x_192947);
							}
							
							}
							
							if (!(kxi_192908.surpressRedraws)) {
							n_192929.dom = null;
							}
							
							break;
						}
						i_214259 = addInt(i_214259, 1);
					}
			} while(false);
		} while(false);
		kxi_192908.patchLen = 0;
		L4: do {
			var i_192960 = 0;
			var colontmp__214263 = 0;
			colontmp__214263 = kxi_192908.patchLenV;
			var i_214264 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_214264 < colontmp__214263)) break L6;
						i_192960 = i_214264;
						var p_192961 = nimCopy(null, kxi_192908.patchesV[chckIndx(i_192960, 0, kxi_192908.patchesV.length+0-1)-0], NTI189211);
						HEX5BHEX5DHEX3D_170782(p_192961.parent, p_192961.pos, p_192961.newChild);
						if (!(!((p_192961.newChild.dom == null)))) {
						failed_assert_impl_15051(makeNimstrLit("karax.nim(377, 12) `p.newChild.dom != nil` "));
						}
						
						i_214264 = addInt(i_214264, 1);
					}
			} while(false);
		} while(false);
		kxi_192908.patchLenV = 0;

	
}

function dodraw_197646(kxi_197648) {
	BeforeRet: do {
		if ((kxi_197648.renderer == null)) {
		break BeforeRet;
		}
		
		var rdata_197653 = {hashPart: window.location.hash};
		var newtree_197654 = kxi_197648.renderer(rdata_197653);
		kxi_197648.runCount = addInt(kxi_197648.runCount, 1);
		newtree_197654.id = kxi_197648.rootId;
		kxi_197648.toFocus = null;
		if ((kxi_197648.currentTree == null)) {
		var asdom_197669 = vnode_to_dom_190167(newtree_197654, kxi_197648);
		replace_by_id_191012(kxi_197648.rootId, asdom_197669);
		}
		else {
			if (!(same_190920(kxi_197648.currentTree, document.getElementById(kxi_197648.rootId), 0))) {
			failed_assert_impl_15051(makeNimstrLit("karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			var olddom_197801 = document.getElementById(kxi_197648.rootId);
			diff_193045(newtree_197654, kxi_197648.currentTree, null, olddom_197801, kxi_197648);
		}
		
		apply_components_194814(kxi_197648);
		apply_patch_192906(kxi_197648);
		kxi_197648.currentTree = newtree_197654;
		if (!(same_190920(kxi_197648.currentTree, document.getElementById(kxi_197648.rootId), 0))) {
		failed_assert_impl_15051(makeNimstrLit("karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_197648.postRenderCallback == null))) {
		kxi_197648.postRenderCallback(rdata_197653);
		}
		
		if (!((kxi_197648.toFocus == null))) {
		kxi_197648.toFocus.focus();
		}
		
		kxi_197648.renderId = 0;
	} while (false);

	
}

function redraw_198814(kxi_198816) {

		function HEX3Aanonymous_199001() {
				dodraw_197646(kxi_198816);

			
		}

		if ((kxi_198816.renderId == 0)) {
		kxi_198816.renderId = window.requestAnimationFrame(HEX3Aanonymous_199001);
		}
		

	
}

function view_selector_214091(view_214093) {
		rawEcho(makeNimstrLit("view"), reprEnum(view_214093, NTI214052));
		switch (view_214093) {
		case 0:
			show_scan_seed_btn_214057[0] = true;
			show_scanning_214058[0] = true;
			show_cam_tools_214059[0] = true;
			show_scan_result_214060[0] = false;
			break;
		case 1:
			show_scan_seed_btn_214057[0] = true;
			show_scanning_214058[0] = true;
			show_cam_tools_214059[0] = true;
			show_scan_result_214060[0] = false;
			break;
		case 2:
			show_scan_seed_btn_214057[0] = false;
			show_scanning_214058[0] = false;
			show_cam_tools_214059[0] = false;
			show_scan_result_214060[0] = true;
			show_page2_214062[0] = true;
			break;
		case 3:
			show_page1_214061[0] = false;
			show_page2_214062[0] = true;
			break;
		}
		redraw_198814(app_inst_214014[0]);

	
}
  jsViewSelector = view_selector_214091

var seed_card_info_214329 = [{seed: null, gen: null, tag: null, orig: null}];
// https://github.com/gustf/js-levenshtein
var levenshtein = (function()
{
  function _min(d0, d1, d2, bx, ay)
  {
    return d0 < d1 || d2 < d1
        ? d0 > d2
            ? d2 + 1
            : d0 + 1
        : bx === ay
            ? d1
            : d1 + 1;
  }

  return function(a, b)
  {
    if (a === b) {
      return 0;
    }

    if (a.length > b.length) {
      var tmp = a;
      a = b;
      b = tmp;
    }

    var la = a.length;
    var lb = b.length;

    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {
      la--;
      lb--;
    }

    var offset = 0;

    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {
      offset++;
    }

    la -= offset;
    lb -= offset;

    if (la === 0 || lb < 3) {
      return lb;
    }

    var x = 0;
    var y;
    var d0;
    var d1;
    var d2;
    var d3;
    var dd;
    var dy;
    var ay;
    var bx0;
    var bx1;
    var bx2;
    var bx3;

    var vector = [];

    for (y = 0; y < la; y++) {
      vector.push(y + 1);
      vector.push(a.charCodeAt(offset + y));
    }

    var len = vector.length - 1;

    for (; x < lb - 3;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      bx1 = b.charCodeAt(offset + (d1 = x + 1));
      bx2 = b.charCodeAt(offset + (d2 = x + 2));
      bx3 = b.charCodeAt(offset + (d3 = x + 3));
      dd = (x += 4);
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        ay = vector[y + 1];
        d0 = _min(dy, d0, d1, bx0, ay);
        d1 = _min(d0, d1, d2, bx1, ay);
        d2 = _min(d1, d2, d3, bx2, ay);
        dd = _min(d2, d3, dd, bx3, ay);
        vector[y] = dd;
        d3 = d2;
        d2 = d1;
        d1 = d0;
        d0 = dy;
      }
    }

    for (; x < lb;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      dd = ++x;
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);
        d0 = dy;
      }
    }

    return dd;
  };
})();

function levens(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl)
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var similars = [];
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    similars.push(data[score]);
    if(result.length > 0 && score > 0.5) {
      break;
    }
    if((result.length == 0 && data[score].length <= 30) || (result.length + data[score].length) <= 7) {
      result = result.concat(data[score]);
    }
  }
  return result;
}

var bip39_217764 = [coinlibs.bip39];
var bip39_wordlist_217771 = [bip39_217764[0].wordlists.japanese];
var editing_words_217789 = [""];
var autocomplete_words_217804 = [[]];

function HEX3Aanonymous_218038(x_218040) {
	var result_218041 = null;

		result_218041 = x_218040;

	return result_218041;

}

function HEX3Aanonymous_218073(x_218075) {
	var result_218076 = null;

		result_218076 = x_218075;

	return result_218076;

}
var chklist_218030 = [null];
var wl_japanese_218065 = [nimCopy(null, bip39_217764[0].wordlists.japanese.map((HEX3Aanonymous_218038)), NTI218031)];
var wl_english_218100 = [nimCopy(null, bip39_217764[0].wordlists.english.map((HEX3Aanonymous_218073)), NTI218066)];
var wl_select_218101 = [nimCopy(null, wl_japanese_218065[0], NTI218031)];

function new_seq_199212(len_199215) {
	var result_199217 = null;

		result_199217 = new Array(len_199215); for (var i=0;i<len_199215;++i) {result_199217[i]={k: 0, parent: null, current: null, n: null};}
	return result_199217;

}

function new_seq_199249(len_199252) {
	var result_199254 = null;

		result_199254 = new Array(len_199252); for (var i=0;i<len_199252;++i) {result_199254[i]={parent: null, newChild: null, pos: 0};}
	return result_199254;

}

function init_199046(ev_199048) {

		function HEX3Aanonymous_199049() {
				dodraw_197646(kxi_189324[0]);

			
		}

		kxi_189324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_199049);

	
}

function set_renderer_199078(renderer_199083, root_199084, client_post_render_callback_199088) {

		function HEX3Aanonymous_199310() {
				redraw_198814(kxi_189324[0]);

			
		}

	var result_199089 = null;

		if ((document.getElementById(root_199084) == null)) {
		var msg_199095 = (("Could not find a <div> with id=" + root_199084) + ". Karax needs it as its rendering target.");
		var e_199098 = null;
		e_199098 = {m_type: NTI4026, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_199098.message = nimCopy(null, cstrToNimstr(msg_199095), NTI138);
		e_199098.parent = null;
		raiseException(e_199098, "Exception");
		}
		
		result_199089 = {rootId: root_199084, renderer: renderer_199083, postRenderCallback: client_post_render_callback_199088, patches: new_seq_199212(60), patchesV: new_seq_199249(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		kxi_189324[0] = result_199089;
		window.onload = init_199046;
		window.onhashchange = HEX3Aanonymous_199310;

	return result_199089;

}

function set_renderer_199383(renderer_199387, root_199388, client_post_render_callback_199391) {

		function wrap_renderer_199393(data_199395) {
			var result_199396 = null;

				result_199396 = renderer_199387();

			return result_199396;

		}

		function wrap_post_render_199410(data_199412) {
				if (!((client_post_render_callback_199391 == null))) {
				client_post_render_callback_199391();
				}
				

			
		}

	var result_199392 = null;

		result_199392 = set_renderer_199078(wrap_renderer_199393, root_199388, wrap_post_render_199410);

	return result_199392;

}

function new_vnode_172228(kind_172230) {
	var result_172231 = null;

		result_172231 = {kind: kind_172230, index: -1, m_type: NTI169714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_172231;

}

function add_170800(parent_170802, kid_170803) {
		if (parent_170802.kids != null) { parent_170802.kids.push(kid_170803); } else { parent_170802.kids = [kid_170803]; };

	
}

function tree_172246(kind_172248, kids_172250) {
	var result_172251 = null;

		result_172251 = new_vnode_172228(kind_172248);
		L1: do {
			var k_172282 = null;
			var i_219637 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_219637 < (kids_172250 != null ? kids_172250.length : 0))) break L3;
						k_172282 = kids_172250[chckIndx(i_219637, 0, kids_172250.length+0-1)-0];
						add_170800(result_172251, k_172282);
						i_219637 = addInt(i_219637, 1);
					}
			} while(false);
		} while(false);

	return result_172251;

}

function text_172364(s_172366) {
	var result_172367 = null;

		result_172367 = {kind: 0, text: toJSStr(s_172366), index: -1, m_type: NTI169714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_172367;

}

function import_type_button_class_214267(import_type_214269) {
		var Tmp1;

	var result_214270 = null;

		if ((import_type_214269 == current_import_type_214050[0])) {
		Tmp1 = makeNimstrLit("ui olive button");
		}
		else {
		Tmp1 = makeNimstrLit("ui grey button");
		}
		
		result_214270 = toJSStr(Tmp1);

	return result_214270;

}

function add_event_listener_172721(n_172723, event_172724, handler_172725) {
		if (n_172723.events != null) { n_172723.events.push({Field0: event_172724, Field1: handler_172725, Field2: null}); } else { n_172723.events = [{Field0: event_172724, Field1: handler_172725, Field2: null}]; };

	
}

function add_event_handler_199564(n_199566, k_199567, action_199570, kxi_199571) {

		function wrapper_199572(ev_199574, n_199575) {
				action_199570();
				if (!(kxi_199571.surpressRedraws)) {
				redraw_198814(kxi_199571);
				}
				

			
		}

		add_event_listener_172721(n_199566, k_199567, wrapper_199572);

	
}

function import_selector_214289(import_type_214291) {

		function HEX3Aanonymous_214295() {
				      qrReader.hide(true);
    
				current_import_type_214050[0] = import_type_214291;

			
		}

	var result_214294 = null;

		result_214294 = HEX3Aanonymous_214295;

	return result_214294;

}

function set_attr_170568(n_170570, key_170571, val_170572) {
	BeforeRet: do {
		if (((n_170570.attrs != null ? n_170570.attrs.length : 0) == 0)) {
		n_170570.attrs = nimCopy(null, [key_170571, val_170572], NTI170587);
		}
		else {
			L1: do {
				var i_170600 = 0;
				var colontmp__219667 = 0;
				colontmp__219667 = subInt((n_170570.attrs != null ? n_170570.attrs.length : 0), 2);
				var res_219668 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_219668 <= colontmp__219667)) break L3;
							i_170600 = res_219668;
							if ((n_170570.attrs[chckIndx(i_170600, 0, n_170570.attrs.length+0-1)-0] == key_170571)) {
							n_170570.attrs[chckIndx(addInt(i_170600, 1), 0, n_170570.attrs.length+0-1)-0] = val_170572;
							break BeforeRet;
							}
							
							res_219668 = addInt(res_219668, 2);
						}
				} while(false);
			} while(false);
			if (n_170570.attrs != null) { n_170570.attrs.push(key_170571); } else { n_170570.attrs = [key_170571]; };
			if (n_170570.attrs != null) { n_170570.attrs.push(val_170572); } else { n_170570.attrs = [val_170572]; };
		}
		
	} while (false);

	
}

function text_172401(s_172403) {
	var result_172404 = null;

		result_172404 = {kind: 0, text: s_172403, index: -1, m_type: NTI169714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_172404;

}

function HEX2F_26417(x_26419, y_26420) {
	var result_26421 = 0.0;

		result_26421 = (x_26419 / y_26420);

	return result_26421;

}

function raiseRangeError() {
		var e_22441 = null;
		e_22441 = {m_type: NTI4062, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22441.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_22441.parent = null;
		raiseException(e_22441, "RangeError");

	
}

function HEX5BHEX5D_84681(s_84685, x_84687) {
	var result_84688 = null;

		var a_84801 = x_84687.a;
		var l_85001 = addInt(subInt(x_84687.b, a_84801), 1);
		result_84688 = nimCopy(null, mnewString(chckRange(l_85001, 0, 2147483647)), NTI138);
		L1: do {
			var i_85009 = 0;
			var i_219677 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_219677 < l_85001)) break L3;
						i_85009 = i_219677;
						result_84688[chckIndx(i_85009, 0, result_84688.length+0-1)-0] = s_84685[chckIndx(addInt(i_85009, a_84801), 0, s_84685.length+0-1)-0];
						i_219677 = addInt(i_219677, 1);
					}
			} while(false);
		} while(false);

	return result_84688;

}

function HEX2EHEX2E_84620(a_84624, b_84625) {
	var result_84627 = {a: 0, b: 0};

		nimCopy(result_84627, {a: a_84624, b: b_84625}, NTI73907);

	return result_84627;

}

function HEX5BHEX5D_111704(s_111708, x_111710) {
	var result_111711 = null;

		var a_111801 = x_111710.a;
		var l_112001 = addInt(subInt(subInt((s_111708 != null ? s_111708.length : 0), x_111710.b), a_111801), 1);
		result_111711 = nimCopy(null, mnewString(chckRange(l_112001, 0, 2147483647)), NTI138);
		L1: do {
			var i_112009 = 0;
			var i_219685 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_219685 < l_112001)) break L3;
						i_112009 = i_219685;
						result_111711[chckIndx(i_112009, 0, result_111711.length+0-1)-0] = s_111708[chckIndx(addInt(i_112009, a_111801), 0, s_111708.length+0-1)-0];
						i_219685 = addInt(i_219685, 1);
					}
			} while(false);
		} while(false);

	return result_111711;

}

function HEX2EHEX2E_111639(a_111643, b_111644) {
	var result_111650 = {a: 0, b: 0};

		nimCopy(result_111650, {a: a_111643, b: b_111644}, NTI111647);

	return result_111650;

}

function seed_card_218624(card_info_218626) {
	var result_218627 = null;

		var tmp_218628 = tree_172246(43, []);
		tmp_218628.class = "ui card seed-card";
		var tmp_218629 = tree_172246(43, []);
		tmp_218629.class = "image";
		var tmp_218630 = tree_172246(43, []);
		tmp_218630.class = "seed-qrcode";
		set_attr_170568(tmp_218630, "data-orig", card_info_218626.orig);
		var tmp_218631 = tree_172246(84, []);
		set_attr_170568(tmp_218631, "width", "196");
		set_attr_170568(tmp_218631, "height", "196");
		add_170800(tmp_218630, tmp_218631);
		add_170800(tmp_218629, tmp_218630);
		add_170800(tmp_218628, tmp_218629);
		var tmp_218632 = tree_172246(43, []);
		tmp_218632.class = "content";
		var tmp_218633 = tree_172246(43, []);
		tmp_218633.class = "ui tag label mini tag";
		add_170800(tmp_218633, text_172401(card_info_218626.tag));
		add_170800(tmp_218632, tmp_218633);
		var tmp_218634 = tree_172246(43, []);
		tmp_218634.class = "header";
		add_170800(tmp_218634, text_172364(makeNimstrLit("Seed")));
		add_170800(tmp_218632, tmp_218634);
		var tmp_218635 = tree_172246(43, []);
		tmp_218635.class = "meta";
		var tmp_218636 = tree_172246(70, []);
		tmp_218636.class = "date";
		add_170800(tmp_218636, text_172401(card_info_218626.gen));
		add_170800(tmp_218635, tmp_218636);
		add_170800(tmp_218632, tmp_218635);
		var clen_218684 = (card_info_218626.seed != null ? card_info_218626.seed.length : 0);
		if ((0 < clen_218684)) {
		var half_218687 = subInt(clen_218684, Math.trunc(HEX2F_26417(clen_218684, 2)));
		var seed_218688 = cstrToNimstr(card_info_218626.seed);
		var seed_upper_218839 = HEX5BHEX5D_84681(seed_218688, HEX2EHEX2E_84620(0, subInt(half_218687, 1)));
		var seed_lower_218872 = HEX5BHEX5D_111704(seed_218688, HEX2EHEX2E_111639(half_218687, 1));
		seed_upper_218839 = nimCopy(null, (HEX5BHEX5D_84681(seed_upper_218839, HEX2EHEX2E_84620(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_upper_218839, HEX2EHEX2E_84620(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_upper_218839, HEX2EHEX2E_84620(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_upper_218839, HEX2EHEX2E_84620(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_upper_218839, HEX2EHEX2E_84620(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_111704(seed_upper_218839, HEX2EHEX2E_111639(20, 1)) || []), NTI138);
		seed_lower_218872 = nimCopy(null, (HEX5BHEX5D_84681(seed_lower_218872, HEX2EHEX2E_84620(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_lower_218872, HEX2EHEX2E_84620(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_lower_218872, HEX2EHEX2E_84620(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_lower_218872, HEX2EHEX2E_84620(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_84681(seed_lower_218872, HEX2EHEX2E_84620(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_111704(seed_lower_218872, HEX2EHEX2E_111639(20, 1)) || []), NTI138);
		var tmp_218637 = tree_172246(43, []);
		tmp_218637.class = "seed-body";
		var tmp_218638 = tree_172246(43, []);
		tmp_218638.class = "seed";
		add_170800(tmp_218638, text_172364(seed_upper_218839));
		add_170800(tmp_218637, tmp_218638);
		var tmp_218639 = tree_172246(43, []);
		tmp_218639.class = "seed";
		add_170800(tmp_218639, text_172364(seed_lower_218872));
		add_170800(tmp_218637, tmp_218639);
		add_170800(tmp_218632, tmp_218637);
		}
		
		add_170800(tmp_218628, tmp_218632);
		var tmp_218640 = tree_172246(43, []);
		tmp_218640.class = "extra content";
		var tmp_218641 = tree_172246(43, []);
		tmp_218641.class = "inline field";
		var tmp_218642 = tree_172246(43, []);
		tmp_218642.class = "vector-lavel";
		add_170800(tmp_218642, text_172364(makeNimstrLit("Seed Vector:")));
		add_170800(tmp_218641, tmp_218642);
		var tmp_218643 = tree_172246(43, []);
		tmp_218643.class = "ui mini input vector-input";
		var tmp_218644 = tree_172246(105, []);
		set_attr_170568(tmp_218644, "type", "text");
		set_attr_170568(tmp_218644, "placeholder", "Type your seed vector");
		add_170800(tmp_218643, tmp_218644);
		add_170800(tmp_218641, tmp_218643);
		add_170800(tmp_218640, tmp_218641);
		add_170800(tmp_218628, tmp_218640);
		var tmp_218645 = tree_172246(43, []);
		tmp_218645.class = "bt-seed-del";
		var tmp_218646 = tree_172246(106, []);
		tmp_218646.class = "circular ui icon mini button";
		var tmp_218647 = tree_172246(61, []);
		tmp_218647.class = "cut icon";
		add_170800(tmp_218646, tmp_218647);
		add_170800(tmp_218645, tmp_218646);
		add_170800(tmp_218628, tmp_218645);
		result_218627 = tmp_218628;

	return result_218627;

}

function substr_29822(s_29824, first_29825, last_29826) {
	var result_29827 = null;

		var first_29828 = nimMax(first_29825, 0);
		var l_29830 = nimMax(addInt(subInt(nimMin(last_29826, (s_29824 != null ? (s_29824.length-1) : -1)), first_29828), 1), 0);
		result_29827 = nimCopy(null, mnewString(chckRange(l_29830, 0, 2147483647)), NTI138);
		L1: do {
			var i_29839 = 0;
			var colontmp__169678 = 0;
			colontmp__169678 = subInt(l_29830, 1);
			var res_169679 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_169679 <= colontmp__169678)) break L3;
						i_29839 = res_169679;
						result_29827[chckIndx(i_29839, 0, result_29827.length+0-1)-0] = s_29824[chckIndx(addInt(i_29839, first_29828), 0, s_29824.length+0-1)-0];
						res_169679 = addInt(res_169679, 1);
					}
			} while(false);
		} while(false);

	return result_29827;

}

function nsuSplitChar(s_159654, sep_159655, maxsplit_159657) {
	var result_159659 = null;

		result_159659 = nimCopy(null, [], NTI159673);
		L1: do {
			var x_159660 = null;
			var last_219701 = 0;
			var splits_219702 = maxsplit_159657;
			L2: do {
					L3: while (true) {
					if (!(last_219701 <= (s_159654 != null ? s_159654.length : 0))) break L3;
						var first_219704 = last_219701;
						L4: do {
								L5: while (true) {
								if (!((last_219701 < (s_159654 != null ? s_159654.length : 0)) && !((s_159654[chckIndx(last_219701, 0, s_159654.length+0-1)-0] == sep_159655)))) break L5;
									last_219701 = addInt(last_219701, 1);
								}
						} while(false);
						if ((splits_219702 == 0)) {
						last_219701 = (s_159654 != null ? s_159654.length : 0);
						}
						
						x_159660 = substr_29822(s_159654, first_219704, subInt(last_219701, 1));
						var Tmp6 = nimCopy(null, x_159660, NTI138);
						if (result_159659 != null) { result_159659.push(Tmp6); } else { result_159659 = [Tmp6]; };
						if ((splits_219702 == 0)) {
						break L2;
						}
						
						splits_219702 = subInt(splits_219702, 1);
						last_219701 = addInt(last_219701, 1);
					}
			} while(false);
		} while(false);

	return result_159659;

}

function nsuStartsWith(s_163721, prefix_163722) {
						var Tmp3;

	var result_163723 = false;

	BeforeRet: do {
		var i_163725 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					if (((prefix_163722 != null ? prefix_163722.length : 0) <= i_163725)) {
					result_163723 = true;
					break BeforeRet;
					}
					
						if (((s_163721 != null ? s_163721.length : 0) <= i_163725)) Tmp3 = true; else {							Tmp3 = !((s_163721[chckIndx(i_163725, 0, s_163721.length+0-1)-0] == prefix_163722[chckIndx(i_163725, 0, prefix_163722.length+0-1)-0]));						}					if (Tmp3) {
					result_163723 = false;
					break BeforeRet;
					}
					
					i_163725 = addInt(i_163725, 1);
				}
		} while(false);
	} while (false);

	return result_163723;

}

function add_escaped_char_28414(s_28417, s_28417_Idx, c_28418) {
		switch (c_28418) {
		case 7:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\a")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\a"); };
			break;
		case 8:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\b")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\b"); };
			break;
		case 9:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\t")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\t"); };
			break;
		case 10:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\n")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\n"); };
			break;
		case 11:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\v")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\v"); };
			break;
		case 12:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\f")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\f"); };
			break;
		case 13:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\c")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\c"); };
			break;
		case 27:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\e")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\e"); };
			break;
		case 92:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\\\")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\\\"); };
			break;
		case 39:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\\'")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\\'"); };
			break;
		case 34:
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\\"")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\\""); };
			break;
		case 32:
		case 33:
		case 35:
		case 36:
		case 37:
		case 38:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
		case 47:
		case 48:
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
		case 57:
		case 58:
		case 59:
		case 60:
		case 61:
		case 62:
		case 63:
		case 64:
		case 65:
		case 66:
		case 67:
		case 68:
		case 69:
		case 70:
		case 71:
		case 72:
		case 73:
		case 74:
		case 75:
		case 76:
		case 77:
		case 78:
		case 79:
		case 80:
		case 81:
		case 82:
		case 83:
		case 84:
		case 85:
		case 86:
		case 87:
		case 88:
		case 89:
		case 90:
		case 91:
		case 93:
		case 94:
		case 95:
		case 96:
		case 97:
		case 98:
		case 99:
		case 100:
		case 101:
		case 102:
		case 103:
		case 104:
		case 105:
		case 106:
		case 107:
		case 108:
		case 109:
		case 110:
		case 111:
		case 112:
		case 113:
		case 114:
		case 115:
		case 116:
		case 117:
		case 118:
		case 119:
		case 120:
		case 121:
		case 122:
		case 123:
		case 124:
		case 125:
		case 126:
			if (s_28417[s_28417_Idx] != null) { addChar(s_28417[s_28417_Idx], c_28418); } else { s_28417[s_28417_Idx] = [c_28418]; };
			break;
		default: 
			if (s_28417[s_28417_Idx] != null) { s_28417[s_28417_Idx] = (s_28417[s_28417_Idx]).concat(makeNimstrLit("\\x")); } else { s_28417[s_28417_Idx] = makeNimstrLit("\\x"); };
			var n_28434 = c_28418;
			if (s_28417[s_28417_Idx] != null) { addChar(s_28417[s_28417_Idx], makeNimstrLit("0123456789ABCDEF")[chckIndx(((n_28434 & 240) >> 4), 0, makeNimstrLit("0123456789ABCDEF").length+0-1)-0]); } else { s_28417[s_28417_Idx] = [makeNimstrLit("0123456789ABCDEF")[chckIndx(((n_28434 & 240) >> 4), 0, makeNimstrLit("0123456789ABCDEF").length+0-1)-0]]; };
			if (s_28417[s_28417_Idx] != null) { addChar(s_28417[s_28417_Idx], makeNimstrLit("0123456789ABCDEF")[chckIndx((n_28434 & 15), 0, makeNimstrLit("0123456789ABCDEF").length+0-1)-0]); } else { s_28417[s_28417_Idx] = [makeNimstrLit("0123456789ABCDEF")[chckIndx((n_28434 & 15), 0, makeNimstrLit("0123456789ABCDEF").length+0-1)-0]]; };
			break;
		}

	
}

function add_quoted_215201(s_215204, s_215204_Idx, x_215205) {
		if (s_215204[s_215204_Idx] != null) { s_215204[s_215204_Idx] = (s_215204[s_215204_Idx]).concat(makeNimstrLit("\"")); } else { s_215204[s_215204_Idx] = makeNimstrLit("\""); };
		L1: do {
			var c_215401 = 0;
			var i_219708 = 0;
			var l_219709 = (x_215205 != null ? x_215205.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_219708 < l_219709)) break L3;
						c_215401 = x_215205.charCodeAt(chckIndx(i_219708, 0, x_215205.length+0-1)-0);
						if ((c_215401 <= 127)) {
						add_escaped_char_28414(s_215204, s_215204_Idx, c_215401);
						}
						else {
						if (s_215204[s_215204_Idx] != null) { addChar(s_215204[s_215204_Idx], c_215401); } else { s_215204[s_215204_Idx] = [c_215401]; };
						}
						
						i_219708 = addInt(i_219708, 1);
					}
			} while(false);
		} while(false);
		if (s_215204[s_215204_Idx] != null) { s_215204[s_215204_Idx] = (s_215204[s_215204_Idx]).concat(makeNimstrLit("\"")); } else { s_215204[s_215204_Idx] = makeNimstrLit("\""); };

	
}

function HEX24_214523(x_214526) {
	var result_214527 = [null];

		result_214527[0] = nimCopy(null, makeNimstrLit("("), NTI138);
		var first_element_214528 = true;
		if (!(first_element_214528)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(", ")); } else { result_214527[0] = makeNimstrLit(", "); };
		}
		
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("seed")); } else { result_214527[0] = makeNimstrLit("seed"); };
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(": ")); } else { result_214527[0] = makeNimstrLit(": "); };
		if ((x_214526.seed == null)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("nil")); } else { result_214527[0] = makeNimstrLit("nil"); };
		}
		else {
		add_quoted_215201(result_214527, 0, x_214526.seed);
		}
		
		first_element_214528 = false;
		if (!(first_element_214528)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(", ")); } else { result_214527[0] = makeNimstrLit(", "); };
		}
		
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("gen")); } else { result_214527[0] = makeNimstrLit("gen"); };
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(": ")); } else { result_214527[0] = makeNimstrLit(": "); };
		if ((x_214526.gen == null)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("nil")); } else { result_214527[0] = makeNimstrLit("nil"); };
		}
		else {
		add_quoted_215201(result_214527, 0, x_214526.gen);
		}
		
		first_element_214528 = false;
		if (!(first_element_214528)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(", ")); } else { result_214527[0] = makeNimstrLit(", "); };
		}
		
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("tag")); } else { result_214527[0] = makeNimstrLit("tag"); };
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(": ")); } else { result_214527[0] = makeNimstrLit(": "); };
		if ((x_214526.tag == null)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("nil")); } else { result_214527[0] = makeNimstrLit("nil"); };
		}
		else {
		add_quoted_215201(result_214527, 0, x_214526.tag);
		}
		
		first_element_214528 = false;
		if (!(first_element_214528)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(", ")); } else { result_214527[0] = makeNimstrLit(", "); };
		}
		
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("orig")); } else { result_214527[0] = makeNimstrLit("orig"); };
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(": ")); } else { result_214527[0] = makeNimstrLit(": "); };
		if ((x_214526.orig == null)) {
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit("nil")); } else { result_214527[0] = makeNimstrLit("nil"); };
		}
		else {
		add_quoted_215201(result_214527, 0, x_214526.orig);
		}
		
		first_element_214528 = false;
		if (result_214527[0] != null) { result_214527[0] = (result_214527[0]).concat(makeNimstrLit(")")); } else { result_214527[0] = makeNimstrLit(")"); };

	return result_214527[0];

}

function cb_seed_qr_done_214358(data_214360) {
		rawEcho(makeNimstrLit("cbQrDone:"), cstrToNimstr(data_214360));
		var sdata_214364 = cstrToNimstr(data_214360);
		var ds_214365 = nsuSplitChar(sdata_214364, 44, -1);
		L1: do {
			var d_214414 = null;
			var i_219695 = 0;
			var l_219696 = (ds_214365 != null ? ds_214365.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_219695 < l_219696)) break L3;
						d_214414 = ds_214365[chckIndx(i_219695, 0, ds_214365.length+0-1)-0];
						if (nsuStartsWith(d_214414, makeNimstrLit("seed:"))) {
						seed_card_info_214329[0].seed = toJSStr(HEX5BHEX5D_111704(d_214414, HEX2EHEX2E_111639(5, 1)));
						rawEcho(cstrToNimstr(seed_card_info_214329[0].seed));
						}
						else {
						if (nsuStartsWith(d_214414, makeNimstrLit("tag:"))) {
						seed_card_info_214329[0].tag = toJSStr(HEX5BHEX5D_111704(d_214414, HEX2EHEX2E_111639(4, 1)));
						rawEcho(cstrToNimstr(seed_card_info_214329[0].tag));
						}
						else {
						if (nsuStartsWith(d_214414, makeNimstrLit("gen:"))) {
						seed_card_info_214329[0].gen = toJSStr(HEX5BHEX5D_111704(d_214414, HEX2EHEX2E_111639(4, 1)));
						rawEcho(cstrToNimstr(seed_card_info_214329[0].gen));
						}
						}}
						i_219695 = addInt(i_219695, 1);
						if (!(((ds_214365 != null ? ds_214365.length : 0) == l_219696))) {
						failed_assert_impl_15051(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		seed_card_info_214329[0].orig = data_214360;
		rawEcho(HEX24_214523(seed_card_info_214329[0]));
		    qrReader.hide();
  
		view_selector_214091(2);

	
}

function show_qr_217629() {

		function HEX3Aanonymous_217634() {
				      qrReader.show(cb_seed_qr_done_214358);
    

			
		}

	var result_217633 = null;

		result_217633 = HEX3Aanonymous_217634;

	return result_217633;

}

function cam_change_217662() {

		function HEX3Aanonymous_217667() {
				      $('.camtools button').blur();
      //qrReader.show(cb_seed_qr_done_214358);
    

			
		}

	var result_217666 = null;

		result_217666 = HEX3Aanonymous_217667;

	return result_217666;

}

function cam_close_217695() {

		function HEX3Aanonymous_217700() {
				      qrReader.hide(true);
    

			
		}

	var result_217699 = null;

		result_217699 = HEX3Aanonymous_217700;

	return result_217699;

}

function add_event_handler_199528(n_199530, k_199531, action_199532, kxi_199533) {

		function wrapper_199534(ev_199536, n_199537) {
				action_199532(ev_199536, n_199537);
				if (!(kxi_199533.surpressRedraws)) {
				redraw_198814(kxi_199533);
				}
				

			
		}

		add_event_listener_172721(n_199530, k_199531, wrapper_199534);

	
}

function change_language_218348(ev_218350, n_218351) {
		var lang_id_218352 = value_169822(n_218351);
		if ((lang_id_218352 == 0)) {
		bip39_wordlist_217771[0] = bip39_217764[0].wordlists.japanese;
		wl_select_218101[0] = nimCopy(null, wl_japanese_218065[0], NTI218031);
		}
		else {
		if ((lang_id_218352 == 1)) {
		bip39_wordlist_217771[0] = bip39_217764[0].wordlists.english;
		wl_select_218101[0] = nimCopy(null, wl_english_218100[0], NTI218066);
		}
		}
		autocomplete_words_217804[0] = nimCopy(null, [], NTI218377);
		chklist_218030[0] = nimCopy(null, [], NTI218390);

	
}

function check_mnemonic_217818(ev_217820, n_217821) {
			var Tmp1;
			var Tmp2;

		var s_217822 = value_169822(n_217821);
			if (!!((s_217822 == null))) Tmp1 = false; else {				Tmp1 = (0 < (s_217822 != null ? s_217822.length : 0));			}		if (Tmp1) {
		editing_words_217789[0] = s_217822;
		var cur_217843 = document.getElementById((n_217821.id)).selectionStart;
		      s_217822 = s_217822.substr(0, cur_217843).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
    
			if (!!((s_217822 == null))) Tmp2 = false; else {				Tmp2 = (0 < (s_217822 != null ? s_217822.length : 0));			}		if (Tmp2) {
		var tmplist_217860 = [];
		L3: do {
			var word_217861 = null;
			var v_219754 = null;
			for (var k in bip39_wordlist_217771[0]) {
			  if (!bip39_wordlist_217771[0].hasOwnProperty(k)) continue;
			  v_219754=bip39_wordlist_217771[0][k];
			word_217861 = v_219754;
			var w_217862 = word_217861;
			if (w_217862.startsWith(s_217822)) {
			if (tmplist_217860 != null) { tmplist_217860.push(w_217862); } else { tmplist_217860 = [w_217862]; };
			}
			
			}
		} while(false);
		autocomplete_words_217804[0] = nimCopy(null, tmplist_217860, NTI217846);
		}
		else {
			autocomplete_words_217804[0] = nimCopy(null, [], NTI217882);
		}
		
		}
		else {
			autocomplete_words_217804[0] = nimCopy(null, [], NTI217895);
		}
		

	
}

function get_vnode_by_id_190117(id_190119, kxi_190120) {
	var result_190121 = null;

		if (kxi_190120.byId.hasOwnProperty(id_190119)) {
		result_190121 = kxi_190120.byId[id_190119];
		}
		

	return result_190121;

}

function confirm_mnemonic_218134(input_id_218136) {

		function HEX3Aanonymous_218140() {
					var Tmp1;

				var x_218142 = get_vnode_by_id_190117(input_id_218136, kxi_189324[0]);
				var s_218143 = value_169822(x_218142);
					if (!!((s_218143 == null))) Tmp1 = false; else {						Tmp1 = (0 < (s_218143 != null ? s_218143.length : 0));					}				if (Tmp1) {
				var words_218147 = null;
				        words_218147 = s_218143.replace(/[ 　\n\r]+/g, ' ').trim().split(' ');
      
				chklist_218030[0] = nimCopy(null, [], NTI218160);
				var idx_218161 = 0;
				L2: do {
					var word_218214 = null;
					var i_219758 = 0;
					var l_219759 = (words_218147 != null ? words_218147.length : 0);
					L3: do {
							L4: while (true) {
							if (!(i_219758 < l_219759)) break L4;
								word_218214 = words_218147[chckIndx(i_219758, 0, words_218147.length+0-1)-0];
								if (wl_select_218101[0].includes(word_218214)) {
								if (chklist_218030[0] != null) { chklist_218030[0].push({Field0: idx_218161, Field1: word_218214, Field2: true, Field3: []}); } else { chklist_218030[0] = [{Field0: idx_218161, Field1: word_218214, Field2: true, Field3: []}]; };
								}
								else {
									var levs_218240 = nimCopy(null, levens((word_218214), bip39_wordlist_217771[0]), NTI218235);
									if (chklist_218030[0] != null) { chklist_218030[0].push({Field0: idx_218161, Field1: word_218214, Field2: false, Field3: nimCopy(null, levs_218240, NTI218028)}); } else { chklist_218030[0] = [{Field0: idx_218161, Field1: word_218214, Field2: false, Field3: nimCopy(null, levs_218240, NTI218028)}]; };
								}
								
								idx_218161 = addInt(idx_218161, 1);
								i_219758 = addInt(i_219758, 1);
								if (!(((words_218147 != null ? words_218147.length : 0) == l_219759))) {
								failed_assert_impl_15051(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				}
				else {
					chklist_218030[0] = nimCopy(null, [], NTI218267);
				}
				
				autocomplete_words_217804[0] = nimCopy(null, [], NTI218280);

			
		}

	var result_218139 = null;

		result_218139 = HEX3Aanonymous_218140;

	return result_218139;

}

function set_input_text_199812(n_199814, s_199815) {
		n_199814.text = s_199815;
		if (!((n_199814.dom == null))) {
		n_199814.dom.value = s_199815;
		}
		

	
}

function select_word_217909(input_id_217911, word_217912, whole_replace_217913) {

		function HEX3Aanonymous_217917() {
					var Tmp1;

				var x_217919 = get_vnode_by_id_190117(input_id_217911, kxi_189324[0]);
				var s_217920 = value_169822(x_217919);
					if (!!((s_217920 == null))) Tmp1 = false; else {						Tmp1 = (0 < (s_217920 != null ? s_217920.length : 0));					}				if (Tmp1) {
				var input_elm_217933 = document.getElementById((input_id_217911));
				var cur_217937 = input_elm_217933.selectionStart;
				var newcur_217938 = cur_217937;
				if (whole_replace_217913) {
				          var t = s_217920.substr(0, cur_217937).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            s_217920 = s_217920.substr(0, cur_217937 - t.length) + word_217912;
            newcur_217938 = s_217920.length;
          }
        
				set_input_text_199812(x_217919, s_217920);
				editing_words_217789[0] = s_217920;
				input_elm_217933.focus();
				input_elm_217933.selectionStart = newcur_217938;
				input_elm_217933.selectionEnd = newcur_217938;
				}
				else {
					          var t = s_217920.substr(0, cur_217937).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            var tail = s_217920.substr(cur_217937) || '';
            s_217920 = s_217920.substr(0, cur_217937 - t.length) + word_217912 + tail;
            newcur_217938 = s_217920.length - tail.length;
          }
        
					set_input_text_199812(x_217919, s_217920);
					editing_words_217789[0] = s_217920;
					input_elm_217933.focus();
					input_elm_217933.selectionEnd = newcur_217938;
				}
				
				}
				
				autocomplete_words_217804[0] = nimCopy(null, [], NTI217996);

			
		}

	var result_217916 = null;

		result_217916 = HEX3Aanonymous_217917;

	return result_217916;

}

function fix_word_218307(input_id_218309, idx_218310, word_218311) {

		function HEX3Aanonymous_218315() {
					var Tmp1;

				var x_218317 = get_vnode_by_id_190117(input_id_218309, kxi_189324[0]);
				var s_218318 = value_169822(x_218317);
					if (!!((s_218318 == null))) Tmp1 = false; else {						Tmp1 = (0 < (s_218318 != null ? s_218318.length : 0));					}				if (Tmp1) {
				var ret_218321 = null;
				        ret_218321 = "";
        var count = 0;
        var find = false;
        var skip = false;
        for(var t in s_218318) {
          if(/[ 　\n\r]/.test(s_218318[t])) {
            ret_218321 += s_218318[t];
            if(find) {
              count++;
            }
            find = false;
            skip = false;
          } else {
            find = true;
            if(idx_218310 == count && skip == false) {
              ret_218321 += word_218311;
              skip = true;
            } else {
              if(!skip) {
                ret_218321 += s_218318[t];
              }
            }
          }
        }
      
				set_input_text_199812(x_218317, ret_218321);
				editing_words_217789[0] = ret_218321;
				}
				

			
		}

	var result_218314 = null;

		result_218314 = HEX3Aanonymous_218315;

	return result_218314;

}

function mnemonic_editor_218404() {
	var result_218406 = null;

		var input_id_218407 = "minput";
		var tmp_218450 = tree_172246(43, []);
		var tmp_218451 = tree_172246(43, []);
		tmp_218451.class = "ui clearing segment medit-seg";
		var tmp_218457 = tree_172246(43, []);
		tmp_218457.class = "ui form";
		var tmp_218458 = tree_172246(43, []);
		tmp_218458.class = "field";
		var tmp_218459 = tree_172246(104, []);
		add_170800(tmp_218459, text_172364(makeNimstrLit("Select mnemonic language")));
		add_170800(tmp_218458, tmp_218459);
		var tmp_218460 = tree_172246(43, []);
		tmp_218460.class = "ui selection dropdown";
		var tmp_218461 = tree_172246(105, []);
		set_attr_170568(tmp_218461, "type", "hidden");
		set_attr_170568(tmp_218461, "name", "mnemonic-language");
		valueHEX3D_169839(tmp_218461, "0");
		add_event_handler_199528(tmp_218461, 8, change_language_218348, kxi_189324[0]);
		add_170800(tmp_218460, tmp_218461);
		var tmp_218462 = tree_172246(61, []);
		tmp_218462.class = "dropdown icon";
		add_170800(tmp_218460, tmp_218462);
		var tmp_218463 = tree_172246(43, []);
		tmp_218463.class = "default text";
		add_170800(tmp_218463, text_172364(makeNimstrLit("Mnemonic Language")));
		add_170800(tmp_218460, tmp_218463);
		var tmp_218464 = tree_172246(43, []);
		tmp_218464.class = "menu";
		var tmp_218465 = tree_172246(43, []);
		tmp_218465.class = "item";
		set_attr_170568(tmp_218465, "data-value", "0");
		add_170800(tmp_218465, text_172364(makeNimstrLit("Japanese")));
		add_170800(tmp_218464, tmp_218465);
		var tmp_218466 = tree_172246(43, []);
		tmp_218466.class = "item";
		set_attr_170568(tmp_218466, "data-value", "1");
		add_170800(tmp_218466, text_172364(makeNimstrLit("English")));
		add_170800(tmp_218464, tmp_218466);
		add_170800(tmp_218460, tmp_218464);
		add_170800(tmp_218458, tmp_218460);
		add_170800(tmp_218457, tmp_218458);
		var tmp_218467 = tree_172246(43, []);
		tmp_218467.class = "field minput-field";
		var tmp_218468 = tree_172246(104, []);
		add_170800(tmp_218468, text_172364(makeNimstrLit("Import your mnemonic you already have")));
		add_170800(tmp_218467, tmp_218468);
		var tmp_218469 = tree_172246(111, []);
		tmp_218469.id = input_id_218407;
		valueHEX3D_169839(tmp_218469, editing_words_217789[0]);
		add_event_handler_199528(tmp_218469, 3, check_mnemonic_217818, kxi_189324[0]);
		add_event_handler_199528(tmp_218469, 16, check_mnemonic_217818, kxi_189324[0]);
		set_attr_170568(tmp_218469, "spellcheck", "false");
		add_170800(tmp_218467, tmp_218469);
		add_170800(tmp_218457, tmp_218467);
		add_170800(tmp_218451, tmp_218457);
		var tmp_218470 = tree_172246(106, []);
		tmp_218470.class = "ui right floated primary button";
		add_event_handler_199564(tmp_218470, 0, confirm_mnemonic_218134(input_id_218407), kxi_189324[0]);
		add_170800(tmp_218470, text_172364(makeNimstrLit("Check")));
		add_170800(tmp_218451, tmp_218470);
		add_170800(tmp_218450, tmp_218451);
		var tmp_218471 = tree_172246(43, []);
		tmp_218471.class = "medit-autocomp";
		L1: do {
			var word_218556 = null;
			var i_219731 = 0;
			var l_219732 = (autocomplete_words_217804[0] != null ? autocomplete_words_217804[0].length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_219731 < l_219732)) break L3;
						word_218556 = autocomplete_words_217804[0][chckIndx(i_219731, 0, autocomplete_words_217804[0].length+0-1)-0];
						var tmp_218472 = tree_172246(106, []);
						tmp_218472.class = "ui mini teal label";
						add_event_handler_199564(tmp_218472, 0, select_word_217909(input_id_218407, word_218556, true), kxi_189324[0]);
						add_170800(tmp_218472, text_172401(word_218556));
						add_170800(tmp_218471, tmp_218472);
						i_219731 = addInt(i_219731, 1);
						if (!(((autocomplete_words_217804[0] != null ? autocomplete_words_217804[0].length : 0) == l_219732))) {
						failed_assert_impl_15051(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L4: do {
			var i_218579 = 0;
			var colontmp__219745 = 0;
			colontmp__219745 = (chklist_218030[0] != null ? (chklist_218030[0].length-1) : -1);
			var res_219746 = 0;
			L5: do {
					L6: while (true) {
					if (!(res_219746 <= colontmp__219745)) break L6;
						i_218579 = res_219746;
						if (chklist_218030[0][chckIndx(i_218579, 0, chklist_218030[0].length+0-1)-0].Field2) {
						var tmp_218473 = tree_172246(106, []);
						tmp_218473.class = "ui mini green label";
						var tmp_218474 = tree_172246(61, []);
						tmp_218474.class = "check circle icon";
						add_170800(tmp_218474, text_172401((" " + chklist_218030[0][chckIndx(i_218579, 0, chklist_218030[0].length+0-1)-0].Field1)));
						add_170800(tmp_218473, tmp_218474);
						add_170800(tmp_218471, tmp_218473);
						}
						else {
							var tmp_218475 = tree_172246(106, []);
							tmp_218475.class = "ui mini pink label";
							var tmp_218476 = tree_172246(61, []);
							tmp_218476.class = "x icon";
							add_170800(tmp_218476, text_172401((" " + chklist_218030[0][chckIndx(i_218579, 0, chklist_218030[0].length+0-1)-0].Field1)));
							add_170800(tmp_218475, tmp_218476);
							L7: do {
								var lev_218602 = null;
								var colontmp__219741 = null;
								colontmp__219741 = chklist_218030[0][chckIndx(i_218579, 0, chklist_218030[0].length+0-1)-0].Field3;
								var i_219742 = 0;
								var l_219743 = (colontmp__219741 != null ? colontmp__219741.length : 0);
								L8: do {
										L9: while (true) {
										if (!(i_219742 < l_219743)) break L9;
											lev_218602 = colontmp__219741[chckIndx(i_219742, 0, colontmp__219741.length+0-1)-0];
											var tmp_218477 = tree_172246(106, []);
											tmp_218477.class = "ui mini blue basic label";
											add_event_handler_199564(tmp_218477, 0, fix_word_218307(input_id_218407, chklist_218030[0][chckIndx(i_218579, 0, chklist_218030[0].length+0-1)-0].Field0, lev_218602), kxi_189324[0]);
											add_170800(tmp_218477, text_172401(lev_218602));
											add_170800(tmp_218475, tmp_218477);
											i_219742 = addInt(i_219742, 1);
											if (!(((colontmp__219741 != null ? colontmp__219741.length : 0) == l_219743))) {
											failed_assert_impl_15051(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
											}
											
										}
								} while(false);
							} while(false);
							add_170800(tmp_218471, tmp_218475);
						}
						
						res_219746 = addInt(res_219746, 1);
					}
			} while(false);
		} while(false);
		add_170800(tmp_218450, tmp_218471);
		result_218406 = tmp_218450;

	return result_218406;

}

function app_main_219348() {
	var result_219350 = null;

		var tmp_219351 = tree_172246(43, []);
		if (show_page1_214061[0]) {
		var tmp_219352 = tree_172246(17, []);
		tmp_219352.id = "section1";
		tmp_219352.class = "section";
		var tmp_219353 = tree_172246(43, []);
		tmp_219353.class = "intro";
		var tmp_219354 = tree_172246(43, []);
		tmp_219354.class = "intro-head";
		var tmp_219355 = tree_172246(43, []);
		tmp_219355.class = "caption";
		add_170800(tmp_219355, text_172364(makeNimstrLit("Pastel Wallet")));
		add_170800(tmp_219354, tmp_219355);
		var tmp_219356 = tree_172246(43, []);
		tmp_219356.class = "ui container method-selector";
		var tmp_219357 = tree_172246(43, []);
		tmp_219357.class = "title";
		add_170800(tmp_219357, text_172364(makeNimstrLit("Import the master seed to start your wallet.")));
		add_170800(tmp_219356, tmp_219357);
		var tmp_219358 = tree_172246(43, []);
		tmp_219358.class = "ui buttons";
		var tmp_219359 = tree_172246(106, []);
		tmp_219359.class = import_type_button_class_214267(0);
		add_event_handler_199564(tmp_219359, 0, import_selector_214289(0), kxi_189324[0]);
		var tmp_219360 = tree_172246(61, []);
		tmp_219360.class = "qrcode icon";
		add_170800(tmp_219359, tmp_219360);
		add_170800(tmp_219359, text_172364(makeNimstrLit("Seed card")));
		add_170800(tmp_219358, tmp_219359);
		var tmp_219361 = tree_172246(43, []);
		tmp_219361.class = "or";
		add_170800(tmp_219358, tmp_219361);
		var tmp_219362 = tree_172246(106, []);
		tmp_219362.class = import_type_button_class_214267(1);
		add_event_handler_199564(tmp_219362, 0, import_selector_214289(1), kxi_189324[0]);
		var tmp_219363 = tree_172246(61, []);
		tmp_219363.class = "list alternate icon";
		add_170800(tmp_219362, tmp_219363);
		add_170800(tmp_219362, text_172364(makeNimstrLit("Mnemonic")));
		add_170800(tmp_219358, tmp_219362);
		add_170800(tmp_219356, tmp_219358);
		add_170800(tmp_219354, tmp_219356);
		add_170800(tmp_219353, tmp_219354);
		var tmp_219364 = tree_172246(43, []);
		tmp_219364.class = "intro-body";
		if ((current_import_type_214050[0] == 0)) {
		var tmp_219365 = tree_172246(43, []);
		tmp_219365.id = "seed-seg";
		tmp_219365.class = "ui enter aligned segment seed-seg";
		if (show_scan_result_214060[0]) {
		var tmp_219366 = tree_172246(43, []);
		tmp_219366.class = "ui link cards seed-card-holder";
		add_170800(tmp_219366, seed_card_218624(seed_card_info_214329[0]));
		add_170800(tmp_219366, seed_card_218624(seed_card_info_214329[0]));
		var tmp_219367 = tree_172246(43, []);
		tmp_219367.class = "seed-add-container";
		var tmp_219368 = tree_172246(106, []);
		tmp_219368.class = "circular ui icon button bt-add-seed";
		var tmp_219369 = tree_172246(61, []);
		tmp_219369.class = "plus icon";
		add_170800(tmp_219368, tmp_219369);
		add_170800(tmp_219367, tmp_219368);
		add_170800(tmp_219366, tmp_219367);
		add_170800(tmp_219365, tmp_219366);
		var tmp_219370 = tree_172246(44, []);
		tmp_219370.class = "pagenext";
		set_attr_170568(tmp_219370, "href", "#section2");
		var tmp_219371 = tree_172246(70, []);
		add_170800(tmp_219370, tmp_219371);
		add_170800(tmp_219370, text_172364(makeNimstrLit("Next")));
		add_170800(tmp_219365, tmp_219370);
		}
		
		if (show_scanning_214058[0]) {
		var tmp_219372 = tree_172246(43, []);
		tmp_219372.class = "qr-scanning";
		var tmp_219373 = tree_172246(43, []);
		add_170800(tmp_219372, tmp_219373);
		var tmp_219374 = tree_172246(43, []);
		add_170800(tmp_219372, tmp_219374);
		add_170800(tmp_219365, tmp_219372);
		}
		
		if (show_scan_seed_btn_214057[0]) {
		var tmp_219375 = tree_172246(43, []);
		tmp_219375.class = "ui teal labeled icon button bt-scan-seed";
		add_event_handler_199564(tmp_219375, 0, show_qr_217629(), kxi_189324[0]);
		add_170800(tmp_219375, text_172364(makeNimstrLit("Scan seed card with camera")));
		var tmp_219376 = tree_172246(61, []);
		tmp_219376.class = "camera icon";
		add_170800(tmp_219375, tmp_219376);
		add_170800(tmp_219365, tmp_219375);
		}
		
		if (show_cam_tools_214059[0]) {
		var tmp_219377 = tree_172246(43, []);
		tmp_219377.class = "ui small basic icon buttons camtools";
		var tmp_219378 = tree_172246(106, []);
		tmp_219378.class = "ui button";
		add_event_handler_199564(tmp_219378, 0, cam_change_217662(), kxi_189324[0]);
		var tmp_219379 = tree_172246(61, []);
		tmp_219379.class = "camera icon";
		add_170800(tmp_219378, tmp_219379);
		add_170800(tmp_219377, tmp_219378);
		var tmp_219380 = tree_172246(106, []);
		tmp_219380.class = "ui button";
		add_event_handler_199564(tmp_219380, 0, cam_close_217695(), kxi_189324[0]);
		var tmp_219381 = tree_172246(61, []);
		tmp_219381.class = "window close icon";
		add_170800(tmp_219380, tmp_219381);
		add_170800(tmp_219377, tmp_219380);
		add_170800(tmp_219365, tmp_219377);
		}
		
		var tmp_219382 = tree_172246(84, []);
		tmp_219382.id = "qrcanvas";
		add_170800(tmp_219365, tmp_219382);
		add_170800(tmp_219364, tmp_219365);
		}
		else {
			var tmp_219383 = tree_172246(43, []);
			tmp_219383.class = "ui enter aligned segment mnemonic-seg";
			add_170800(tmp_219383, mnemonic_editor_218404());
			add_170800(tmp_219364, tmp_219383);
		}
		
		add_170800(tmp_219353, tmp_219364);
		add_170800(tmp_219352, tmp_219353);
		add_170800(tmp_219351, tmp_219352);
		}
		
		if (show_page2_214062[0]) {
		var tmp_219384 = tree_172246(17, []);
		tmp_219384.id = "section2";
		tmp_219384.class = "section";
		var tmp_219385 = tree_172246(43, []);
		add_170800(tmp_219385, text_172364(makeNimstrLit("hello!")));
		add_170800(tmp_219384, tmp_219385);
		add_170800(tmp_219351, tmp_219384);
		}
		
		result_219350 = tmp_219351;

	return result_219350;

}

function after_script_219559() {
		$("#section0").remove();
		$(".ui.dropdown").dropdown();
		if (show_scan_result_214060[0]) {
		      function seedCardQrUpdate() {
        $('.seed-qrcode').each(function() {
          $(this).find('canvas').remove();
          var fillcolor;
          if($(this).hasClass('active')) {
            fillcolor = '#000'
          } else {
            fillcolor = '#f8f8f8';
          }
          $(this).qrcode({
            render: 'canvas',
            ecLevel: 'Q',
            radius: 0.39,
            text: $(this).data('orig'),
            size: 196,
            mode: 2,
            label: '',
            fontname: 'sans',
            fontcolor: '#393939',
            fill: fillcolor
          });
        });
      }
      $('.seed-qrcode').last().addClass('active');
      seedCardQrUpdate();

      $('.seed-card').off('click').on('click', function() {
        if(!$(this).find('.seed-qrcode').hasClass('active')) {
          $('.seed-card').each(function() {
            $(this).find('.seed-qrcode').removeClass('active');
          });
          $(this).find('.seed-qrcode').addClass('active');
          seedCardQrUpdate();
        }
      });

      target_page_scroll = '#section2';
      page_scroll_done = function() {
        $('a.pagenext').css('visibility', 'hidden');
        jsViewSelector(3);
        page_scroll_done = function() {};
      }
      var elms = document.querySelectorAll('a.pagenext');
      Array.prototype.forEach.call(elms, function(elm) {
        var href = elm.getAttribute("href");
        if(href && href.startsWith('#')) {
          var cb = function(e) {
            e.preventDefault();
            var href = this.getAttribute('href');
            goSection(href, page_scroll_done);
          }
          registerEventList.push({elm: elm, type: 'click', cb: cb});
          elm.addEventListener('click', cb);
        }
      });
    
		}
		

	
}
app_inst_214014[0] = set_renderer_199383(app_main_219348, "main", after_script_219559);
