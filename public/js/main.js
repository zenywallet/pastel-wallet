/* Generated by the Nim Compiler v1.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI260273 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260500 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260485 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI51081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI260451 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260415 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260341 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260151 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260136 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260096 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260073 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260621 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI260606 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI201275 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI154832 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI157447 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI121907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI51099 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI211588 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI258463 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI46065 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI258459 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI258681 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI258666 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI258423 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI258422 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI258651 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI258540 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI258491 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI232211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI104084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI104085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI210776 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI210772 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI210135 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI210728 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI210716 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI210737 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI210735 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI210015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI210729 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI210720 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI93441 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93437 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93433 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93429 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93425 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93421 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93417 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93413 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93405 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93401 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93393 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93389 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93385 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93381 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93373 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93369 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93365 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI93274 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI93220 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI93519 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI93517 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI93515 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI93224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI93222 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI232207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI232209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI46045 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI93276 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51095 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51087 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51133 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI46055 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI46016 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI51127 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI51063 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51065 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51079 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46014 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI258045 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NNI258045 = {kind: 2, offset: 0, typ: null, name: null, len: 15, sons: {"0": {kind: 1, offset: 0, typ: NTI258045, name: "SeedNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI258045, name: "SeedScanning", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI258045, name: "SeedAfterScan", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI258045, name: "MnemonicEdit", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI258045, name: "MnemonicFulfill", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI258045, name: "SetPassphrase", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI258045, name: "KeyNone", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI258045, name: "KeyScanning", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI258045, name: "KeyAfterScan", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI258045, name: "KeyCardDone", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI258045, name: "PassphraseEdit", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI258045, name: "PassphraseDone", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI258045, name: "Wallet", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI258045, name: "WalletLogs", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI258045, name: "WalletSettings", len: 0, sons: null}}};
NTI258045.node = NNI258045;
var NNI51083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51083.node = NNI51083;
var NNI51079 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51079.node = NNI51079;
var NNI51065 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51065.node = NNI51065;
NTI51127.base = NTI51063;
NTI51133.base = NTI51063;
var NNI51063 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI51127, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI46016, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI46014, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI46014, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI46055, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI51133, name: "up", sons: null}]};
NTI51063.node = NNI51063;
var NNI51008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51008.node = NNI51008;
NTI51063.base = NTI51008;
NTI51065.base = NTI51063;
NTI51079.base = NTI51065;
NTI51083.base = NTI51079;
var NNI51087 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51087.node = NNI51087;
NTI51087.base = NTI51065;
var NNI51095 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51095.node = NNI51095;
NTI51095.base = NTI51065;
var NNI93276 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI46016, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI46016, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI46016, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI46016, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI46016, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI46016, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI46016, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI46016, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI46016, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI46016, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI46016, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI46016, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI46016, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI46016, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI46016, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI46016, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI46016, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI46016, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI46016, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI46016, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI46016, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI46016, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI46016, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI46016, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI46016, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI46016, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI46016, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI46016, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI46016, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI46016, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI46016, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI46016, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI46016, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI46016, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI46016, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI46016, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI46016, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI46016, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI46016, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI46016, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI46016, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI46016, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI46016, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI46016, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI46016, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI46016, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI46016, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI46016, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI46016, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI46016, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI46016, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI46016, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI46016, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI46016, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI46016, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI46016, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI46016, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI46016, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI46016, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI46016, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI46016, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI46016, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI46016, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI46016, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI46016, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI46016, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI46016, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI46016, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI46016, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI46016, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI46016, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI46016, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI46016, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI46016, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI46016, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI46016, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI46016, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI46016, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI46016, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI46016, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI46016, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI46016, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI46016, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI46016, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI46016, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI46016, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI46016, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI46016, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI46016, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI46016, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI46045, name: "zIndex", sons: null}]};
NTI93276.node = NNI93276;
NTI93276.base = NTI51008;
var NNI232207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI232207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI232207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI232207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI232207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI232207, name: "pkDetach", len: 0, sons: null}}};
NTI232207.node = NNI232207;
NTI93515.base = NTI93222;
NTI93517.base = NTI93222;
NTI93519.base = NTI93222;
var NNI93220 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI93220, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI93220, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI93220, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI93220, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI93220, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI93220, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI93220, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI93220, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI93220, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI93220, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI93220, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI93220, name: "NotationNode", len: 0, sons: null}}};
NTI93220.node = NNI93220;
NTI93274.base = NTI93276;
var NNI93224 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI93515, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI93517, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI93519, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI46016, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI93222, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI93222, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI93222, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI46016, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI93220, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI46016, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI93222, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI93222, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI46016, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI93274, name: "style", sons: null}]};
NTI93224.node = NNI93224;
var NNI93204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI93365, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI93369, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI93373, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI93377, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI93381, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI93385, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI93389, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI93393, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI93397, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI93401, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI93405, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI93409, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI93413, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI93417, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI93421, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI93425, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI93429, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI93433, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI93437, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI93441, name: "onunload", sons: null}]};
NTI93204.node = NNI93204;
NTI93204.base = NTI51008;
NTI93224.base = NTI93204;
NTI93222.base = NTI93224;
var NNI210015 = {kind: 2, offset: 0, typ: null, name: null, len: 118, sons: {"0": {kind: 1, offset: 0, typ: NTI210015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI210015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI210015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI210015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI210015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI210015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI210015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI210015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI210015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI210015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI210015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI210015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI210015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI210015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI210015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI210015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI210015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI210015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI210015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI210015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI210015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI210015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI210015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI210015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI210015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI210015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI210015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI210015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI210015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI210015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI210015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI210015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI210015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI210015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI210015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI210015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI210015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI210015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI210015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI210015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI210015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI210015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI210015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI210015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI210015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI210015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI210015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI210015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI210015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI210015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI210015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI210015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI210015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI210015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI210015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI210015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI210015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI210015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI210015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI210015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI210015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI210015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI210015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI210015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI210015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI210015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI210015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI210015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI210015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI210015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI210015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI210015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI210015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI210015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI210015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI210015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI210015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI210015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI210015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI210015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI210015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI210015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI210015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI210015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI210015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI210015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI210015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI210015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI210015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI210015, name: "table", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI210015, name: "caption", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI210015, name: "colgroup", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI210015, name: "col", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI210015, name: "tbody", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI210015, name: "thead", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI210015, name: "tfoot", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI210015, name: "tr", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI210015, name: "td", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI210015, name: "th", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI210015, name: "form", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI210015, name: "fieldset", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI210015, name: "legend", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI210015, name: "label", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI210015, name: "input", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI210015, name: "button", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI210015, name: "select", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI210015, name: "datalist", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI210015, name: "optgroup", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI210015, name: "option", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI210015, name: "textarea", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI210015, name: "keygen", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI210015, name: "output", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI210015, name: "progress", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI210015, name: "meter", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI210015, name: "details", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI210015, name: "summary", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI210015, name: "command", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI210015, name: "menu", len: 0, sons: null}}};
NTI210015.node = NNI210015;
NTI210735.base = NTI210720;
NTI210737.base = NTI46016;
var NNI210135 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI210135, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI210135, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI210135, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI210135, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI210135, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI210135, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI210135, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI210135, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI210135, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI210135, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI210135, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI210135, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI210135, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI210135, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI210135, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI210135, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI210135, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI210135, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI210135, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI210135, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI210135, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI210135, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI210135, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI210135, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI210135, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI210135, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI210135, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI210135, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI210135, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI210135, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI210135, name: "onkeyuplater", len: 0, sons: null}}};
NTI210135.node = NNI210135;
var NNI210728 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI210135, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI210772, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI210776, name: "Field2", sons: null}]};
NTI210728.node = NNI210728;
NTI210716.base = NTI210728;
var NNI104084 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI104084.node = NNI104084;
NTI104085.base = NTI104084;
var NNI210729 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI210015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI46045, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI46016, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI46016, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI46016, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI210735, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI210737, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI210716, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI104085, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI93222, name: "dom", sons: null}]};
NTI210729.node = NNI210729;
NTI210729.base = NTI51008;
NTI210720.base = NTI210729;
var NNI232209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI232207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI93222, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI93222, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI210720, name: "n", sons: null}]};
NTI232209.node = NNI232209;
var NNI232211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI210720, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI210720, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI46045, name: "pos", sons: null}]};
NTI232211.node = NNI232211;
NTI258491.base = NTI46016;
NTI258540.base = NTI46016;
var NNI258423 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seed", len: 0, typ: NTI46016, name: "seed", sons: null}, 
{kind: 1, offset: "gen", len: 0, typ: NTI46016, name: "gen", sons: null}, 
{kind: 1, offset: "tag", len: 0, typ: NTI46016, name: "tag", sons: null}, 
{kind: 1, offset: "orig", len: 0, typ: NTI46016, name: "orig", sons: null}, 
{kind: 1, offset: "sv", len: 0, typ: NTI46016, name: "sv", sons: null}]};
NTI258423.node = NNI258423;
NTI258422.base = NTI258423;
NTI258651.base = NTI258422;
NTI258666.base = NTI46016;
NTI258463.base = NTI46016;
var NNI258459 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI46045, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI46016, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI46065, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI258463, name: "Field3", sons: null}]};
NTI258459.node = NNI258459;
NTI258681.base = NTI258459;
NTI211588.base = NTI46016;
var NNI51099 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51099.node = NNI51099;
NTI51099.base = NTI51065;
var NNI121907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI46045, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI46045, name: "b", sons: null}]};
NTI121907.node = NNI121907;
var NNI157447 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI154832, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI46045, name: "b", sons: null}]};
NTI157447.node = NNI157447;
NTI201275.base = NTI46014;
NTI260606.base = NTI46016;
NTI260621.base = NTI258459;
NTI260073.base = NTI258459;
NTI260096.base = NTI46016;
NTI260136.base = NTI46016;
NTI260151.base = NTI46016;
NTI260341.base = NTI258459;
NTI260415.base = NTI46016;
NTI260451.base = NTI46016;
var NNI51081 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI51081.node = NNI51081;
NTI51081.base = NTI51079;
NTI260485.base = NTI258459;
NTI260500.base = NTI46016;
NTI260273.base = NTI46016;

function toJSStr(s_72304) {
                    var Tmp5;
            var Tmp7;

  var result_72305 = null;

    var res_72378 = new_seq_72336((s_72304 != null ? s_72304.length : 0));
    var i_72380 = 0;
    var j_72382 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_72380 < (s_72304 != null ? s_72304.length : 0))) break L2;
          var c_72383 = s_72304[i_72380];
          if ((c_72383 < 128)) {
          res_72378[j_72382] = String.fromCharCode(c_72383);
          i_72380 += 1;
          }
          else {
            var helper_72406 = new_seq_72336(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_72407 = c_72383.toString(16);
                  if (((code_72407 != null ? code_72407.length : 0) == 1)) {
                  if (helper_72406 != null) { helper_72406.push("%0"); } else { helper_72406 = ["%0"]; };
                  }
                  else {
                  if (helper_72406 != null) { helper_72406.push("%"); } else { helper_72406 = ["%"]; };
                  }
                  
                  if (helper_72406 != null) { helper_72406.push(code_72407); } else { helper_72406 = [code_72407]; };
                  i_72380 += 1;
                    if (((s_72304 != null ? s_72304.length : 0) <= i_72380)) Tmp5 = true; else {                      Tmp5 = (s_72304[i_72380] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_72383 = s_72304[i_72380];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_72378[j_72382] = decodeURIComponent(helper_72406.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_72378[j_72382] = helper_72406.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_72382 += 1;
        }
    } while(false);
    if (res_72378 === null) res_72378 = [];
               if (res_72378.length < j_72382) { for (var i=res_72378.length;i<j_72382;++i) res_72378.push(null); }
               else { res_72378.length = j_72382; };
    result_72305 = res_72378.join("");

  return result_72305;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function makeNimstrLit(c_72270) {
      var ln = c_72270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_72270.charCodeAt(i);
  }
  return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_73827, src_73828, ti_73829) {
  var result_74019 = null;

    switch (ti_73829.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_73801(ti_73829))) {
      result_74019 = src_73828;
      }
      else {
        result_74019 = [src_73828[0], src_73828[1]];
      }
      
      break;
    case 19:
            if (dest_73827 === null || dest_73827 === undefined) {
        dest_73827 = {};
      }
      else {
        for (var key in dest_73827) { delete dest_73827[key]; }
      }
      for (var key in src_73828) { dest_73827[key] = src_73828[key]; }
      result_74019 = dest_73827;
    
      break;
    case 18:
    case 17:
      if (!((ti_73829.base == null))) {
      result_74019 = nimCopy(dest_73827, src_73828, ti_73829.base);
      }
      else {
      if ((ti_73829.kind == 17)) {
      result_74019 = (dest_73827 === null || dest_73827 === undefined) ? {m_type: ti_73829} : dest_73827;
      }
      else {
        result_74019 = (dest_73827 === null || dest_73827 === undefined) ? {} : dest_73827;
      }
      }
      nimCopyAux(result_74019, src_73828, ti_73829.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_73828 === null) {
        result_74019 = null;
      }
      else {
        if (dest_73827 === null || dest_73827 === undefined) {
          dest_73827 = new Array(src_73828.length);
        }
        else {
          dest_73827.length = src_73828.length;
        }
        result_74019 = dest_73827;
        for (var i = 0; i < src_73828.length; ++i) {
          result_74019[i] = nimCopy(result_74019[i], src_73828[i], ti_73829.base);
        }
      }
    
      break;
    case 28:
            if (src_73828 !== null) {
        result_74019 = src_73828.slice(0);
      }
    
      break;
    default: 
      result_74019 = src_73828;
      break;
    }

  return result_74019;

}

function cstrToNimstr(c_72287) {
      var ln = c_72287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_72287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_72287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reprEnum(e_74880, typ_74881) {
  var result_74882 = null;

    if (!(is_undefined_74883(typ_74881.node.sons[e_74880]))) {
    result_74882 = nimCopy(null, makeNimstrLit(typ_74881.node.sons[e_74880].name), NTI46014);
    }
    else {
      result_74882 = nimCopy(null, (cstrToNimstr((e_74880)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI46014);
    }
    

  return result_74882;

}

function raiseException(e_70618, ename_70619) {
    e_70618.name = ename_70619;
    if ((excHandler == 0)) {
    unhandledException(e_70618);
    }
    
    throw e_70618;

  
}

function addInt(a_72803, b_72804) {
        var result = a_72803 + b_72804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
      var to_tag_210704 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];

function chckIndx(i_74105, a_74106, b_74107) {
      var Tmp1;

  var result_74108 = 0;

  BeforeRet: do {
      if (!(a_74106 <= i_74105)) Tmp1 = false; else {        Tmp1 = (i_74105 <= b_74107);      }    if (Tmp1) {
    result_74108 = i_74105;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_74105, a_74106, b_74107);
    }
    
  } while (false);

  return result_74108;

}

function subInt(a_72821, b_72822) {
        var result = a_72821 - b_72822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
      var to_event_name_210710 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function nimMin(a_73203, b_73204) {
    var Tmp1;

  var result_73205 = 0;

  BeforeRet: do {
    if ((a_73203 <= b_73204)) {
    Tmp1 = a_73203;
    }
    else {
    Tmp1 = b_73204;
    }
    
    result_73205 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_73205;

}

function mnewString(len_72478) {
        return new Array(len_72478);
  

  
}

function chckRange(i_74124, a_74125, b_74126) {
      var Tmp1;

  var result_74127 = 0;

  BeforeRet: do {
      if (!(a_74125 <= i_74124)) Tmp1 = false; else {        Tmp1 = (i_74124 <= b_74126);      }    if (Tmp1) {
    result_74127 = i_74124;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_74127;

}

function nimMax(a_73221, b_73222) {
    var Tmp1;

  var result_73223 = 0;

  BeforeRet: do {
    if ((b_73222 <= a_73221)) {
    Tmp1 = a_73221;
    }
    else {
    Tmp1 = b_73222;
    }
    
    result_73223 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_73223;

}

function addChar(x_74311, c_74312) {
    x_74311.push(c_74312);

  
}

function eqStrings(a_72656, b_72657) {
        if (a_72656 == b_72657) return true;
    if (a_72656 === null && b_72657.length == 0) return true;
    if (b_72657 === null && a_72656.length == 0) return true;
    if ((!a_72656) || (!b_72657)) return false;
    var alen = a_72656.length;
    if (alen != b_72657.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_72656[i] != b_72657[i]) return false;
    return true;
  

  
}

function reprAny(p_75386, p_75386_Idx, typ_75387) {
  var result_75388 = [null];

    var cl_75389 = [{recDepth: 0, indent: 0}];
    init_repr_closure_75162(cl_75389[0]);
    result_75388[0] = nimCopy(null, [], NTI46014);
    repr_aux_75179(result_75388, 0, p_75386, p_75386_Idx, typ_75387, cl_75389[0]);
    if (result_75388[0] != null) { result_75388[0] = (result_75388[0]).concat(makeNimstrLit("\x0A")); } else { result_75388[0] = makeNimstrLit("\x0A"); };

  return result_75388[0];

}

function modInt(a_72875, b_72876) {
        if (b_72876 == 0) raiseDivByZero();
    if (b_72876 == -1 && a_72875 == 2147483647) raiseOverflow();
    return Math.trunc(a_72875 % b_72876);
  

  
}

function nimBoolToStr(x_70045) {
  var result_70046 = null;

    if (x_70045) {
    result_70046 = nimCopy(null, makeNimstrLit("true"), NTI46014);
    }
    else {
      result_70046 = nimCopy(null, makeNimstrLit("false"), NTI46014);
    }
    

  return result_70046;

}
var nim_program_result = 0;
var global_raise_hook_64018 = [null];
var local_raise_hook_64023 = [null];
var out_of_mem_hook_64026 = [null];
var unhandled_exception_hook_64031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var gid_211495 = [0];
var object_id_215435 = [0];
var vcomponents_225026 = [{}];
var kxi_232324 = [null];
var app_inst_258014 = [null];
var current_import_type_258037 = [0];
var current_protect_type_258043 = [0];
var show_scan_seed_btn_258061 = [true];
var show_scanning_258062 = [true];
var show_cam_tools_258063 = [true];
var show_scan_result_258064 = [false];
var show_scan_seed_btn2_258065 = [true];
var show_scanning2_258066 = [true];
var show_cam_tools2_258067 = [true];
var show_scan_result2_258068 = [false];
var show_page1_258069 = [true];
var show_page2_258070 = [false];
var show_page3_258071 = [false];
var show_page4_258072 = [false];
var mnemonic_fulfill_258073 = [false];
var key_card_fulfill_258074 = [false];
var passphrase_fulfill_258075 = [false];
var supress_redraw_258076 = [false];
var show_recv_address_selector_258077 = [true];
var show_recv_address_modal_258078 = [true];
var show_trade_logs_258079 = [false];
var show_settings_258080 = [false];
var jsViewSelector = function() {}


function new_seq_72336(len_72339) {
  var result_72341 = null;

    result_72341 = new Array(len_72339); for (var i=0;i<len_72339;++i) {result_72341[i]=null;}
  return result_72341;

}

function is_undefined_74883(x_74886) {
  var result_74887 = false;

    result_74887 = x_74886 === undefined;

  return result_74887;

}

function is_fat_pointer_73801(ti_73803) {
  var result_73804 = false;

  BeforeRet: do {
    result_73804 = !((ConstSet1[ti_73803.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_73804;

}

function nimCopyAux(dest_73832, src_73833, n_73835) {
    switch (n_73835.kind) {
    case 0:
      break;
    case 1:
            dest_73832[n_73835.offset] = nimCopy(dest_73832[n_73835.offset], src_73833[n_73835.offset], n_73835.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_73835.sons.length; i++) {
      nimCopyAux(dest_73832, src_73833, n_73835.sons[i]);
    }
    
      break;
    case 3:
            dest_73832[n_73835.offset] = nimCopy(dest_73832[n_73835.offset], src_73833[n_73835.offset], n_73835.typ);
      for (var i = 0; i < n_73835.sons.length; ++i) {
        nimCopyAux(dest_73832, src_73833, n_73835.sons[i][1]);
      }
    
      break;
    }

  
}

function add_64043(x_64046, x_64046_Idx, y_64047) {
          if (x_64046[x_64046_Idx] === null) { x_64046[x_64046_Idx] = []; }
      var off = x_64046[x_64046_Idx].length;
      x_64046[x_64046_Idx].length += y_64047.length;
      for (var i = 0; i < y_64047.length; ++i) {
        x_64046[x_64046_Idx][off+i] = y_64047.charCodeAt(i);
      }
    

  
}

function unhandledException(e_70557) {
    var buf_70558 = [[]];
    if (!(((e_70557.message != null ? e_70557.message.length : 0) == 0))) {
    if (buf_70558[0] != null) { buf_70558[0] = (buf_70558[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_70558[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_70558[0] != null) { buf_70558[0] = (buf_70558[0]).concat(e_70557.message); } else { buf_70558[0] = e_70557.message.slice(); };
    }
    else {
    if (buf_70558[0] != null) { buf_70558[0] = (buf_70558[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_70558[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_70558[0] != null) { buf_70558[0] = (buf_70558[0]).concat(makeNimstrLit(" [")); } else { buf_70558[0] = makeNimstrLit(" ["); };
    add_64043(buf_70558, 0, e_70557.name);
    if (buf_70558[0] != null) { buf_70558[0] = (buf_70558[0]).concat(makeNimstrLit("]\x0A")); } else { buf_70558[0] = makeNimstrLit("]\x0A"); };
    var cbuf_70601 = toJSStr(buf_70558[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_70601);
  }
  else {
    throw cbuf_70601;
  }
  

  
}

function raiseOverflow() {
    var eHEX60gensym71058_71203 = null;
    eHEX60gensym71058_71203 = {m_type: NTI51083, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    eHEX60gensym71058_71203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI46014);
    eHEX60gensym71058_71203.parent = null;
    raiseException(eHEX60gensym71058_71203, "OverflowError");

  
}

function sys_fatal_60662(message_60666) {
    var e_60803 = null;
    e_60803 = {m_type: NTI51087, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    e_60803.message = nimCopy(null, message_60666, NTI46014);
    raiseException(e_60803, "AssertionError");

  
}

function raise_assert_60658(msg_60660) {
    sys_fatal_60662(msg_60660);

  
}

function failed_assert_impl_60866(msg_60868) {
    raise_assert_60658(msg_60868);

  
}

function raiseIndexError(i_71655, a_71656, b_71657) {
    var Tmp1;

    var eHEX60gensym71802_72003 = null;
    eHEX60gensym71802_72003 = {m_type: NTI51095, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    if ((b_71657 < a_71656)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_71655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_71656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_71657)+"") || []);
    }
    
    eHEX60gensym71802_72003.message = nimCopy(null, Tmp1, NTI46014);
    eHEX60gensym71802_72003.parent = null;
    raiseException(eHEX60gensym71802_72003, "IndexError");

  
}

function valueHEX3D_210884(n_210886, v_210887) {
    n_210886.text = v_210887;

  
}

function value_210867(n_210869) {
  var result_210870 = null;

    result_210870 = n_210869.text;

  return result_210870;

}

function wrap_event_232390(d_232392, n_232393, k_232394, action_232395) {

      function later_wrapper_232842() {

          function HEX3Aanonymous_232848(ev_232850) {

              function wrapper_232851() {
                  var vHEX60gensym232853_232854 = ev_232850.target.value;
                  valueHEX3D_210884(n_232846, vHEX60gensym232853_232854);
                  if (!(!((action_232845 == null)))) {
                  failed_assert_impl_60866(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_232845(ev_232850, n_232846);
                  if (!((value_210867(n_232846) == vHEX60gensym232853_232854))) {
                  ev_232850.target.value = value_210867(n_232846);
                  }
                  

                
              }

              if (!((timer_232847 == null))) {
              clearTimeout(timer_232847);
              }
              
              timer_232847 = setTimeout(wrapper_232851, 400);

            
          }

        var result_232844 = null;

          var action_232845 = action_232395;
          var n_232846 = n_232393;
          var timer_232847 = null;
          result_232844 = HEX3Aanonymous_232848;

        return result_232844;

      }

      function enter_wrapper_232642() {

          function HEX3Aanonymous_232647(ev_232649) {
              if ((ev_232649.keyCode == 13)) {
              var vHEX60gensym232650_232651 = ev_232649.target.value;
              valueHEX3D_210884(n_232646, vHEX60gensym232650_232651);
              if (!(!((action_232645 == null)))) {
              failed_assert_impl_60866(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_232645(ev_232649, n_232646);
              if (!((value_210867(n_232646) == vHEX60gensym232650_232651))) {
              ev_232649.target.value = value_210867(n_232646);
              }
              
              }
              

            
          }

        var result_232644 = null;

          var action_232645 = action_232395;
          var n_232646 = n_232393;
          result_232644 = HEX3Aanonymous_232647;

        return result_232644;

      }

      function std_wrapper_232397() {

          function HEX3Aanonymous_232402(ev_232404) {
                var Tmp1;
                var Tmp2;

                if ((n_232401.kind == 109)) Tmp2 = true; else {                  Tmp2 = (n_232401.kind == 103);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_232401.kind == 105);                }              if (Tmp1) {
              var vHEX60gensym232423_232424 = ev_232404.target.value;
              valueHEX3D_210884(n_232401, vHEX60gensym232423_232424);
              if (!(!((action_232400 == null)))) {
              failed_assert_impl_60866(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_232400(ev_232404, n_232401);
              if (!((value_210867(n_232401) == vHEX60gensym232423_232424))) {
              ev_232404.target.value = value_210867(n_232401);
              }
              
              }
              else {
              action_232400(ev_232404, n_232401);
              }
              

            
          }

        var result_232399 = null;

          var action_232400 = action_232395;
          var n_232401 = n_232393;
          result_232399 = HEX3Aanonymous_232402;

        return result_232399;

      }

  var result_232396 = null;

    switch (k_232394) {
    case 30:
      result_232396 = later_wrapper_232842();
      d_232392.addEventListener("keyup", result_232396, false);
      break;
    case 29:
      result_232396 = enter_wrapper_232642();
      d_232392.addEventListener("keyup", result_232396, false);
      break;
    default: 
      result_232396 = std_wrapper_232397();
      d_232392.addEventListener(to_event_name_210710[chckIndx(k_232394, 0, (to_event_name_210710 != null ? to_event_name_210710.length : 0)+0-1)-0], result_232396, false);
      break;
    }

  return result_232396;

}

function apply_events_233101(n_233103) {
    var dest_233104 = n_233103.dom;
    L1: do {
      var i_233117 = 0;
      var colontmp__258221 = 0;
      colontmp__258221 = (n_233103.events != null ? n_233103.events.length : 0);
      var i_258222 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_258222 < colontmp__258221)) break L3;
            i_233117 = i_258222;
            n_233103.events[chckIndx(i_233117, 0, (n_233103.events != null ? n_233103.events.length : 0)+0-1)-0]["Field2"] = wrap_event_232390(dest_233104, n_233103, n_233103.events[chckIndx(i_233117, 0, (n_233103.events != null ? n_233103.events.length : 0)+0-1)-0]["Field0"], n_233103.events[chckIndx(i_233117, 0, (n_233103.events != null ? n_233103.events.length : 0)+0-1)-0]["Field1"]);
            i_258222 = addInt(i_258222, 1);
          }
      } while(false);
    } while(false);

  
}

function apply_style_107025(n_107027, s_107028) {
    n_107027.style = {};
    L1: do {
      var i_107221 = 0;
      var colontmp__258232 = 0;
      colontmp__258232 = subInt(s_107028.length, 1);
      var res_258233 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_258233 <= colontmp__258232)) break L3;
            i_107221 = res_258233;
            n_107027.style[s_107028[i_107221]] = s_107028[addInt(i_107221, 1)];
            res_258233 = addInt(res_258233, 2);
          }
      } while(false);
    } while(false);

  
}

function vnode_to_dom_233182(n_233184, kxi_233185) {
      var Tmp9;
      var Tmp10;

  var result_233186 = null;

  BeforeRet: do {
    if ((n_233184.kind == 0)) {
    result_233186 = document.createTextNode(n_233184.text);
    n_233184.dom = result_233186;
    if (!((n_233184.id == null))) {
    kxi_232324[0].byId[n_233184.id] = n_233184;
    }
    
    }
    else {
    if ((n_233184.kind == 6)) {
    result_233186 = document.createElement("div");
    result_233186.innerHTML = n_233184.text;
    n_233184.dom = result_233186;
    if (!((n_233184.id == null))) {
    kxi_232324[0].byId[n_233184.id] = n_233184;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_233184.kind == 3)) {
    var x_233249 = vcomponents_225026[0][n_233184.text](n_233184.kids);
    result_233186 = vnode_to_dom_233182(x_233249, kxi_233185);
    n_233184.dom = result_233186;
    if (!((n_233184.id == null))) {
    kxi_232324[0].byId[n_233184.id] = n_233184;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_233184.kind == 4)) {
    result_233186 = n_233184.dom;
    if (!(!((result_233186 == null)))) {
    failed_assert_impl_60866(makeNimstrLit("karax.nim(154, 12) `result != nil` "));
    }
    
    n_233184.dom = result_233186;
    if (!((n_233184.id == null))) {
    kxi_232324[0].byId[n_233184.id] = n_233184;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_233184.kind == 5)) {
    var x_233422 = n_233184;
    if (!((x_233422.onAttachImpl == null))) {
    x_233422.onAttachImpl(x_233422);
    }
    
    if (!(!((x_233422.renderImpl == null)))) {
    failed_assert_impl_60866(makeNimstrLit("karax.nim(161, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_233422.expanded == null)) {
    x_233422.expanded = x_233422.renderImpl(x_233422);
    }
    
    if (!(!((x_233422.expanded == null)))) {
    failed_assert_impl_60866(makeNimstrLit("karax.nim(165, 12) `x.expanded != nil` "));
    }
    
    result_233186 = vnode_to_dom_233182(x_233422.expanded, kxi_233185);
    n_233184.dom = result_233186;
    if (!((n_233184.id == null))) {
    kxi_232324[0].byId[n_233184.id] = n_233184;
    }
    
    break BeforeRet;
    }
    else {
      result_233186 = document.createElement(to_tag_210704[chckIndx(n_233184.kind, 0, (to_tag_210704 != null ? to_tag_210704.length : 0)+0-1)-0]);
      n_233184.dom = result_233186;
      if (!((n_233184.id == null))) {
      kxi_232324[0].byId[n_233184.id] = n_233184;
      }
      
      L1: do {
        var k_233831 = null;
        L2: do {
          var i_258191 = 0;
          var colontmp__258192 = 0;
          colontmp__258192 = (n_233184.kids != null ? n_233184.kids.length : 0);
          var i_258193 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_258193 < colontmp__258192)) break L4;
                i_258191 = i_258193;
                k_233831 = n_233184.kids[chckIndx(i_258191, 0, (n_233184.kids != null ? n_233184.kids.length : 0)+0-1)-0];
                result_233186.appendChild(vnode_to_dom_233182(k_233831, kxi_233185));
                i_258193 = addInt(i_258193, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_233184.text == null))) {
      result_233186.value = n_233184.text;
      }
      
    }
    }}}}
    if (!((n_233184.id == null))) {
    result_233186.id = n_233184.id;
    }
    
    if (!((n_233184.class == null))) {
    result_233186.className = n_233184.class;
    }
    
    L5: do {
      var k_233832 = null;
      var v_233833 = null;
      L6: do {
        var i_258204 = 0;
        var colontmp__258205 = 0;
        colontmp__258205 = subInt((n_233184.attrs != null ? n_233184.attrs.length : 0), 2);
        var res_258206 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_258206 <= colontmp__258205)) break L8;
              i_258204 = res_258206;
              k_233832 = n_233184.attrs[chckIndx(i_258204, 0, (n_233184.attrs != null ? n_233184.attrs.length : 0)+0-1)-0];
              v_233833 = n_233184.attrs[chckIndx(addInt(i_258204, 1), 0, (n_233184.attrs != null ? n_233184.attrs.length : 0)+0-1)-0];
              if (!((v_233833 == null))) {
              result_233186.setAttribute(k_233832, v_233833);
              }
              
              res_258206 = addInt(res_258206, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    apply_events_233101(n_233184);
      if (!!((kxi_233185 == null))) Tmp10 = false; else {        Tmp10 = (n_233184 == kxi_233185.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_233185.toFocus == null);      }    if (Tmp9) {
    kxi_233185.toFocus = result_233186;
    }
    
    if (!((n_233184.style == null))) {
    apply_style_107025(result_233186, n_233184.style);
    }
    
  } while (false);

  return result_233186;

}

function replace_by_id_234033(id_234035, new_tree_234036) {
    var x_234037 = document.getElementById(id_234035);
    x_234037.parentNode.replaceChild(new_tree_234036, x_234037);
    new_tree_234036.id = id_234035;

  
}

function len_211713(x_211715) {
  var result_211716 = 0;

    result_211716 = (x_211715.kids != null ? x_211715.kids.length : 0);

  return result_211716;

}

function HEX5BHEX5D_211735(x_211737, idx_211738) {
  var result_211739 = null;

    result_211739 = x_211737.kids[chckIndx(idx_211738, 0, (x_211737.kids != null ? x_211737.kids.length : 0)+0-1)-0];

  return result_211739;

}

function same_233905(n_233907, e_233908, nesting_233909) {
      var Tmp1;
      var Tmp2;

  var result_233911 = false;

  BeforeRet: do {
    if (kxi_232324[0].orphans.hasOwnProperty(n_233907.id)) {
    result_233911 = true;
    break BeforeRet;
    }
    
    if ((n_233907.kind == 5)) {
    result_233911 = same_233905(n_233907.expanded, e_233908, addInt(nesting_233909, 1));
    }
    else {
    if ((n_233907.kind == 6)) {
    result_233911 = true;
    }
    else {
      if ((n_233907.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_233907.kind == 4);      }    if (Tmp1) {
    result_233911 = true;
    }
    else {
    if ((to_tag_210704[chckIndx(n_233907.kind, 0, (to_tag_210704 != null ? to_tag_210704.length : 0)+0-1)-0] == e_233908.nodeName)) {
    result_233911 = true;
    if (!((n_233907.kind == 0))) {
      if (!!((e_233908.childNodes.length == len_211713(n_233907)))) Tmp2 = false; else {        Tmp2 = !((n_233907.kind == 109));      }    if (Tmp2) {
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_211713(n_233907))+""), makeNimstrLit(" real "), cstrToNimstr((e_233908.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_210704[chckIndx(n_233907.kind, 0, (to_tag_210704 != null ? to_tag_210704.length : 0)+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_233909)+""));
    result_233911 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_233983 = 0;
      var colontmp__258239 = 0;
      colontmp__258239 = len_211713(n_233907);
      var i_258240 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_258240 < colontmp__258239)) break L5;
            i_233983 = i_258240;
            if (!(same_233905(HEX5BHEX5D_211735(n_233907, i_233983), e_233908.childNodes[i_233983], addInt(nesting_233909, 1)))) {
            result_233911 = false;
            break BeforeRet;
            }
            
            i_258240 = addInt(i_258240, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_210704[chckIndx(n_233907.kind, 0, (to_tag_210704 != null ? to_tag_210704.length : 0)+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_233908.nodeName));
    }
    }}}
  } while (false);

  return result_233911;

}

function eq_105829(a_105831, b_105832) {
  var result_105833 = false;

  BeforeRet: do {
    if ((a_105831 == null)) {
    if ((b_105832 == null)) {
    result_105833 = true;
    break BeforeRet;
    }
    else {
      result_105833 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_105832 == null)) {
    result_105833 = false;
    break BeforeRet;
    }
    }
    if (!((a_105831.length == b_105832.length))) {
    result_105833 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_105931 = 0;
      var colontmp__258275 = 0;
      colontmp__258275 = a_105831.length;
      var i_258276 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_258276 < colontmp__258275)) break L3;
            i_105931 = i_258276;
            if (!((a_105831[i_105931] == b_105832[i_105931]))) {
            result_105833 = false;
            break BeforeRet;
            }
            
            i_258276 = addInt(i_258276, 1);
          }
      } while(false);
    } while(false);
    result_105833 = true;
    break BeforeRet;
  } while (false);

  return result_105833;

}

function same_attrs_213479(a_213481, b_213482) {
  var result_213483 = false;

  BeforeRet: do {
    if (((a_213481.attrs != null ? a_213481.attrs.length : 0) == (b_213482.attrs != null ? b_213482.attrs.length : 0))) {
    result_213483 = true;
    L1: do {
      var i_213506 = 0;
      var colontmp__258279 = 0;
      colontmp__258279 = (a_213481.attrs != null ? a_213481.attrs.length : 0);
      var i_258280 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_258280 < colontmp__258279)) break L3;
            i_213506 = i_258280;
            if (!((a_213481.attrs[chckIndx(i_213506, 0, (a_213481.attrs != null ? a_213481.attrs.length : 0)+0-1)-0] == b_213482.attrs[chckIndx(i_213506, 0, (b_213482.attrs != null ? b_213482.attrs.length : 0)+0-1)-0]))) {
            result_213483 = false;
            break BeforeRet;
            }
            
            i_258280 = addInt(i_258280, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_213483;

}

function eq_234214(a_234216, b_234217) {
      var Tmp4;
      var Tmp5;

  var result_234218 = 0;

  BeforeRet: do {
    if (!((a_234216.kind == b_234217.kind))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    if (!((a_234216.id == b_234217.id))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    result_234218 = 3;
    if (!((a_234216.index == b_234217.index))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    if ((a_234216.kind == 0)) {
    if (!((a_234216.text == b_234217.text))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_234216.kind == 3)) {
    if (!((a_234216.text == b_234217.text))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    if (!((len_211713(a_234216) == len_211713(b_234217)))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_235014 = 0;
      var colontmp__258271 = 0;
      colontmp__258271 = len_211713(a_234216);
      var i_258272 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_258272 < colontmp__258271)) break L3;
            i_235014 = i_258272;
            if ((eq_234214(HEX5BHEX5D_211735(a_234216, i_235014), HEX5BHEX5D_211735(b_234217, i_235014)) == 1)) {
            result_234218 = 1;
            break BeforeRet;
            }
            
            i_258272 = addInt(i_258272, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_234216.kind == 4)) {
    result_234218 = 3;
    break BeforeRet;
    }
    else {
    if ((a_234216.kind == 6)) {
    if (!((a_234216.text == b_234217.text))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_234217.kind == 5)) {
    if (!((a_234216.text == b_234217.text))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    if (!((a_234216.key == b_234217.key))) {
    result_234218 = 1;
    break BeforeRet;
    }
    
    result_234218 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_234216.class == b_234217.class))) Tmp5 = true; else {        Tmp5 = !(eq_105829(a_234216.style, b_234217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(same_attrs_213479(a_234216, b_234217));      }    if (Tmp4) {
    result_234218 = 2;
    break BeforeRet;
    }
    
    break BeforeRet;
  } while (false);

  return result_234218;

}

function update_styles_235629(new_node_235631, old_node_235632) {
    if (!((old_node_235632.dom == null))) {
    if (!((new_node_235631.style == null))) {
    apply_style_107025(old_node_235632.dom, new_node_235631.style);
    }
    else {
      old_node_235632.dom.style = {m_type: NTI93276, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
    }
    
    old_node_235632.dom.className = new_node_235631.class;
    }
    
    old_node_235632.style = new_node_235631.style;
    old_node_235632.class = new_node_235631.class;

  
}

function take_over_attr_211675(new_node_211677, old_node_211678) {
    old_node_211678.attrs = new_node_211677.attrs;

  
}

function update_attributes_235692(new_node_235694, old_node_235695) {
    if (!((old_node_235695.dom == null))) {
    L1: do {
      var k_235704 = null;
      var __235705 = null;
      L2: do {
        var i_258285 = 0;
        var colontmp__258286 = 0;
        colontmp__258286 = subInt((old_node_235695.attrs != null ? old_node_235695.attrs.length : 0), 2);
        var res_258287 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_258287 <= colontmp__258286)) break L4;
              i_258285 = res_258287;
              k_235704 = old_node_235695.attrs[chckIndx(i_258285, 0, (old_node_235695.attrs != null ? old_node_235695.attrs.length : 0)+0-1)-0];
              __235705 = old_node_235695.attrs[chckIndx(addInt(i_258285, 1), 0, (old_node_235695.attrs != null ? old_node_235695.attrs.length : 0)+0-1)-0];
              old_node_235695.dom.removeAttribute(k_235704);
              res_258287 = addInt(res_258287, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_235706 = null;
      var v_235707 = null;
      L6: do {
        var i_258293 = 0;
        var colontmp__258294 = 0;
        colontmp__258294 = subInt((new_node_235694.attrs != null ? new_node_235694.attrs.length : 0), 2);
        var res_258295 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_258295 <= colontmp__258294)) break L8;
              i_258293 = res_258295;
              k_235706 = new_node_235694.attrs[chckIndx(i_258293, 0, (new_node_235694.attrs != null ? new_node_235694.attrs.length : 0)+0-1)-0];
              v_235707 = new_node_235694.attrs[chckIndx(addInt(i_258293, 1), 0, (new_node_235694.attrs != null ? new_node_235694.attrs.length : 0)+0-1)-0];
              if (!((v_235707 == null))) {
              old_node_235695.dom.setAttribute(k_235706, v_235707);
              }
              
              res_258295 = addInt(res_258295, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    take_over_attr_211675(new_node_235694, old_node_235695);

  
}

function merge_events_235721(new_node_235723, old_node_235724, kxi_235725) {
            var Tmp4;

    var d_235726 = old_node_235724.dom;
    L1: do {
      var i_235739 = 0;
      var colontmp__258300 = 0;
      colontmp__258300 = (old_node_235724.events != null ? old_node_235724.events.length : 0);
      var i_258301 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_258301 < colontmp__258300)) break L3;
            i_235739 = i_258301;
            var k_235740 = old_node_235724.events[chckIndx(i_235739, 0, (old_node_235724.events != null ? old_node_235724.events.length : 0)+0-1)-0]["Field0"];
            switch (k_235740) {
            case 30:
            case 29:
              Tmp4 = "keyup";
              break;
            default: 
              Tmp4 = to_event_name_210710[chckIndx(k_235740, 0, (to_event_name_210710 != null ? to_event_name_210710.length : 0)+0-1)-0];
              break;
            }
            var name_235743 = Tmp4;
            d_235726.removeEventListener(name_235743, old_node_235724.events[chckIndx(i_235739, 0, (old_node_235724.events != null ? old_node_235724.events.length : 0)+0-1)-0]["Field2"]);
            i_258301 = addInt(i_258301, 1);
          }
      } while(false);
    } while(false);
    old_node_235724.events = new_node_235723.events;
    apply_events_233101(old_node_235724);

  
}

function HEX5BHEX5DHEX3D_211753(x_211755, idx_211756, y_211757) {
    x_211755.kids[chckIndx(idx_211756, 0, (x_211755.kids != null ? x_211755.kids.length : 0)+0-1)-0] = y_211757;

  
}

function add_patch_v_235883(kxi_235885, parent_235886, pos_235887, new_child_235888) {
    var l_235889 = kxi_235885.patchLenV;
    if (((kxi_235885.patchesV != null ? kxi_235885.patchesV.length : 0) <= l_235889)) {
    if (kxi_235885.patchesV != null) { kxi_235885.patchesV.push({parent: parent_235886, newChild: new_child_235888, pos: pos_235887}); } else { kxi_235885.patchesV = [{parent: parent_235886, newChild: new_child_235888, pos: pos_235887}]; };
    }
    else {
      kxi_235885.patchesV[chckIndx(l_235889, 0, (kxi_235885.patchesV != null ? kxi_235885.patchesV.length : 0)+0-1)-0].parent = parent_235886;
      kxi_235885.patchesV[chckIndx(l_235889, 0, (kxi_235885.patchesV != null ? kxi_235885.patchesV.length : 0)+0-1)-0].newChild = new_child_235888;
      kxi_235885.patchesV[chckIndx(l_235889, 0, (kxi_235885.patchesV != null ? kxi_235885.patchesV.length : 0)+0-1)-0].pos = pos_235887;
    }
    
    kxi_235885.patchLenV = addInt(kxi_235885.patchLenV, 1);

  
}

function add_patch_235814(kxi_235816, ka_235817, parenta_235818, currenta_235819, na_235820) {
    var l_235821 = kxi_235816.patchLen;
    if (((kxi_235816.patches != null ? kxi_235816.patches.length : 0) <= l_235821)) {
    if (kxi_235816.patches != null) { kxi_235816.patches.push({k: ka_235817, parent: parenta_235818, current: currenta_235819, n: na_235820}); } else { kxi_235816.patches = [{k: ka_235817, parent: parenta_235818, current: currenta_235819, n: na_235820}]; };
    }
    else {
      kxi_235816.patches[chckIndx(l_235821, 0, (kxi_235816.patches != null ? kxi_235816.patches.length : 0)+0-1)-0].k = ka_235817;
      kxi_235816.patches[chckIndx(l_235821, 0, (kxi_235816.patches != null ? kxi_235816.patches.length : 0)+0-1)-0].parent = parenta_235818;
      kxi_235816.patches[chckIndx(l_235821, 0, (kxi_235816.patches != null ? kxi_235816.patches.length : 0)+0-1)-0].current = currenta_235819;
      kxi_235816.patches[chckIndx(l_235821, 0, (kxi_235816.patches != null ? kxi_235816.patches.length : 0)+0-1)-0].n = na_235820;
    }
    
    kxi_235816.patchLen = addInt(kxi_235816.patchLen, 1);

  
}

function diff_236215(new_node_236217, old_node_236218, parent_236219, current_236220, kxi_236221) {
        var Tmp1;
      var Tmp2;
      var Tmp3;
            var Tmp6;
            var Tmp9;
            var Tmp10;

  var result_236222 = 0;

  BeforeRet: do {
    result_236222 = eq_234214(new_node_236217, old_node_236218);
    switch (result_236222) {
    case 0:
      if (kxi_236221.components != null) { kxi_236221.components.push({oldNode: old_node_236218, newNode: new_node_236217, parent: parent_236219, current: current_236220}); } else { kxi_236221.components = [{oldNode: old_node_236218, newNode: new_node_236217, parent: parent_236219, current: current_236220}]; };
      break;
    case 3:
    case 2:
      new_node_236217.dom = old_node_236218.dom;
      if ((result_236222 == 2)) {
      update_styles_235629(new_node_236217, old_node_236218);
      update_attributes_235692(new_node_236217, old_node_236218);
      if ((old_node_236218.kind == 0)) {
      old_node_236218.text = new_node_236217.text;
      old_node_236218.dom.nodeValue = new_node_236217.text;
      }
      
      }
      
        if (!(((new_node_236217.events != null ? new_node_236217.events.length : 0) == 0))) Tmp1 = true; else {          Tmp1 = !(((old_node_236218.events != null ? old_node_236218.events.length : 0) == 0));        }      if (Tmp1) {
      merge_events_235721(new_node_236217, old_node_236218, kxi_236221);
      }
      
      var new_length_236601 = len_211713(new_node_236217);
      var old_length_236602 = len_211713(old_node_236218);
      if (((new_length_236601 == 0) && (old_length_236602 == 0))) {
      break BeforeRet;
      }
      
      var min_length_236603 = nimMin(new_length_236601, old_length_236602);
      if (!((old_node_236218.kind == new_node_236217.kind))) {
      failed_assert_impl_60866(makeNimstrLit("karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var common_prefix_236802 = 0;
      if ((old_node_236218.kind == 5)) Tmp3 = true; else {        Tmp3 = (old_node_236218.kind == 3);      }      if (Tmp3) Tmp2 = true; else {        Tmp2 = (old_node_236218.kind == 4);      }      var is_special_236821 = Tmp2;
      L4: do {
          L5: while (true) {
          if (!(common_prefix_236802 < min_length_236603)) break L5;
            var old_lenHEX60gensym236845_236848 = kxi_236221.patchLen;
            var old_len_vHEX60gensym236846_236849 = kxi_236221.patchLenV;
            if (!((common_prefix_236802 < len_211713(new_node_236217)))) {
            failed_assert_impl_60866(makeNimstrLit("karax.nim(427, 14) `commonPrefix < newNode.len` "));
            }
            
            if (!((common_prefix_236802 < len_211713(old_node_236218)))) {
            failed_assert_impl_60866(makeNimstrLit("karax.nim(428, 14) `commonPrefix < oldNode.len` "));
            }
            
            if (is_special_236821) {
            Tmp6 = diff_236215(HEX5BHEX5D_211735(new_node_236217, common_prefix_236802), HEX5BHEX5D_211735(old_node_236218, common_prefix_236802), parent_236219, current_236220, kxi_236221);
            }
            else {
            Tmp6 = diff_236215(HEX5BHEX5D_211735(new_node_236217, common_prefix_236802), HEX5BHEX5D_211735(old_node_236218, common_prefix_236802), current_236220, current_236220.childNodes[chckIndx(common_prefix_236802, 0, (current_236220.childNodes != null ? current_236220.childNodes.length : 0)+0-1)-0], kxi_236221);
            }
            
            var rHEX60gensym236847_237205 = Tmp6;
            switch (rHEX60gensym236847_237205) {
            case 3:
            case 0:
            case 2:
              HEX5BHEX5DHEX3D_211753(new_node_236217, common_prefix_236802, HEX5BHEX5D_211735(old_node_236218, common_prefix_236802));
              common_prefix_236802 = addInt(common_prefix_236802, 1);
              break;
            case 4:
              add_patch_v_235883(kxi_236221, old_node_236218, common_prefix_236802, HEX5BHEX5D_211735(new_node_236217, common_prefix_236802));
              common_prefix_236802 = addInt(common_prefix_236802, 1);
              result_236222 = 4;
              break;
            case 1:
              kxi_236221.patchLen = old_lenHEX60gensym236845_236848;
              kxi_236221.patchLenV = old_len_vHEX60gensym236846_236849;
              if (!((result_236222 == 1))) {
              result_236222 = rHEX60gensym236847_237205;
              }
              
              break L4;
              break;
            }
          }
      } while(false);
      var old_pos_237223 = subInt(old_length_236602, 1);
      var new_pos_237224 = subInt(new_length_236601, 1);
      L7: do {
          L8: while (true) {
            if (!(common_prefix_236802 <= old_pos_237223)) Tmp9 = false; else {              Tmp9 = (common_prefix_236802 <= new_pos_237224);            }          if (!Tmp9) break L8;
            var old_lenHEX60gensym237225_237228 = kxi_236221.patchLen;
            var old_len_vHEX60gensym237226_237229 = kxi_236221.patchLenV;
            if (!((new_pos_237224 < len_211713(new_node_236217)))) {
            failed_assert_impl_60866(makeNimstrLit("karax.nim(427, 14) `newPos < newNode.len` "));
            }
            
            if (!((old_pos_237223 < len_211713(old_node_236218)))) {
            failed_assert_impl_60866(makeNimstrLit("karax.nim(428, 14) `oldPos < oldNode.len` "));
            }
            
            if (is_special_236821) {
            Tmp10 = diff_236215(HEX5BHEX5D_211735(new_node_236217, new_pos_237224), HEX5BHEX5D_211735(old_node_236218, old_pos_237223), parent_236219, current_236220, kxi_236221);
            }
            else {
            Tmp10 = diff_236215(HEX5BHEX5D_211735(new_node_236217, new_pos_237224), HEX5BHEX5D_211735(old_node_236218, old_pos_237223), current_236220, current_236220.childNodes[chckIndx(old_pos_237223, 0, (current_236220.childNodes != null ? current_236220.childNodes.length : 0)+0-1)-0], kxi_236221);
            }
            
            var rHEX60gensym237227_237605 = Tmp10;
            switch (rHEX60gensym237227_237605) {
            case 3:
            case 0:
            case 2:
              HEX5BHEX5DHEX3D_211753(new_node_236217, new_pos_237224, HEX5BHEX5D_211735(old_node_236218, old_pos_237223));
              old_pos_237223 = subInt(old_pos_237223, 1);
              new_pos_237224 = subInt(new_pos_237224, 1);
              break;
            case 4:
              add_patch_v_235883(kxi_236221, old_node_236218, old_pos_237223, HEX5BHEX5D_211735(new_node_236217, new_pos_237224));
              old_pos_237223 = subInt(old_pos_237223, 1);
              new_pos_237224 = subInt(new_pos_237224, 1);
              result_236222 = 4;
              break;
            case 1:
              kxi_236221.patchLen = old_lenHEX60gensym237225_237228;
              kxi_236221.patchLenV = old_len_vHEX60gensym237226_237229;
              if (!((result_236222 == 1))) {
              result_236222 = rHEX60gensym237227_237605;
              }
              
              break L7;
              break;
            }
          }
      } while(false);
      var pos_237635 = addInt(nimMin(old_pos_237223, new_pos_237224), 1);
      L11: do {
        var i_237641 = 0;
        var colontmp__258246 = 0;
        colontmp__258246 = subInt(pos_237635, 1);
        var res_258247 = common_prefix_236802;
        L12: do {
            L13: while (true) {
            if (!(res_258247 <= colontmp__258246)) break L13;
              i_237641 = res_258247;
              var r_237642 = diff_236215(HEX5BHEX5D_211735(new_node_236217, i_237641), HEX5BHEX5D_211735(old_node_236218, i_237641), current_236220, current_236220.childNodes[chckIndx(i_237641, 0, (current_236220.childNodes != null ? current_236220.childNodes.length : 0)+0-1)-0], kxi_236221);
              if ((r_237642 == 4)) {
              add_patch_v_235883(kxi_236221, old_node_236218, i_237641, HEX5BHEX5D_211735(new_node_236217, i_237641));
              }
              else {
              if (!((r_237642 == 1))) {
              HEX5BHEX5DHEX3D_211753(new_node_236217, i_237641, HEX5BHEX5D_211735(old_node_236218, i_237641));
              }
              }
              res_258247 = addInt(res_258247, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(old_pos_237223, 1) == old_length_236602)) {
      L14: do {
        var i_237658 = 0;
        var res_258253 = pos_237635;
        L15: do {
            L16: while (true) {
            if (!(res_258253 <= new_pos_237224)) break L16;
              i_237658 = res_258253;
              add_patch_235814(kxi_236221, 2, current_236220, null, HEX5BHEX5D_211735(new_node_236217, i_237658));
              result_236222 = 4;
              res_258253 = addInt(res_258253, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_237659 = current_236220.childNodes[chckIndx(addInt(old_pos_237223, 1), 0, (current_236220.childNodes != null ? current_236220.childNodes.length : 0)+0-1)-0];
        L17: do {
          var i_237665 = 0;
          var res_258259 = pos_237635;
          L18: do {
              L19: while (true) {
              if (!(res_258259 <= new_pos_237224)) break L19;
                i_237665 = res_258259;
                add_patch_235814(kxi_236221, 3, current_236220, before_237659, HEX5BHEX5D_211735(new_node_236217, i_237665));
                result_236222 = 4;
                res_258259 = addInt(res_258259, 1);
              }
          } while(false);
        } while(false);
      }
      
      L20: do {
        var i_237671 = 0;
        var res_258265 = pos_237635;
        L21: do {
            L22: while (true) {
            if (!(res_258265 <= old_pos_237223)) break L22;
              i_237671 = res_258265;
              add_patch_235814(kxi_232324[0], 4, null, null, HEX5BHEX5D_211735(old_node_236218, i_237671));
              add_patch_235814(kxi_236221, 1, current_236220, current_236220.childNodes[chckIndx(i_237671, 0, (current_236220.childNodes != null ? current_236220.childNodes.length : 0)+0-1)-0], null);
              result_236222 = 4;
              res_258265 = addInt(res_258265, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      add_patch_235814(kxi_232324[0], 4, null, null, old_node_236218);
      add_patch_235814(kxi_236221, 0, parent_236219, current_236220, new_node_236217);
      break;
    case 4:
      if (true) {
      failed_assert_impl_60866(makeNimstrLit("karax.nim(491, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  return result_236222;

}

function apply_components_238029(kxi_238031) {
            var Tmp3;

    var i_238033 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_238033 < (kxi_238031.components != null ? kxi_238031.components.length : 0))) break L2;
          var x_238039 = kxi_238031.components[chckIndx(i_238033, 0, (kxi_238031.components != null ? kxi_238031.components.length : 0)+0-1)-0].oldNode;
          var new_node_238040 = kxi_238031.components[chckIndx(i_238033, 0, (kxi_238031.components != null ? kxi_238031.components.length : 0)+0-1)-0].newNode;
            if (!!((x_238039.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_238039.changedImpl(x_238039, new_node_238040);            }          if (Tmp3) {
          var current_238401 = kxi_238031.components[chckIndx(i_238033, 0, (kxi_238031.components != null ? kxi_238031.components.length : 0)+0-1)-0].current;
          var parent_238402 = kxi_238031.components[chckIndx(i_238033, 0, (kxi_238031.components != null ? kxi_238031.components.length : 0)+0-1)-0].parent;
          x_238039.updatedImpl(x_238039, new_node_238040);
          var old_expanded_238403 = x_238039.expanded;
          x_238039.expanded = x_238039.renderImpl(x_238039);
          x_238039.renderedVersion = x_238039.version;
          if ((old_expanded_238403 == null)) {
          add_patch_235814(kxi_232324[0], 4, null, null, x_238039);
          add_patch_235814(kxi_238031, 0, parent_238402, current_238401, x_238039.expanded);
          }
          else {
            var res_238801 = diff_236215(x_238039.expanded, old_expanded_238403, parent_238402, current_238401, kxi_238031);
            if ((res_238801 == 4)) {
            }
            else {
            if (!((res_238801 == 1))) {
            x_238039.expanded = old_expanded_238403;
            if (!(!((old_expanded_238403.dom == null)))) {
            failed_assert_impl_60866(makeNimstrLit("karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
            }
            
            }
            else {
              if (!(!((x_238039.expanded.dom == null)))) {
              failed_assert_impl_60866(makeNimstrLit("karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
              }
              
            }
            }
          }
          
          }
          
          i_238033 = addInt(i_238033, 1);
        }
    } while(false);
    if (kxi_238031.components === null) kxi_238031.components = [];
               if (kxi_238031.components.length < 0) { for (var i=kxi_238031.components.length;i<0;++i) kxi_238031.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_238031.components.length = 0; };

  
}

function apply_patch_235936(kxi_235938) {
    L1: do {
      var i_235946 = 0;
      var colontmp__258307 = 0;
      colontmp__258307 = kxi_235938.patchLen;
      var i_258308 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_258308 < colontmp__258307)) break L3;
            i_235946 = i_258308;
            var p_235947 = nimCopy(null, kxi_235938.patches[chckIndx(i_235946, 0, (kxi_235938.patches != null ? kxi_235938.patches.length : 0)+0-1)-0], NTI232209);
            switch (p_235947.k) {
            case 0:
              var nn_235948 = vnode_to_dom_233182(p_235947.n, kxi_235938);
              if ((p_235947.parent == null)) {
              replace_by_id_234033(kxi_235938.rootId, nn_235948);
              }
              else {
              p_235947.parent.replaceChild(nn_235948, p_235947.current);
              }
              
              break;
            case 1:
              p_235947.parent.removeChild(p_235947.current);
              break;
            case 2:
              var nn_235957 = vnode_to_dom_233182(p_235947.n, kxi_235938);
              p_235947.parent.appendChild(nn_235957);
              break;
            case 3:
              var nn_235958 = vnode_to_dom_233182(p_235947.n, kxi_235938);
              p_235947.parent.insertBefore(nn_235958, p_235947.current);
              break;
            case 4:
              var n_235959 = p_235947.n;
              if (!((n_235959.id == null))) {
              delete kxi_235938.byId[n_235959.id];
              }
              
              if ((n_235959.kind == 5)) {
              var x_235977 = n_235959;
              if (!((x_235977.onDetachImpl == null))) {
              x_235977.onDetachImpl(x_235977);
              }
              
              }
              
              if (!(kxi_235938.surpressRedraws)) {
              n_235959.dom = null;
              }
              
              break;
            }
            i_258308 = addInt(i_258308, 1);
          }
      } while(false);
    } while(false);
    kxi_235938.patchLen = 0;
    L4: do {
      var i_235990 = 0;
      var colontmp__258311 = 0;
      colontmp__258311 = kxi_235938.patchLenV;
      var i_258312 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_258312 < colontmp__258311)) break L6;
            i_235990 = i_258312;
            var p_235991 = nimCopy(null, kxi_235938.patchesV[chckIndx(i_235990, 0, (kxi_235938.patchesV != null ? kxi_235938.patchesV.length : 0)+0-1)-0], NTI232211);
            HEX5BHEX5DHEX3D_211753(p_235991.parent, p_235991.pos, p_235991.newChild);
            if (!(!((p_235991.newChild.dom == null)))) {
            failed_assert_impl_60866(makeNimstrLit("karax.nim(377, 12) `p.newChild.dom != nil` "));
            }
            
            i_258312 = addInt(i_258312, 1);
          }
      } while(false);
    } while(false);
    kxi_235938.patchLenV = 0;

  
}

function dodraw_240846(kxi_240848) {
  BeforeRet: do {
    if ((kxi_240848.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_240853 = {hashPart: window.location.hash};
    var newtree_240854 = kxi_240848.renderer(rdata_240853);
    kxi_240848.runCount = addInt(kxi_240848.runCount, 1);
    newtree_240854.id = kxi_240848.rootId;
    kxi_240848.toFocus = null;
    if ((kxi_240848.currentTree == null)) {
    var asdom_240869 = vnode_to_dom_233182(newtree_240854, kxi_240848);
    replace_by_id_234033(kxi_240848.rootId, asdom_240869);
    }
    else {
      if (!(same_233905(kxi_240848.currentTree, document.getElementById(kxi_240848.rootId), 0))) {
      failed_assert_impl_60866(makeNimstrLit("karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_241001 = document.getElementById(kxi_240848.rootId);
      diff_236215(newtree_240854, kxi_240848.currentTree, null, olddom_241001, kxi_240848);
    }
    
    apply_components_238029(kxi_240848);
    apply_patch_235936(kxi_240848);
    kxi_240848.currentTree = newtree_240854;
    if (!(same_233905(kxi_240848.currentTree, document.getElementById(kxi_240848.rootId), 0))) {
    failed_assert_impl_60866(makeNimstrLit("karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_240848.postRenderCallback == null))) {
    kxi_240848.postRenderCallback(rdata_240853);
    }
    
    if (!((kxi_240848.toFocus == null))) {
    kxi_240848.toFocus.focus();
    }
    
    kxi_240848.renderId = 0;
  } while (false);

  
}

function redraw_242014(kxi_242016) {

    function HEX3Aanonymous_242201() {
        dodraw_240846(kxi_242016);

      
    }

    if ((kxi_242016.renderId == 0)) {
    kxi_242016.renderId = window.requestAnimationFrame(HEX3Aanonymous_242201);
    }
    

  
}

function view_selector_258124(view_258126, no_redraw_258127) {
    rawEcho(makeNimstrLit("view"), reprEnum(view_258126, NTI258045));
    switch (view_258126) {
    case 0:
      show_scan_seed_btn_258061[0] = true;
      show_scanning_258062[0] = true;
      show_cam_tools_258063[0] = true;
      show_scan_result_258064[0] = false;
      show_page2_258070[0] = false;
      break;
    case 1:
      show_scan_seed_btn_258061[0] = true;
      show_scanning_258062[0] = true;
      show_cam_tools_258063[0] = true;
      show_scan_result_258064[0] = false;
      show_page2_258070[0] = false;
      break;
    case 2:
      show_scan_seed_btn_258061[0] = false;
      show_scanning_258062[0] = true;
      show_cam_tools_258063[0] = true;
      show_scan_result_258064[0] = true;
      show_page2_258070[0] = true;
      break;
    case 3:
      show_page2_258070[0] = false;
      break;
    case 4:
      show_page2_258070[0] = true;
      break;
    case 5:
      show_scan_result_258064[0] = false;
      mnemonic_fulfill_258073[0] = false;
      show_scan_seed_btn2_258065[0] = true;
      show_scanning2_258066[0] = true;
      show_cam_tools2_258067[0] = true;
      show_scan_result2_258068[0] = false;
      show_page1_258069[0] = false;
      show_page2_258070[0] = true;
      break;
    case 8:
      show_scan_seed_btn2_258065[0] = false;
      show_scanning2_258066[0] = true;
      show_cam_tools2_258067[0] = true;
      show_scan_result2_258068[0] = true;
      show_page3_258071[0] = false;
      break;
    case 9:
      show_page3_258071[0] = true;
      break;
    case 11:
      show_page3_258071[0] = true;
      break;
    case 12:
      show_scan_result2_258068[0] = false;
      key_card_fulfill_258074[0] = false;
      passphrase_fulfill_258075[0] = false;
      show_page1_258069[0] = false;
      show_page2_258070[0] = false;
      show_page3_258071[0] = true;
      show_page4_258072[0] = false;
      break;
    case 13:
      show_page1_258069[0] = false;
      show_page2_258070[0] = false;
      show_page3_258071[0] = true;
      show_page4_258072[0] = true;
      show_settings_258080[0] = false;
      show_trade_logs_258079[0] = true;
      break;
    case 14:
      show_page1_258069[0] = false;
      show_page2_258070[0] = false;
      show_page3_258071[0] = true;
      show_page4_258072[0] = true;
      show_trade_logs_258079[0] = false;
      show_settings_258080[0] = true;
      break;
    default: 
      break;
    }
    if (!(no_redraw_258127)) {
    redraw_242014(app_inst_258014[0]);
    }
    

  
}
  jsViewSelector = view_selector_258124;
  function setSupressRedraw(flag) {
    supress_redraw_258076[0] = flag;
  }
  function getSupressRedraw() {
    return supress_redraw_258076[0];
  }


function HEX3Aanonymous_258502(x_258504) {
  var result_258505 = null;

    result_258505 = x_258504;

  return result_258505;

}

function HEX3Aanonymous_258551(x_258553) {
  var result_258554 = null;

    result_258554 = x_258553;

  return result_258554;

}
var seed_card_infos_258438 = [null];
var editing_words_258439 = [""];
var input_words_258440 = [""];
var autocomplete_words_258457 = [[]];
var chklist_258465 = [null];
var prev_check_word_258466 = [""];
var pass_phrase_258467 = [""];
var bip39_258479 = [coinlibs.bip39];
var bip39_wordlist_258490 = [bip39_258479[0].wordlists.japanese];
var wl_japanese_258539 = [nimCopy(null, bip39_258479[0].wordlists.japanese.map((HEX3Aanonymous_258502)), NTI258491)];
var wl_english_258584 = [nimCopy(null, bip39_258479[0].wordlists.english.map((HEX3Aanonymous_258551)), NTI258540)];
var wl_select_258585 = [nimCopy(null, wl_japanese_258539[0], NTI258491)];
var wl_select_id_258587 = [1];

function seed_to_keys_259261() {
        var wallet = pastel.wallet;
  
    if ((current_import_type_258037[0] == 0)) {
          wallet.setSeedCard(seed_card_infos_258438[0]);
    
    }
    else {
    if ((current_import_type_258037[0] == 1)) {
          wallet.setMnemonic(input_words_258440[0], wl_select_id_258587[0]);
    
    }
    }

  
}

function clear_sensitive_258635() {
    seed_card_infos_258438[0] = nimCopy(null, [], NTI258651);
    editing_words_258439[0] = "";
    input_words_258440[0] = "";
    autocomplete_words_258457[0] = nimCopy(null, [], NTI258666);
    chklist_258465[0] = nimCopy(null, [], NTI258681);
    prev_check_word_258466[0] = "";
    pass_phrase_258467[0] = "";

  
}
  jsSeedToKeys = seed_to_keys_259261;
  jsClearSensitive = clear_sensitive_258635;

var key_card_val_259835 = [""];
// https://github.com/gustf/js-levenshtein
var levenshtein = (function()
{
  function _min(d0, d1, d2, bx, ay)
  {
    return d0 < d1 || d2 < d1
        ? d0 > d2
            ? d2 + 1
            : d0 + 1
        : bx === ay
            ? d1
            : d1 + 1;
  }

  return function(a, b)
  {
    if (a === b) {
      return 0;
    }

    if (a.length > b.length) {
      var tmp = a;
      a = b;
      b = tmp;
    }

    var la = a.length;
    var lb = b.length;

    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {
      la--;
      lb--;
    }

    var offset = 0;

    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {
      offset++;
    }

    la -= offset;
    lb -= offset;

    if (la === 0 || lb < 3) {
      return lb;
    }

    var x = 0;
    var y;
    var d0;
    var d1;
    var d2;
    var d3;
    var dd;
    var dy;
    var ay;
    var bx0;
    var bx1;
    var bx2;
    var bx3;

    var vector = [];

    for (y = 0; y < la; y++) {
      vector.push(y + 1);
      vector.push(a.charCodeAt(offset + y));
    }

    var len = vector.length - 1;

    for (; x < lb - 3;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      bx1 = b.charCodeAt(offset + (d1 = x + 1));
      bx2 = b.charCodeAt(offset + (d2 = x + 2));
      bx3 = b.charCodeAt(offset + (d3 = x + 3));
      dd = (x += 4);
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        ay = vector[y + 1];
        d0 = _min(dy, d0, d1, bx0, ay);
        d1 = _min(d0, d1, d2, bx1, ay);
        d2 = _min(d1, d2, d3, bx2, ay);
        dd = _min(d2, d3, dd, bx3, ay);
        vector[y] = dd;
        d3 = d2;
        d2 = d1;
        d1 = d0;
        d0 = dy;
      }
    }

    for (; x < lb;) {
      bx0 = b.charCodeAt(offset + (d0 = x));
      dd = ++x;
      for (y = 0; y < len; y += 2) {
        dy = vector[y];
        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);
        d0 = dy;
      }
    }

    return dd;
  };
})();

function levens(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var similars = [];
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    similars.push(data[score]);
    if(result.length > 0 && score > 0.5) {
      break;
    }
    if((result.length == 0 && data[score].length <= 30) || (result.length + data[score].length) <= 7) {
      result = result.concat(data[score]);
    }
  }
  return result;
}
function levens_one(word, wordlist) {
  if(word.length == 0) {
    return;
  }
  var data = {}
  for(var i in wordlist) {
    var wl = wordlist[i];
    var maxlen = Math.max(word.length, wl.length);
    var lev = levenshtein(word, wl);
    if(lev != 1) {
      continue;
    }
    var score = lev / maxlen;
    if(data[score]) {
      data[score].push(wl);
    } else {
      data[score] = [wl];
    }
  }
  var result = [];
  var svals = Object.keys(data).sort();
  for(var i in svals) {
    var score = svals[i];
    result = result.concat(data[score]);
  }
  return result;
}

var confirm_mnemonic_advanced_260300 = [false];
  var send_ball_count = 0;
  function initSendForm() {
    $('#btn-send-clear').off('click').click(function() {
      $('#send-coins input[name="address"]').val('');
      $('#send-coins input[name="amount"]').val('');
      uriOptions = [];
      jsViewSelector(12);
      $(this).blur();
    });
    $('#btn-send-qrcode').off('click').click(function() {
      qrReaderModal.show(function(uri) {
        var data = bip21reader(uri);
        $('#send-coins input[name="address"]').val(data.address || '');
        $('#send-coins input[name="amount"]').val(data.amount || '');
        uriOptions = [];
        for(var k in data) {
          var p = data[k];
          if(k == 'address' || k == 'amount') {
            continue;
          }
          var key = crlftab_to_html(k);
          key = key.charAt(0).toUpperCase() + key.slice(1);
          uriOptions.push({key: key, value: crlftab_to_html(p)});
        }
        jsViewSelector(12);
      });
      $(this).blur();
    });
    $('#btn-send-lock').off('click').click(function() {
      var elm = $(this);
      var icon = elm.find('i');
      if(icon.hasClass('open')) {
        if(pastel.wallet && pastel.wallet.lockShieldedKeys()) {
          icon.removeClass('open');
          elm.attr('title', 'Locked');
          PhraseLock.notify_locked();
        }
      } else {
        Notify.hide_all();
        PhraseLock.showPhraseInput(function(status) {
          if(status == PhraseLock.PLOCK_SUCCESS) {
            icon.addClass('open');
            elm.attr('title', 'Unlocked');
            PhraseLock.notify_unlocked();
          } else if(status == PhraseLock.PLOCK_FAILED_QR) {
            Notify.show("Error", "Failed to unlock. Wrong key card was scanned.", Notify.msgtype.error);
          } else if(status == PhraseLock.PLOCK_FAILED_PHRASE) {
            Notify.show("Error", "Failed to unlock. Passphrase is incorrect.", Notify.msgtype.error);
          }
        });
      }
      elm.blur();
    });
    send_ball_count = pastel.utxoballs.setsend(send_ball_count);
    $('#btn-utxo-plus').off('click').click(function() {
      send_ball_count++;
      if(send_ball_count >= 1000) {
        send_ball_count = 999;
      }
      send_ball_count = pastel.utxoballs.setsend(send_ball_count);
      $('#btn-utxo-count').text(String(send_ball_count) + ' ≤max');
      $(this).blur();
    });
    $('#btn-utxo-minus').off('click').click(function() {
      send_ball_count--;
      if(send_ball_count < 0) {
        send_ball_count = 0;
      }
      send_ball_count = pastel.utxoballs.setsend(send_ball_count);
      $('#btn-utxo-count').text(String(send_ball_count) + ' ≤max');
      $(this).blur();
    });
    $('#btn-tx-send').off('click').click(function() {
      var locked = PhraseLock.notify_if_need_unlock();
      if(!locked && pastel.wallet) {
        var address = String($('#send-coins input[name="address"]').val()).trim();
        var amount = String($('#send-coins input[name="amount"]').val()).trim();
        if(address.length == 0 || amount.length == 0) {
          return;
        }
        amount = amount.replace(/,/g, '');
        var amounts = amount.split('.');
        if(amount.match(/^\d+(\.\d{1,8})?$/)) {
          if(amounts.length == 1) {
            value = amounts[0] + '00000000';
          } else if(amounts.length == 2) {
            value = amounts[0] + (amounts[1] + '00000000').slice(0, 8);
          }
          Notify.hide_all();
          pastel.wallet.send(address, value, function(result) {
            console.log('send result', result);
            var ErrSend = pastel.wallet.ERR_SEND;
            switch(result.err) {
            case ErrSend.SUCCESS:
              Notify.show('', 'Coins sent successfully.', Notify.msgtype.info);
              break;
            case ErrSend.FAILED:
              Notify.show('Error', 'Failed to send coins.', Notify.msgtype.error);
              break;
            case ErrSend.INVALID_ADDRESS:
              Notify.show('Error', 'Address is invalid.', Notify.msgtype.error);
              break;
            case ErrSend.DUST_VALUE:
              Notify.show('Error', 'Amount is too small.', Notify.msgtype.error);
              break;
            case ErrSend.BUSY:
              Notify.show('Error', 'Failed to send coins. Busy.', Notify.msgtype.error);
              break;
            case ErrSend.TX_FAILED:
              var msg = '';
              if(result.res && result.res.message) {
                msg = '<br> [' + result.res.message + ']';
              }
              Notify.show('Error', 'Failed to send coins.' + msg, Notify.msgtype.error);
              break;
            case ErrSend.TX_TIMEOUT:
              Notify.show('Error', 'Server is not responding. Coins may have been sent.', Notify.msgtype.warning);
              break;
            case ErrSend.SERVER_ERROR:
              Notify.show('Error', 'Failed to send coins. Server error.', Notify.msgtype.error);
              break;
            case ErrSend.SERVER_TIMEOUT:
              Notify.show('Error', 'Failed to send coins. Server is not responding.', Notify.msgtype.error);
              break;
            default:
              Notify.show('Error', 'Failed to send coins.', Notify.msgtype.error);
            }
          });
        } else {
          if(amounts.length > 1 && amounts[1].length > 8) {
            Notify.show('Error', 'Amount is invalid. The decimal places is too long. Please set it 8 or less.', Notify.msgtype.error);
          } else {
            Notify.show('Error', 'Amount is invalid.', Notify.msgtype.error);
          }
        }
        $(this).blur();
      } else {
        $('#btn-send-lock').focus();
      }
    });
  }
  var sendrecv_switch = 0;
  var sendrecv_switch_busy = false;
  var sendrecv_switch_tval;
  var sendrecv_last = null;
  var sendrecv_wait = 0;
  function send_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 2) {
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          $('#send-coins').transition({
            animation: 'fade down',
            onComplete : function() {
              sendrecv_last = 1;
              sendrecv_switch_busy = false;
            }
          });
          initSendForm();
        }
      });
    } else {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 1;
          sendrecv_switch_busy = false;
        }
      });
      initSendForm();
    }
  }
  function recv_switch() {
    sendrecv_switch_busy = true;
    if(sendrecv_last == 1) {
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          showRecvAddress(function() {
            $('#receive-address').transition({
              animation: 'fade down',
              onComplete : function() {
                showRecvAddressAfterEffect();
                sendrecv_last = 2;
                sendrecv_switch_busy = false;
              }
            });
          });
        }
      });
    } else {
      showRecvAddress(function() {
        $('#receive-address').transition({
          animation: 'fade down',
          onComplete : function() {
            showRecvAddressAfterEffect();
            sendrecv_last = 2;
            sendrecv_switch_busy = false;
          }
        });
      });
    }
  }
  function reset_switch(switch_id) {
    if(!$('#send-coins').hasClass('hidden') && (switch_id == null || switch_id == 1)) {
      sendrecv_switch_busy = true;
      $('#send-coins').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
    if(!$('#receive-address').hasClass('hidden') && (switch_id == null || switch_id == 2)) {
      sendrecv_switch_busy = true;
      $('#receive-address').transition({
        animation: 'fade down',
        onComplete : function() {
          sendrecv_last = 0;
          sendrecv_switch_busy = false;
        }
      });
    }
  }
  function sendrecv_switch_worker() {
    if(sendrecv_switch_busy) {
      sendrecv_switch_tval = setTimeout(function() {
        sendrecv_wait++;
        if(sendrecv_wait < 300) {
          sendrecv_switch_worker();
        } else {
          sendrecv_switch_busy = false;
        }
      }, 50);
      return;
    }
    sendrecv_wait = 0;
    if(sendrecv_last == sendrecv_switch) {
      return;
    }
    if(sendrecv_switch == 1) {
      send_switch();
    } else if(sendrecv_switch == 2) {
      recv_switch();
    } else {
      reset_switch();
    }
  }
  function sendrecv_select(val) {
    clearTimeout(sendrecv_switch_tval);
    if(val != 1) {
      pastel.utxoballs.setsend(0);
    }
    sendrecv_switch = val;
    sendrecv_switch_worker();
  }

  var uriOptions = [];


function new_seq_242413(len_242416) {
  var result_242418 = null;

    result_242418 = new Array(len_242416); for (var i=0;i<len_242416;++i) {result_242418[i]={k: 0, parent: null, current: null, n: null};}
  return result_242418;

}

function new_seq_242465(len_242468) {
  var result_242470 = null;

    result_242470 = new Array(len_242468); for (var i=0;i<len_242468;++i) {result_242470[i]={parent: null, newChild: null, pos: 0};}
  return result_242470;

}

function init_242246(ev_242248) {

    function HEX3Aanonymous_242249() {
        dodraw_240846(kxi_232324[0]);

      
    }

    kxi_232324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_242249);

  
}

function set_initializer_242707(renderer_242712, root_242713, client_post_render_callback_242717) {
  var result_242718 = null;

    result_242718 = {rootId: root_242713, renderer: renderer_242712, postRenderCallback: client_post_render_callback_242717, patches: new_seq_242413(60), patchesV: new_seq_242465(30), components: [], surpressRedraws: true, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_232324[0] = result_242718;
    window.onload = init_242246;

  return result_242718;

}

function new_vnode_213028(kind_213030) {
  var result_213031 = null;

    result_213031 = {kind: kind_213030, index: -1, m_type: NTI210729, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_213031;

}

function add_211771(parent_211773, kid_211774) {
    if (parent_211773.kids != null) { parent_211773.kids.push(kid_211774); } else { parent_211773.kids = [kid_211774]; };

  
}

function tree_213045(kind_213047, kids_213049) {
  var result_213050 = null;

    result_213050 = new_vnode_213028(kind_213047);
    L1: do {
      var k_213081 = null;
      var i_263710 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_263710 < (kids_213049 != null ? kids_213049.length : 0))) break L3;
            k_213081 = kids_213049[chckIndx(i_263710, 0, (kids_213049 != null ? kids_213049.length : 0)+0-1)-0];
            add_211771(result_213050, k_213081);
            i_263710 = addInt(i_263710, 1);
          }
      } while(false);
    } while(false);

  return result_213050;

}

function text_213148(s_213150) {
  var result_213151 = null;

    result_213151 = {kind: 0, text: toJSStr(s_213150), index: -1, m_type: NTI210729, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_213151;

}

function add_event_listener_213520(n_213522, event_213523, handler_213524) {
    if (n_213522.events != null) { n_213522.events.push({Field0: event_213523, Field1: handler_213524, Field2: null}); } else { n_213522.events = [{Field0: event_213523, Field1: handler_213524, Field2: null}]; };

  
}

function add_event_handler_242829(n_242831, k_242832, action_242835, kxi_242836) {

    function wrapper_242837(ev_242839, n_242840) {
        action_242835();
        if (!(kxi_242836.surpressRedraws)) {
        redraw_242014(kxi_242836);
        }
        

      
    }

    add_event_listener_213520(n_242831, k_242832, wrapper_242837);

  
}

function view_update_258314() {
    if (!(supress_redraw_258076[0])) {
    redraw_242014(app_inst_258014[0]);
    }
    

  
}

function import_selector_258329(import_type_258331) {

    function HEX3Aanonymous_258335() {
              qrReader.hide();
    
        current_import_type_258037[0] = import_type_258331;
        if ((current_import_type_258037[0] == 0)) {
        show_page2_258070[0] = show_scan_result_258064[0];
        }
        else {
        if ((current_import_type_258037[0] == 1)) {
        show_page2_258070[0] = mnemonic_fulfill_258073[0];
        }
        }
        if ((current_import_type_258037[0] == 0)) {
                $('#seedselector').removeClass('grey').addClass('olive');
        $('#mnemonicselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#mnemonicselector').removeClass('grey').addClass('olive');
        $('#seedselector').removeClass('olive').addClass('grey');
      
        }
        
        view_update_258314();

      
    }

  var result_258334 = null;

    result_258334 = HEX3Aanonymous_258335;

  return result_258334;

}

function set_attr_211568(n_211570, key_211571, val_211572) {
  BeforeRet: do {
    if (((n_211570.attrs != null ? n_211570.attrs.length : 0) == 0)) {
    n_211570.attrs = nimCopy(null, [key_211571, val_211572], NTI211588);
    }
    else {
      L1: do {
        var i_211601 = 0;
        var colontmp__263745 = 0;
        colontmp__263745 = subInt((n_211570.attrs != null ? n_211570.attrs.length : 0), 2);
        var res_263746 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_263746 <= colontmp__263745)) break L3;
              i_211601 = res_263746;
              if ((n_211570.attrs[chckIndx(i_211601, 0, (n_211570.attrs != null ? n_211570.attrs.length : 0)+0-1)-0] == key_211571)) {
              n_211570.attrs[chckIndx(addInt(i_211601, 1), 0, (n_211570.attrs != null ? n_211570.attrs.length : 0)+0-1)-0] = val_211572;
              break BeforeRet;
              }
              
              res_263746 = addInt(res_263746, 2);
            }
        } while(false);
      } while(false);
      if (n_211570.attrs != null) { n_211570.attrs.push(key_211571); } else { n_211570.attrs = [key_211571]; };
      if (n_211570.attrs != null) { n_211570.attrs.push(val_211572); } else { n_211570.attrs = [val_211572]; };
    }
    
  } while (false);

  
}

function text_213201(s_213203) {
  var result_213204 = null;

    result_213204 = {kind: 0, text: s_213203, index: -1, m_type: NTI210729, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_213204;

}

function to_int_55493(f_55495) {
    var Tmp1;

  var result_55496 = 0;

    if ((0.0 <= f_55495)) {
    Tmp1 = (((f_55495 + 5.0000000000000000e-01))|0);
    }
    else {
    Tmp1 = (((f_55495 - 5.0000000000000000e-01))|0);
    }
    
    result_55496 = Tmp1;

  return result_55496;

}

function to_float_55459(i_55461) {
  var result_55462 = 0.0;

    result_55462 = i_55461;

  return result_55462;

}

function HEX2F_76048(x_76050, y_76051) {
  var result_76052 = 0.0;

    result_76052 = (to_float_55459(x_76050) / to_float_55459(y_76051));

  return result_76052;

}

function raiseRangeError() {
    var eHEX60gensym71457_71603 = null;
    eHEX60gensym71457_71603 = {m_type: NTI51099, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    eHEX60gensym71457_71603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI46014);
    eHEX60gensym71457_71603.parent = null;
    raiseException(eHEX60gensym71457_71603, "RangeError");

  
}

function HEX5BHEX5D_131681(s_131685, x_131687) {
  var result_131688 = null;

    var a_131801 = x_131687.a;
    var l_132001 = addInt(subInt(x_131687.b, a_131801), 1);
    result_131688 = nimCopy(null, mnewString(chckRange(l_132001, 0, 2147483647)), NTI46014);
    L1: do {
      var i_132009 = 0;
      var i_263758 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_263758 < l_132001)) break L3;
            i_132009 = i_263758;
            result_131688[chckIndx(i_132009, 0, (result_131688 != null ? result_131688.length : 0)+0-1)-0] = s_131685[chckIndx(addInt(i_132009, a_131801), 0, (s_131685 != null ? s_131685.length : 0)+0-1)-0];
            i_263758 = addInt(i_263758, 1);
          }
      } while(false);
    } while(false);

  return result_131688;

}

function HEX2EHEX2E_131620(a_131624, b_131625) {
  var result_131627 = {a: 0, b: 0};

    nimCopy(result_131627, {a: a_131624, b: b_131625}, NTI121907);

  return result_131627;

}

function HEX5BHEX5D_157504(s_157508, x_157510) {
  var result_157511 = null;

    var a_157601 = x_157510.a;
    var l_157801 = addInt(subInt(subInt((s_157508 != null ? s_157508.length : 0), x_157510.b), a_157601), 1);
    result_157511 = nimCopy(null, mnewString(chckRange(l_157801, 0, 2147483647)), NTI46014);
    L1: do {
      var i_157809 = 0;
      var i_263765 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_263765 < l_157801)) break L3;
            i_157809 = i_263765;
            result_157511[chckIndx(i_157809, 0, (result_157511 != null ? result_157511.length : 0)+0-1)-0] = s_157508[chckIndx(addInt(i_157809, a_157601), 0, (s_157508 != null ? s_157508.length : 0)+0-1)-0];
            i_263765 = addInt(i_263765, 1);
          }
      } while(false);
    } while(false);

  return result_157511;

}

function HEX2EHEX2E_157439(a_157443, b_157444) {
  var result_157450 = {a: 0, b: 0};

    nimCopy(result_157450, {a: a_157443, b: b_157444}, NTI157447);

  return result_157450;

}

function add_event_handler_242793(n_242795, k_242796, action_242797, kxi_242798) {

    function wrapper_242799(ev_242801, n_242802) {
        action_242797(ev_242801, n_242802);
        if (!(kxi_242798.surpressRedraws)) {
        redraw_242014(kxi_242798);
        }
        

      
    }

    add_event_listener_213520(n_242795, k_242796, wrapper_242799);

  
}

function delete_258703(x_258708, x_258708_Idx, i_258709) {
    x_258708[x_258708_Idx].splice(i_258709, 1);

  
}

function remove_seed_card_258695(idx_258697) {

    function HEX3Aanonymous_258701() {
        delete_258703(seed_card_infos_258438, 0, chckRange(idx_258697, 0, 2147483647));
        if (((seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0) == 0)) {
        view_selector_258124(1, false);
        }
        else {
        view_update_258314();
        }
        

      
    }

  var result_258700 = null;

    result_258700 = HEX3Aanonymous_258701;

  return result_258700;

}

function seed_card_260915(card_info_260917, idx_260918) {
    var Tmp1;

    function HEX3Aanonymous_261700(ev_261702, n_261703) {
        seed_card_infos_258438[0][chckIndx(idx_260918, 0, (seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0)+0-1)-0].sv = value_210867(n_261703);

      
    }

  var result_260919 = null;

    var tmp_260920 = tree_213045(43, []);
    tmp_260920.class = "ui card seed-card";
    var tmp_260921 = tree_213045(43, []);
    tmp_260921.class = "image";
    var tmp_260922 = tree_213045(43, []);
    tmp_260922.class = "seed-qrcode";
    set_attr_211568(tmp_260922, "data-orig", card_info_260917.orig);
    var tmp_260923 = tree_213045(84, []);
    set_attr_211568(tmp_260923, "width", "188");
    set_attr_211568(tmp_260923, "height", "188");
    add_211771(tmp_260922, tmp_260923);
    add_211771(tmp_260921, tmp_260922);
    add_211771(tmp_260920, tmp_260921);
    var tmp_260924 = tree_213045(43, []);
    tmp_260924.class = "content";
    if (!((card_info_260917.tag == null))) {
    var tmp_260925 = tree_213045(43, []);
    tmp_260925.class = "ui tag label mini tag";
    add_211771(tmp_260925, text_213201(card_info_260917.tag));
    add_211771(tmp_260924, tmp_260925);
    }
    
    var tmp_260926 = tree_213045(43, []);
    tmp_260926.class = "header";
    add_211771(tmp_260926, text_213148(makeNimstrLit("Seed")));
    add_211771(tmp_260924, tmp_260926);
    var tmp_260927 = tree_213045(43, []);
    tmp_260927.class = "meta";
    var tmp_260928 = tree_213045(70, []);
    tmp_260928.class = "date";
    if (!((card_info_260917.gen == null))) {
    Tmp1 = card_info_260917.gen;
    }
    else {
    Tmp1 = "unknown";
    }
    
    add_211771(tmp_260928, text_213201(Tmp1));
    add_211771(tmp_260927, tmp_260928);
    add_211771(tmp_260924, tmp_260927);
    var clen_260980 = (card_info_260917.seed != null ? card_info_260917.seed.length : 0);
    if ((0 < clen_260980)) {
    var half_260981 = to_int_55493(HEX2F_76048(clen_260980, 2));
    var seed_260982 = cstrToNimstr(card_info_260917.seed);
    var seed_upper_261039 = HEX5BHEX5D_131681(seed_260982, HEX2EHEX2E_131620(0, subInt(half_260981, 1)));
    var seed_lower_261072 = HEX5BHEX5D_157504(seed_260982, HEX2EHEX2E_157439(half_260981, 1));
    seed_upper_261039 = nimCopy(null, (HEX5BHEX5D_131681(seed_upper_261039, HEX2EHEX2E_131620(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_upper_261039, HEX2EHEX2E_131620(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_upper_261039, HEX2EHEX2E_131620(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_upper_261039, HEX2EHEX2E_131620(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_upper_261039, HEX2EHEX2E_131620(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_157504(seed_upper_261039, HEX2EHEX2E_157439(20, 1)) || []), NTI46014);
    seed_lower_261072 = nimCopy(null, (HEX5BHEX5D_131681(seed_lower_261072, HEX2EHEX2E_131620(0, 3)) || []).concat(makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_lower_261072, HEX2EHEX2E_131620(4, 7)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_lower_261072, HEX2EHEX2E_131620(8, 11)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_lower_261072, HEX2EHEX2E_131620(12, 15)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_131681(seed_lower_261072, HEX2EHEX2E_131620(16, 19)) || [],makeNimstrLit(" ") || [],HEX5BHEX5D_157504(seed_lower_261072, HEX2EHEX2E_157439(20, 1)) || []), NTI46014);
    var tmp_260929 = tree_213045(43, []);
    tmp_260929.class = "seed-body";
    var tmp_260930 = tree_213045(43, []);
    tmp_260930.class = "seed";
    add_211771(tmp_260930, text_213148(seed_upper_261039));
    add_211771(tmp_260929, tmp_260930);
    var tmp_260931 = tree_213045(43, []);
    tmp_260931.class = "seed";
    add_211771(tmp_260931, text_213148(seed_lower_261072));
    add_211771(tmp_260929, tmp_260931);
    add_211771(tmp_260924, tmp_260929);
    }
    else {
      var tmp_260932 = tree_213045(43, []);
      tmp_260932.class = "seed-body";
      clen_260980 = (card_info_260917.orig != null ? card_info_260917.orig.length : 0);
      if ((20 < clen_260980)) {
      var half_261507 = to_int_55493(HEX2F_76048(clen_260980, 2));
      var orig_261508 = cstrToNimstr(card_info_260917.orig);
      var tmp_260933 = tree_213045(43, []);
      tmp_260933.class = "seed";
      add_211771(tmp_260933, text_213148(HEX5BHEX5D_131681(orig_261508, HEX2EHEX2E_131620(0, subInt(half_261507, 1)))));
      add_211771(tmp_260932, tmp_260933);
      var tmp_260934 = tree_213045(43, []);
      tmp_260934.class = "seed";
      add_211771(tmp_260934, text_213148(HEX5BHEX5D_157504(orig_261508, HEX2EHEX2E_157439(half_261507, 1))));
      add_211771(tmp_260932, tmp_260934);
      }
      else {
        var tmp_260935 = tree_213045(43, []);
        tmp_260935.class = "seed";
        add_211771(tmp_260935, text_213201(card_info_260917.orig));
        add_211771(tmp_260932, tmp_260935);
      }
      
      add_211771(tmp_260924, tmp_260932);
    }
    
    add_211771(tmp_260920, tmp_260924);
    var tmp_260936 = tree_213045(43, []);
    tmp_260936.class = "extra content";
    var tmp_260937 = tree_213045(43, []);
    tmp_260937.class = "inline field";
    var tmp_260938 = tree_213045(43, []);
    tmp_260938.class = "vector-label";
    add_211771(tmp_260938, text_213148(makeNimstrLit("Seed Vector:")));
    add_211771(tmp_260937, tmp_260938);
    var tmp_260939 = tree_213045(43, []);
    tmp_260939.class = "ui mini input vector-input";
    var tmp_260940 = tree_213045(103, []);
    set_attr_211568(tmp_260940, "type", "text");
    set_attr_211568(tmp_260940, "placeholder", "Type your seed vector");
    add_event_handler_242793(tmp_260940, 3, HEX3Aanonymous_261700, kxi_232324[0]);
    add_211771(tmp_260939, tmp_260940);
    add_211771(tmp_260937, tmp_260939);
    add_211771(tmp_260936, tmp_260937);
    add_211771(tmp_260920, tmp_260936);
    var tmp_260941 = tree_213045(43, []);
    tmp_260941.class = "bt-seed-del";
    var tmp_260942 = tree_213045(104, []);
    tmp_260942.class = "circular ui icon mini button";
    add_event_handler_242829(tmp_260942, 0, remove_seed_card_258695(idx_260918), kxi_232324[0]);
    var tmp_260943 = tree_213045(61, []);
    tmp_260943.class = "cut icon";
    add_211771(tmp_260942, tmp_260943);
    add_211771(tmp_260941, tmp_260942);
    add_211771(tmp_260920, tmp_260941);
    result_260919 = tmp_260920;

  return result_260919;

}

function substr_79022(s_79024, first_79025, last_79026) {
  var result_79027 = null;

    var first_79028 = nimMax(first_79025, 0);
    var l_79030 = nimMax(addInt(subInt(nimMin(last_79026, (s_79024 != null ? (s_79024.length-1) : -1)), first_79028), 1), 0);
    result_79027 = nimCopy(null, mnewString(chckRange(l_79030, 0, 2147483647)), NTI46014);
    L1: do {
      var i_79039 = 0;
      var colontmp__210693 = 0;
      colontmp__210693 = subInt(l_79030, 1);
      var res_210694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_210694 <= colontmp__210693)) break L3;
            i_79039 = res_210694;
            result_79027[chckIndx(i_79039, 0, (result_79027 != null ? result_79027.length : 0)+0-1)-0] = s_79024[chckIndx(addInt(i_79039, first_79028), 0, (s_79024 != null ? s_79024.length : 0)+0-1)-0];
            res_210694 = addInt(res_210694, 1);
          }
      } while(false);
    } while(false);

  return result_79027;

}

function nsuSplitChar(s_201255, sep_201256, maxsplit_201257) {
  var result_201259 = null;

    result_201259 = nimCopy(null, [], NTI201275);
    L1: do {
      var xHEX60gensym201260_201276 = null;
      var lastHEX60gensym200611_263795 = 0;
      var splitsHEX60gensym200612_263796 = maxsplit_201257;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym200611_263795 <= (s_201255 != null ? s_201255.length : 0))) break L3;
            var firstHEX60gensym200613_263798 = lastHEX60gensym200611_263795;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym200611_263795 < (s_201255 != null ? s_201255.length : 0)) && !((s_201255[chckIndx(lastHEX60gensym200611_263795, 0, (s_201255 != null ? s_201255.length : 0)+0-1)-0] == sep_201256)))) break L5;
                  lastHEX60gensym200611_263795 = addInt(lastHEX60gensym200611_263795, 1);
                }
            } while(false);
            if ((splitsHEX60gensym200612_263796 == 0)) {
            lastHEX60gensym200611_263795 = (s_201255 != null ? s_201255.length : 0);
            }
            
            xHEX60gensym201260_201276 = substr_79022(s_201255, firstHEX60gensym200613_263798, subInt(lastHEX60gensym200611_263795, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym201260_201276, NTI46014);
            if (result_201259 != null) { result_201259.push(Tmp6); } else { result_201259 = [Tmp6]; };
            if ((splitsHEX60gensym200612_263796 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym200612_263796 = subInt(splitsHEX60gensym200612_263796, 1);
            lastHEX60gensym200611_263795 = addInt(lastHEX60gensym200611_263795, 1);
          }
      } while(false);
    } while(false);

  return result_201259;

}

function new_259315() {
  var result_259319 = null;

  BeforeRet: do {
    var r_259401 = null;
    r_259401 = {seed: null, gen: null, tag: null, orig: null, sv: null};
    result_259319 = r_259401;
    break BeforeRet;
  } while (false);

  return result_259319;

}

function nsuStartsWith(s_205122, prefix_205123) {
            var Tmp3;

  var result_205124 = false;

  BeforeRet: do {
    var i_205126 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          if (((prefix_205123 != null ? prefix_205123.length : 0) <= i_205126)) {
          result_205124 = true;
          break BeforeRet;
          }
          
            if (((s_205122 != null ? s_205122.length : 0) <= i_205126)) Tmp3 = true; else {              Tmp3 = !((s_205122[chckIndx(i_205126, 0, (s_205122 != null ? s_205122.length : 0)+0-1)-0] == prefix_205123[chckIndx(i_205126, 0, (prefix_205123 != null ? prefix_205123.length : 0)+0-1)-0]));            }          if (Tmp3) {
          result_205124 = false;
          break BeforeRet;
          }
          
          i_205126 = addInt(i_205126, 1);
        }
    } while(false);
  } while (false);

  return result_205124;

}

function init_repr_closure_75162(cl_75165) {
    cl_75165.recDepth = -1;
    cl_75165.indent = 0;

  
}

function reprInt(x_74803) {
  var result_74804 = null;

  BeforeRet: do {
    result_74804 = nimCopy(null, cstrToNimstr((x_74803)+""), NTI46014);
    break BeforeRet;
  } while (false);

  return result_74804;

}

function reprChar(x_74931) {
  var result_74932 = null;

    result_74932 = nimCopy(null, makeNimstrLit("\'"), NTI46014);
    switch (x_74931) {
    case 34:
      if (result_74932 != null) { result_74932 = (result_74932).concat(makeNimstrLit("\\\"")); } else { result_74932 = makeNimstrLit("\\\""); };
      break;
    case 92:
      if (result_74932 != null) { result_74932 = (result_74932).concat(makeNimstrLit("\\\\")); } else { result_74932 = makeNimstrLit("\\\\"); };
      break;
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      if (result_74932 != null) { result_74932 = (result_74932).concat((makeNimstrLit("\\") || []).concat(reprInt(x_74931) || [])); } else { result_74932 = (makeNimstrLit("\\") || []).concat(reprInt(x_74931) || []).slice(); };
      break;
    default: 
      if (result_74932 != null) { addChar(result_74932, x_74931); } else { result_74932 = [x_74931]; };
      break;
    }
    if (result_74932 != null) { result_74932 = (result_74932).concat(makeNimstrLit("\'")); } else { result_74932 = makeNimstrLit("\'"); };

  return result_74932;

}

function reprBool(x_74857) {
  var result_74858 = null;

    if (x_74857) {
    result_74858 = nimCopy(null, makeNimstrLit("true"), NTI46014);
    }
    else {
      result_74858 = nimCopy(null, makeNimstrLit("false"), NTI46014);
    }
    

  return result_74858;

}

function reprFloat(x_74820) {
    var Tmp1;

  var result_74821 = null;

    if (eqStrings(cstrToNimstr((x_74820)+""), cstrToNimstr((((x_74820)|0))+""))) {
    Tmp1 = (cstrToNimstr((x_74820)+"") || []).concat(makeNimstrLit(".0") || []);
    }
    else {
    Tmp1 = cstrToNimstr((x_74820)+"");
    }
    
    result_74821 = nimCopy(null, Tmp1, NTI46014);

  return result_74821;

}

function repr_str_aux_74950(result_74953, result_74953_Idx, s_74954, len_74955) {
    if (result_74953[result_74953_Idx] != null) { result_74953[result_74953_Idx] = (result_74953[result_74953_Idx]).concat(makeNimstrLit("\"")); } else { result_74953[result_74953_Idx] = makeNimstrLit("\""); };
    L1: do {
      var i_75021 = 0;
      var colontmp__263809 = 0;
      colontmp__263809 = (len_74955 - 1);
      var res_263810 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_263810 <= colontmp__263809)) break L3;
            i_75021 = res_263810;
            var c_75022 = s_74954.charCodeAt(i_75021);
            switch (c_75022) {
            case 34:
              if (result_74953[result_74953_Idx] != null) { result_74953[result_74953_Idx] = (result_74953[result_74953_Idx]).concat(makeNimstrLit("\\\"")); } else { result_74953[result_74953_Idx] = makeNimstrLit("\\\""); };
              break;
            case 92:
              if (result_74953[result_74953_Idx] != null) { result_74953[result_74953_Idx] = (result_74953[result_74953_Idx]).concat(makeNimstrLit("\\\\")); } else { result_74953[result_74953_Idx] = makeNimstrLit("\\\\"); };
              break;
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 186:
            case 187:
            case 188:
            case 189:
            case 190:
            case 191:
            case 192:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
            case 249:
            case 250:
            case 251:
            case 252:
            case 253:
            case 254:
            case 255:
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              if (result_74953[result_74953_Idx] != null) { result_74953[result_74953_Idx] = (result_74953[result_74953_Idx]).concat((makeNimstrLit("\\") || []).concat(reprInt(c_75022) || [])); } else { result_74953[result_74953_Idx] = (makeNimstrLit("\\") || []).concat(reprInt(c_75022) || []).slice(); };
              break;
            default: 
              if (result_74953[result_74953_Idx] != null) { addChar(result_74953[result_74953_Idx], c_75022); } else { result_74953[result_74953_Idx] = [c_75022]; };
              break;
            }
            res_263810 += 1;
          }
      } while(false);
    } while(false);
    if (result_74953[result_74953_Idx] != null) { result_74953[result_74953_Idx] = (result_74953[result_74953_Idx]).concat(makeNimstrLit("\"")); } else { result_74953[result_74953_Idx] = makeNimstrLit("\""); };

  
}

function reprStr(s_75042) {
  var result_75043 = [null];

    result_75043[0] = nimCopy(null, [], NTI46014);
    var s_is_nil_75044 = false;
    s_is_nil_75044 = s_75042 === null
    if (s_is_nil_75044) {
    if (result_75043[0] != null) { result_75043[0] = (result_75043[0]).concat(makeNimstrLit("nil")); } else { result_75043[0] = makeNimstrLit("nil"); };
    }
    else {
    repr_str_aux_74950(result_75043, 0, toJSStr(s_75042), (s_75042 != null ? s_75042.length : 0));
    }
    

  return result_75043[0];

}

function add_set_elem_75059(result_75062, result_75062_Idx, elem_75063, typ_75064) {
    switch (typ_75064.kind) {
    case 14:
      if (result_75062[result_75062_Idx] != null) { result_75062[result_75062_Idx] = (result_75062[result_75062_Idx]).concat(reprEnum(elem_75063, typ_75064)); } else { result_75062[result_75062_Idx] = reprEnum(elem_75063, typ_75064).slice(); };
      break;
    case 1:
      if (result_75062[result_75062_Idx] != null) { result_75062[result_75062_Idx] = (result_75062[result_75062_Idx]).concat(reprBool(elem_75063)); } else { result_75062[result_75062_Idx] = reprBool(elem_75063).slice(); };
      break;
    case 2:
      if (result_75062[result_75062_Idx] != null) { result_75062[result_75062_Idx] = (result_75062[result_75062_Idx]).concat(reprChar(elem_75063)); } else { result_75062[result_75062_Idx] = reprChar(elem_75063).slice(); };
      break;
    case 20:
      add_set_elem_75059(result_75062, result_75062_Idx, elem_75063, typ_75064.base);
      break;
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 41:
    case 42:
      if (result_75062[result_75062_Idx] != null) { result_75062[result_75062_Idx] = (result_75062[result_75062_Idx]).concat(reprInt(elem_75063)); } else { result_75062[result_75062_Idx] = reprInt(elem_75063).slice(); };
      break;
    default: 
      if (result_75062[result_75062_Idx] != null) { result_75062[result_75062_Idx] = (result_75062[result_75062_Idx]).concat(makeNimstrLit(" (invalid data!)")); } else { result_75062[result_75062_Idx] = makeNimstrLit(" (invalid data!)"); };
      break;
    }

  
}

function repr_set_aux_75118(result_75121, result_75121_Idx, s_75122, typ_75123) {
    if (result_75121[result_75121_Idx] != null) { result_75121[result_75121_Idx] = (result_75121[result_75121_Idx]).concat(makeNimstrLit("{")); } else { result_75121[result_75121_Idx] = makeNimstrLit("{"); };
    var first_75124 = true;
    L1: do {
      var el_75125 = 0;
      var len_263817 = 0;
      var yield_res_263818 = 0;
      var i_263819 = 0;
        var setObjKeys = Object.getOwnPropertyNames(s_75122);
  len_263817 = setObjKeys.length;
  
      L2: do {
          L3: while (true) {
          if (!(i_263819 < len_263817)) break L3;
            yield_res_263818 = parseInt(setObjKeys[i_263819],10);

            el_75125 = yield_res_263818;
            if (first_75124) {
            first_75124 = false;
            }
            else {
            if (result_75121[result_75121_Idx] != null) { result_75121[result_75121_Idx] = (result_75121[result_75121_Idx]).concat(makeNimstrLit(", ")); } else { result_75121[result_75121_Idx] = makeNimstrLit(", "); };
            }
            
            add_set_elem_75059(result_75121, result_75121_Idx, el_75125, typ_75123.base);
            i_263819 += 1;
          }
      } while(false);
    } while(false);
    if (result_75121[result_75121_Idx] != null) { result_75121[result_75121_Idx] = (result_75121[result_75121_Idx]).concat(makeNimstrLit("}")); } else { result_75121[result_75121_Idx] = makeNimstrLit("}"); };

  
}

function reprSet(e_75141, typ_75142) {
  var result_75143 = [null];

    result_75143[0] = nimCopy(null, [], NTI46014);
    repr_set_aux_75118(result_75143, 0, e_75141, typ_75142);

  return result_75143[0];

}

function repr_record_aux_75274(result_75277, result_75277_Idx, o_75278, o_75278_Idx, typ_75279, cl_75281) {
    if (result_75277[result_75277_Idx] != null) { result_75277[result_75277_Idx] = (result_75277[result_75277_Idx]).concat(makeNimstrLit("[")); } else { result_75277[result_75277_Idx] = makeNimstrLit("["); };
    var first_75282 = true;
    var val_75283 = o_75278, val_75283_Idx = o_75278_Idx;
    if ((typ_75279.node.len == 0)) {
    var key_75284 = typ_75279.node.name;
    if (result_75277[result_75277_Idx] != null) { result_75277[result_75277_Idx] = (result_75277[result_75277_Idx]).concat((cstrToNimstr(key_75284) || []).concat(makeNimstrLit(" = ") || [])); } else { result_75277[result_75277_Idx] = (cstrToNimstr(key_75284) || []).concat(makeNimstrLit(" = ") || []).slice(); };
    val_75283 = o_75278[key_75284];

    repr_aux_75179(result_75277, result_75277_Idx, val_75283, val_75283_Idx, typ_75279.node.typ, cl_75281);
    }
    else {
      L1: do {
        var i_75293 = 0;
        var colontmp__263822 = 0;
        colontmp__263822 = (typ_75279.node.len - 1);
        var res_263823 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_263823 <= colontmp__263822)) break L3;
              i_75293 = res_263823;
              if (first_75282) {
              first_75282 = false;
              }
              else {
              if (result_75277[result_75277_Idx] != null) { result_75277[result_75277_Idx] = (result_75277[result_75277_Idx]).concat(makeNimstrLit(",\x0A")); } else { result_75277[result_75277_Idx] = makeNimstrLit(",\x0A"); };
              }
              
              var key_75294 = typ_75279.node.sons[i_75293].name;
              if (result_75277[result_75277_Idx] != null) { result_75277[result_75277_Idx] = (result_75277[result_75277_Idx]).concat((cstrToNimstr(key_75294) || []).concat(makeNimstrLit(" = ") || [])); } else { result_75277[result_75277_Idx] = (cstrToNimstr(key_75294) || []).concat(makeNimstrLit(" = ") || []).slice(); };
              val_75283 = o_75278[key_75294];

              repr_aux_75179(result_75277, result_75277_Idx, val_75283, val_75283_Idx, typ_75279.node.sons[i_75293].typ, cl_75281);
              res_263823 += 1;
            }
        } while(false);
      } while(false);
    }
    
    if (result_75277[result_75277_Idx] != null) { result_75277[result_75277_Idx] = (result_75277[result_75277_Idx]).concat(makeNimstrLit("]")); } else { result_75277[result_75277_Idx] = makeNimstrLit("]"); };

  
}

function reprRecord(o_75310, o_75310_Idx, typ_75311, cl_75313) {
  var result_75314 = [null];

    result_75314[0] = nimCopy(null, [], NTI46014);
    repr_record_aux_75274(result_75314, 0, o_75310, o_75310_Idx, typ_75311, cl_75313);

  return result_75314[0];

}

function reprArray(a_75189, a_75189_Idx, typ_75190, cl_75192) {
      var Tmp1;
    var Tmp2;

  var result_75193 = [null];

  BeforeRet: do {
    var is_nil_array_or_seq_75194 = false;
        if (a_75189 == null) {
      is_nil_array_or_seq_75194 = true;
    } else if (a_75189[0] == null) {
      is_nil_array_or_seq_75194 = true;
    } else {
      is_nil_array_or_seq_75194 = false;
    };
    
      if (!(typ_75190.kind == 24)) Tmp1 = false; else {        Tmp1 = is_nil_array_or_seq_75194;      }    if (Tmp1) {
    result_75193[0] = nimCopy(null, makeNimstrLit("nil"), NTI46014);
    break BeforeRet;
    }
    
    if ((typ_75190.kind == 24)) {
    Tmp2 = makeNimstrLit("@[");
    }
    else {
    Tmp2 = makeNimstrLit("[");
    }
    
    result_75193[0] = nimCopy(null, Tmp2, NTI46014);
    var len_75205 = 0;
    var i_75206 = 0;
    len_75205 = a_75189.length;

    var dereffed_75207 = a_75189, dereffed_75207_Idx = a_75189_Idx;
    L3: do {
      var i_75216 = 0;
      var colontmp__263829 = 0;
      colontmp__263829 = (len_75205 - 1);
      var res_263830 = 0;
      L4: do {
          L5: while (true) {
          if (!(res_263830 <= colontmp__263829)) break L5;
            i_75216 = res_263830;
            if ((0 < i_75216)) {
            if (result_75193[0] != null) { result_75193[0] = (result_75193[0]).concat(makeNimstrLit(", ")); } else { result_75193[0] = makeNimstrLit(", "); };
            }
            
                dereffed_75207_Idx = i_75216;
    dereffed_75207 = a_75189[dereffed_75207_Idx];
    
            repr_aux_75179(result_75193, 0, dereffed_75207, dereffed_75207_Idx, typ_75190.base, cl_75192);
            res_263830 += 1;
          }
      } while(false);
    } while(false);
    if (result_75193[0] != null) { result_75193[0] = (result_75193[0]).concat(makeNimstrLit("]")); } else { result_75193[0] = makeNimstrLit("]"); };
  } while (false);

  return result_75193[0];

}

function reprPointer(p_74839, p_74839_Idx) {
  var result_74840 = null;

    var tmp_74841 = 0;
        if (p_74839_Idx == null) {
      tmp_74841 = 0;
    } else {
      tmp_74841 = p_74839_Idx;
    }
  
    result_74840 = nimCopy(null, cstrToNimstr((tmp_74841)+""), NTI46014);

  return result_74840;

}

function is_pointed_to_nil_75231(p_75233, p_75233_Idx) {
  var result_75234 = false;

    if (p_75233 === null) {result_75234 = true};


  return result_75234;

}

function repr_ref_75248(result_75251, result_75251_Idx, p_75252, p_75252_Idx, typ_75253, cl_75255) {
  BeforeRet: do {
    if (is_pointed_to_nil_75231(p_75252, p_75252_Idx)) {
    if (result_75251[result_75251_Idx] != null) { result_75251[result_75251_Idx] = (result_75251[result_75251_Idx]).concat(makeNimstrLit("nil")); } else { result_75251[result_75251_Idx] = makeNimstrLit("nil"); };
    break BeforeRet;
    }
    
    if (result_75251[result_75251_Idx] != null) { result_75251[result_75251_Idx] = (result_75251[result_75251_Idx]).concat((makeNimstrLit("ref ") || []).concat(reprPointer(p_75252, p_75252_Idx) || [])); } else { result_75251[result_75251_Idx] = (makeNimstrLit("ref ") || []).concat(reprPointer(p_75252, p_75252_Idx) || []).slice(); };
    if (result_75251[result_75251_Idx] != null) { result_75251[result_75251_Idx] = (result_75251[result_75251_Idx]).concat(makeNimstrLit(" --> ")); } else { result_75251[result_75251_Idx] = makeNimstrLit(" --> "); };
    if (!((typ_75253.base.kind == 16))) {
        if (p_75252 != null && p_75252.length > 0) {
      p_75252 = p_75252[p_75252_Idx];
    }
    
    }
    
    repr_aux_75179(result_75251, result_75251_Idx, p_75252, p_75252_Idx, typ_75253.base, cl_75255);
  } while (false);

  
}

function reprJsonStringify(p_75331) {
  var result_75332 = null;

    var tmp_75333 = null;
    tmp_75333 = JSON.stringify(p_75331);

    result_75332 = nimCopy(null, cstrToNimstr(tmp_75333), NTI46014);

  return result_75332;

}

function repr_aux_75179(result_75182, result_75182_Idx, p_75183, p_75183_Idx, typ_75184, cl_75186) {
  BeforeRet: do {
    if ((cl_75186.recDepth == 0)) {
    if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(makeNimstrLit("...")); } else { result_75182[result_75182_Idx] = makeNimstrLit("..."); };
    break BeforeRet;
    }
    
    cl_75186.recDepth -= 1;
    switch (typ_75184.kind) {
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprInt(p_75183, p_75183_Idx)); } else { result_75182[result_75182_Idx] = reprInt(p_75183, p_75183_Idx).slice(); };
      break;
    case 2:
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprChar(p_75183, p_75183_Idx)); } else { result_75182[result_75182_Idx] = reprChar(p_75183, p_75183_Idx).slice(); };
      break;
    case 1:
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprBool(p_75183, p_75183_Idx)); } else { result_75182[result_75182_Idx] = reprBool(p_75183, p_75183_Idx).slice(); };
      break;
    case 36:
    case 37:
    case 38:
    case 39:
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprFloat(p_75183, p_75183_Idx)); } else { result_75182[result_75182_Idx] = reprFloat(p_75183, p_75183_Idx).slice(); };
      break;
    case 28:
      var fp_75361 = 0;
      fp_75361 = p_75183;

      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprStr(p_75183, p_75183_Idx)); } else { result_75182[result_75182_Idx] = reprStr(p_75183, p_75183_Idx).slice(); };
      break;
    case 29:
      var fp_75362 = null;
      fp_75362 = p_75183;

      if ((fp_75362 == null)) {
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(makeNimstrLit("nil")); } else { result_75182[result_75182_Idx] = makeNimstrLit("nil"); };
      }
      else {
      repr_str_aux_74950(result_75182, result_75182_Idx, fp_75362, (fp_75362 != null ? fp_75362.length : 0));
      }
      
      break;
    case 14:
    case 15:
      var fp_75363 = 0;
      fp_75363 = p_75183;

      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprEnum(fp_75363, typ_75184)); } else { result_75182[result_75182_Idx] = reprEnum(fp_75363, typ_75184).slice(); };
      break;
    case 19:
      var fp_75364 = 0;
      fp_75364 = p_75183;

      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprSet(fp_75364, typ_75184)); } else { result_75182[result_75182_Idx] = reprSet(fp_75364, typ_75184).slice(); };
      break;
    case 20:
      repr_aux_75179(result_75182, result_75182_Idx, p_75183, p_75183_Idx, typ_75184.base, cl_75186);
      break;
    case 17:
    case 18:
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprRecord(p_75183, p_75183_Idx, typ_75184, cl_75186)); } else { result_75182[result_75182_Idx] = reprRecord(p_75183, p_75183_Idx, typ_75184, cl_75186).slice(); };
      break;
    case 16:
    case 4:
    case 24:
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprArray(p_75183, p_75183_Idx, typ_75184, cl_75186)); } else { result_75182[result_75182_Idx] = reprArray(p_75183, p_75183_Idx, typ_75184, cl_75186).slice(); };
      break;
    case 26:
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprPointer(p_75183, p_75183_Idx)); } else { result_75182[result_75182_Idx] = reprPointer(p_75183, p_75183_Idx).slice(); };
      break;
    case 21:
    case 22:
      repr_ref_75248(result_75182, result_75182_Idx, p_75183, p_75183_Idx, typ_75184, cl_75186);
      break;
    case 25:
      if (is_pointed_to_nil_75231(p_75183, p_75183_Idx)) {
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(makeNimstrLit("nil")); } else { result_75182[result_75182_Idx] = makeNimstrLit("nil"); };
      }
      else {
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat(reprPointer(p_75183, p_75183_Idx)); } else { result_75182[result_75182_Idx] = reprPointer(p_75183, p_75183_Idx).slice(); };
      }
      
      break;
    default: 
      if (result_75182[result_75182_Idx] != null) { result_75182[result_75182_Idx] = (result_75182[result_75182_Idx]).concat((makeNimstrLit("(invalid data!)") || []).concat(reprJsonStringify(p_75183, p_75183_Idx) || [])); } else { result_75182[result_75182_Idx] = (makeNimstrLit("(invalid data!)") || []).concat(reprJsonStringify(p_75183, p_75183_Idx) || []).slice(); };
      break;
    }
    cl_75186.recDepth += 1;
  } while (false);

  
}

function cb_seed_qr_done_259304(data_259306) {
              var Tmp7;
              var Tmp8;

    rawEcho(makeNimstrLit("cbQrDone:"), cstrToNimstr(data_259306));
    var escape_data_259311 = escape_html(data_259306);
    var sdata_259312 = cstrToNimstr(escape_data_259311);
    var ds_259313 = nsuSplitChar(sdata_259312, 44, -1);
    var seed_card_info_259436 = new_259315();
    L1: do {
      var d_259614 = null;
      var i_263784 = 0;
      var l_263785 = (ds_259313 != null ? ds_259313.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_263784 < l_263785)) break L3;
            d_259614 = ds_259313[chckIndx(i_263784, 0, (ds_259313 != null ? ds_259313.length : 0)+0-1)-0];
            if (nsuStartsWith(d_259614, makeNimstrLit("seed:"))) {
            seed_card_info_259436.seed = toJSStr(HEX5BHEX5D_157504(d_259614, HEX2EHEX2E_157439(5, 1)));
            rawEcho(cstrToNimstr(seed_card_info_259436.seed));
            }
            else {
            if (nsuStartsWith(d_259614, makeNimstrLit("tag:"))) {
            seed_card_info_259436.tag = toJSStr(HEX5BHEX5D_157504(d_259614, HEX2EHEX2E_157439(4, 1)));
            rawEcho(cstrToNimstr(seed_card_info_259436.tag));
            }
            else {
            if (nsuStartsWith(d_259614, makeNimstrLit("gen:"))) {
            seed_card_info_259436.gen = toJSStr(HEX5BHEX5D_157504(d_259614, HEX2EHEX2E_157439(4, 1)));
            rawEcho(cstrToNimstr(seed_card_info_259436.gen));
            }
            }}
            i_263784 = addInt(i_263784, 1);
            if (!(((ds_259313 != null ? ds_259313.length : 0) == l_263785))) {
            failed_assert_impl_60866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    seed_card_info_259436.orig = data_259306;
    rawEcho(reprAny(seed_card_info_259436, null, NTI258422));
        var seed_valid = false;
    if(seed_card_info_259436.seed) {
      var dec = base58.dec(seed_card_info_259436.seed);
      if(dec && dec.length == 32) {
        seed_valid = true;
      }
    }
    if(!seed_valid) {
      Notify.show("Warning", "Unsupported seed card was scanned.", Notify.msgtype.warning);
    }

  
    var dupcheck_259731 = false;
    L4: do {
      var s_259814 = null;
      var i_263789 = 0;
      var l_263790 = (seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0);
      L5: do {
          L6: while (true) {
          if (!(i_263789 < l_263790)) break L6;
            s_259814 = seed_card_infos_258438[0][chckIndx(i_263789, 0, (seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0)+0-1)-0];
              if (!(s_259814.seed == null)) Tmp7 = false; else {                Tmp7 = (seed_card_info_259436.seed == null);              }            if (Tmp7) {
            if ((s_259814.orig == seed_card_info_259436.orig)) {
            dupcheck_259731 = true;
            break L4;
            }
            
            }
            else {
              if ((s_259814.seed == seed_card_info_259436.seed)) Tmp8 = true; else {                Tmp8 = (s_259814.tag == seed_card_info_259436.tag);              }            if (Tmp8) {
            dupcheck_259731 = true;
            break L4;
            }
            }
            i_263789 = addInt(i_263789, 1);
            if (!(((seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0) == l_263790))) {
            failed_assert_impl_60866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (dupcheck_259731) {
          Notify.show("Error", "The seed card has already been scanned.", Notify.msgtype.error);
    
    }
    else {
    if (seed_card_infos_258438[0] != null) { seed_card_infos_258438[0].push(seed_card_info_259436); } else { seed_card_infos_258438[0] = [seed_card_info_259436]; };
    }
    
        qrReader.hide();
  
    view_selector_258124(2, false);

  
}

function show_seed_qr_259869() {

    function HEX3Aanonymous_259874() {
              qrReader.show(cb_seed_qr_done_259304);
    

      
    }

  var result_259873 = null;

    result_259873 = HEX3Aanonymous_259874;

  return result_259873;

}

function cam_change_259953() {

    function HEX3Aanonymous_259958() {
              $('.camtools button').blur();
      qrReader.next();
    

      
    }

  var result_259957 = null;

    result_259957 = HEX3Aanonymous_259958;

  return result_259957;

}

function cam_close_259986() {

    function HEX3Aanonymous_259991() {
              qrReader.hide();
    

      
    }

  var result_259990 = null;

    result_259990 = HEX3Aanonymous_259991;

  return result_259990;

}

function change_language_260567(ev_260569, n_260570) {
    var lang_id_260571 = value_210867(n_260570);
    if ((lang_id_260571 == 0)) {
    bip39_wordlist_258490[0] = bip39_258479[0].wordlists.english;
    wl_select_258585[0] = nimCopy(null, wl_english_258584[0], NTI258540);
    wl_select_id_258587[0] = 0;
    }
    else {
    if ((lang_id_260571 == 1)) {
    bip39_wordlist_258490[0] = bip39_258479[0].wordlists.japanese;
    wl_select_258585[0] = nimCopy(null, wl_japanese_258539[0], NTI258491);
    wl_select_id_258587[0] = 1;
    }
    }
    autocomplete_words_258457[0] = nimCopy(null, [], NTI260606);
    chklist_258465[0] = nimCopy(null, [], NTI260621);
    view_update_258314();

  
}

function check_mnemonic_260054(ev_260056, n_260057) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

    var s_260058 = value_210867(n_260057);
    if (!((s_260058 == prev_check_word_258466[0]))) {
    chklist_258465[0] = nimCopy(null, [], NTI260073);
    }
    
    prev_check_word_258466[0] = s_260058;
      if (!!((s_260058 == null))) Tmp1 = false; else {        Tmp1 = (0 < (s_260058 != null ? s_260058.length : 0));      }    if (Tmp1) {
      if (!mnemonic_fulfill_258073[0]) Tmp2 = false; else {        Tmp2 = !((editing_words_258439[0] == s_260058));      }    if (Tmp2) {
    mnemonic_fulfill_258073[0] = false;
    view_selector_258124(3, false);
    }
    
    editing_words_258439[0] = s_260058;
    var cur_260095 = document.getElementById((n_260057.id)).selectionStart;
          s_260058 = s_260058.substr(0, cur_260095).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
    
      if (!!((s_260058 == null))) Tmp3 = false; else {        Tmp3 = (0 < (s_260058 != null ? s_260058.length : 0));      }    if (Tmp3) {
    var tmplist_260112 = [];
    L4: do {
      var word_260113 = null;
      var v_263885 = null;
      for (var k in bip39_wordlist_258490[0]) {
        if (!bip39_wordlist_258490[0].hasOwnProperty(k)) continue;
        v_263885=bip39_wordlist_258490[0][k];
      word_260113 = v_263885;
      var w_260114 = word_260113;
      if (w_260114.startsWith(s_260058)) {
      if (tmplist_260112 != null) { tmplist_260112.push(w_260114); } else { tmplist_260112 = [w_260114]; };
      }
      
      }
    } while(false);
    autocomplete_words_258457[0] = nimCopy(null, tmplist_260112, NTI260096);
    }
    else {
      autocomplete_words_258457[0] = nimCopy(null, [], NTI260136);
    }
    
    }
    else {
      autocomplete_words_258457[0] = nimCopy(null, [], NTI260151);
    }
    
    view_update_258314();

  
}

function get_vnode_by_id_233132(id_233134, kxi_233135) {
  var result_233136 = null;

    if (kxi_233135.byId.hasOwnProperty(id_233134)) {
    result_233136 = kxi_233135.byId[id_233134];
    }
    

  return result_233136;

}

function raiseDivByZero() {
    var eHEX60gensym71257_71403 = null;
    eHEX60gensym71257_71403 = {m_type: NTI51081, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    eHEX60gensym71257_71403.message = nimCopy(null, makeNimstrLit("division by zero"), NTI46014);
    eHEX60gensym71257_71403.parent = null;
    raiseException(eHEX60gensym71257_71403, "DivByZeroError");

  
}

function confirm_mnemonic_260314(input_id_260316, advance_260317) {

    function HEX3Aanonymous_260321() {
          var Tmp1;
          var Tmp5;
          var Tmp6;

        confirm_mnemonic_advanced_260300[0] = advance_260317;
        var x_260323 = get_vnode_by_id_233132(input_id_260316, kxi_232324[0]);
        var s_260324 = value_210867(x_260323);
          if (!!((s_260324 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_260324 != null ? s_260324.length : 0));          }        if (Tmp1) {
        var words_260326 = null;
                input_words_258440[0] = s_260324.replace(/[ 　\n\r]+/g, ' ').trim();
        words_260326 = input_words_258440[0].split(' ');
      
        chklist_258465[0] = nimCopy(null, [], NTI260341);
        var idx_260342 = 0;
        var allvalid_260343 = true;
        L2: do {
          var word_260414 = null;
          var i_263890 = 0;
          var l_263891 = (words_260326 != null ? words_260326.length : 0);
          L3: do {
              L4: while (true) {
              if (!(i_263890 < l_263891)) break L4;
                word_260414 = words_260326[chckIndx(i_263890, 0, (words_260326 != null ? words_260326.length : 0)+0-1)-0];
                if (wl_select_258585[0].includes(word_260414)) {
                if (advance_260317) {
                var levs_260420 = nimCopy(null, levens_one((word_260414), bip39_wordlist_258490[0]), NTI260415);
                if (chklist_258465[0] != null) { chklist_258465[0].push({Field0: idx_260342, Field1: word_260414, Field2: true, Field3: nimCopy(null, levs_260420, NTI258463)}); } else { chklist_258465[0] = [{Field0: idx_260342, Field1: word_260414, Field2: true, Field3: nimCopy(null, levs_260420, NTI258463)}]; };
                }
                else {
                if (chklist_258465[0] != null) { chklist_258465[0].push({Field0: idx_260342, Field1: word_260414, Field2: true, Field3: []}); } else { chklist_258465[0] = [{Field0: idx_260342, Field1: word_260414, Field2: true, Field3: []}]; };
                }
                
                }
                else {
                  var levs_260456 = nimCopy(null, levens((word_260414), bip39_wordlist_258490[0]), NTI260451);
                  if (chklist_258465[0] != null) { chklist_258465[0].push({Field0: idx_260342, Field1: word_260414, Field2: false, Field3: nimCopy(null, levs_260456, NTI258463)}); } else { chklist_258465[0] = [{Field0: idx_260342, Field1: word_260414, Field2: false, Field3: nimCopy(null, levs_260456, NTI258463)}]; };
                  allvalid_260343 = false;
                }
                
                idx_260342 = addInt(idx_260342, 1);
                i_263890 = addInt(i_263890, 1);
                if (!(((words_260326 != null ? words_260326.length : 0) == l_263891))) {
                failed_assert_impl_60866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
          if (!allvalid_260343) Tmp6 = false; else {            Tmp6 = (12 <= idx_260342);          }          if (!Tmp6) Tmp5 = false; else {            Tmp5 = (modInt(idx_260342, 3) == 0);          }        if (Tmp5) {
                  var bip39 = coinlibs.bip39;
          if(bip39.validateMnemonic(input_words_258440[0], bip39_wordlist_258490[0])) {
            mnemonic_fulfill_258073[0] = true
          } else {
            Notify.show('Warning', 'There are no misspellings, but some words seem to be wrong.' + (advance_260317 ? '' : ' Try to use [Advanced Check]'), Notify.msgtype.warning);
          }
        
        if (mnemonic_fulfill_258073[0]) {
        view_selector_258124(4, false);
        }
        
        }
        
        }
        else {
          chklist_258465[0] = nimCopy(null, [], NTI260485);
        }
        
        autocomplete_words_258457[0] = nimCopy(null, [], NTI260500);
        view_update_258314();

      
    }

  var result_260320 = null;

    result_260320 = HEX3Aanonymous_260321;

  return result_260320;

}

function set_input_text_243077(n_243079, s_243080) {
    n_243079.text = s_243080;
    if (!((n_243079.dom == null))) {
    n_243079.dom.value = s_243080;
    }
    

  
}

function select_word_260165(input_id_260167, word_260168, whole_replace_260169) {

    function HEX3Aanonymous_260173() {
          var Tmp1;

        var x_260175 = get_vnode_by_id_233132(input_id_260167, kxi_232324[0]);
        var s_260176 = value_210867(x_260175);
          if (!!((s_260176 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_260176 != null ? s_260176.length : 0));          }        if (Tmp1) {
        var input_elm_260193 = document.getElementById((input_id_260167));
        var cur_260199 = input_elm_260193.selectionStart;
        var newcur_260200 = cur_260199;
        if (whole_replace_260169) {
                  var t = s_260176.substr(0, cur_260199).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            s_260176 = s_260176.substr(0, cur_260199 - t.length) + word_260168;
            newcur_260200 = s_260176.length;
          }
        
        set_input_text_243077(x_260175, s_260176);
        editing_words_258439[0] = s_260176;
        input_elm_260193.focus();
        input_elm_260193.selectionStart = newcur_260200;
        input_elm_260193.selectionEnd = newcur_260200;
        }
        else {
                    var t = s_260176.substr(0, cur_260199).replace(/[ 　\n\r]+/g, ' ').split(' ').slice(-1)[0];
          if(t && t.length > 0) {
            var tail = s_260176.substr(cur_260199) || '';
            s_260176 = s_260176.substr(0, cur_260199 - t.length) + word_260168 + tail;
            newcur_260200 = s_260176.length - tail.length;
          }
        
          set_input_text_243077(x_260175, s_260176);
          editing_words_258439[0] = s_260176;
          input_elm_260193.focus();
          input_elm_260193.selectionEnd = newcur_260200;
        }
        
        }
        
        autocomplete_words_258457[0] = nimCopy(null, [], NTI260273);
        view_update_258314();

      
    }

  var result_260172 = null;

    result_260172 = HEX3Aanonymous_260173;

  return result_260172;

}

function fix_word_260527(input_id_260529, idx_260530, word_260531) {

    function HEX3Aanonymous_260535() {
          var Tmp1;

        var x_260537 = get_vnode_by_id_233132(input_id_260529, kxi_232324[0]);
        var s_260538 = value_210867(x_260537);
          if (!!((s_260538 == null))) Tmp1 = false; else {            Tmp1 = (0 < (s_260538 != null ? s_260538.length : 0));          }        if (Tmp1) {
        var ret_260539 = null;
                ret_260539 = "";
        var count = 0;
        var find = false;
        var skip = false;
        for(var t in s_260538) {
          if(/[ 　\n\r]/.test(s_260538[t])) {
            ret_260539 += s_260538[t];
            if(find) {
              count++;
            }
            find = false;
            skip = false;
          } else {
            find = true;
            if(idx_260530 == count && skip == false) {
              ret_260539 += word_260531;
              skip = true;
            } else {
              if(!skip) {
                ret_260539 += s_260538[t];
              }
            }
          }
        }
      
        set_input_text_243077(x_260537, ret_260539);
        editing_words_258439[0] = ret_260539;
        confirm_mnemonic_260314(input_id_260529, confirm_mnemonic_advanced_260300[0])();
        }
        

      
    }

  var result_260534 = null;

    result_260534 = HEX3Aanonymous_260535;

  return result_260534;

}

function mnemonic_editor_260635() {
  var result_260637 = null;

    var input_id_260638 = "minput";
    var tmp_260675 = tree_213045(43, []);
    var tmp_260676 = tree_213045(43, []);
    tmp_260676.class = "ui clearing segment medit-seg";
    var tmp_260682 = tree_213045(43, []);
    tmp_260682.class = "ui form";
    var tmp_260683 = tree_213045(43, []);
    tmp_260683.class = "field";
    var tmp_260684 = tree_213045(102, []);
    add_211771(tmp_260684, text_213148(makeNimstrLit("Select mnemonic language")));
    add_211771(tmp_260683, tmp_260684);
    var tmp_260685 = tree_213045(43, []);
    tmp_260685.class = "ui selection dropdown";
    var tmp_260686 = tree_213045(103, []);
    set_attr_211568(tmp_260686, "type", "hidden");
    set_attr_211568(tmp_260686, "name", "mnemonic-language");
    valueHEX3D_210884(tmp_260686, "1");
    add_event_handler_242793(tmp_260686, 8, change_language_260567, kxi_232324[0]);
    add_211771(tmp_260685, tmp_260686);
    var tmp_260687 = tree_213045(61, []);
    tmp_260687.class = "dropdown icon";
    add_211771(tmp_260685, tmp_260687);
    var tmp_260688 = tree_213045(43, []);
    tmp_260688.class = "default text";
    add_211771(tmp_260688, text_213148(makeNimstrLit("Mnemonic Language")));
    add_211771(tmp_260685, tmp_260688);
    var tmp_260689 = tree_213045(43, []);
    tmp_260689.class = "menu";
    var tmp_260690 = tree_213045(43, []);
    tmp_260690.class = "item";
    set_attr_211568(tmp_260690, "data-value", "1");
    add_211771(tmp_260690, text_213148(makeNimstrLit("Japanese")));
    add_211771(tmp_260689, tmp_260690);
    var tmp_260691 = tree_213045(43, []);
    tmp_260691.class = "item";
    set_attr_211568(tmp_260691, "data-value", "0");
    add_211771(tmp_260691, text_213148(makeNimstrLit("English")));
    add_211771(tmp_260689, tmp_260691);
    add_211771(tmp_260685, tmp_260689);
    add_211771(tmp_260683, tmp_260685);
    add_211771(tmp_260682, tmp_260683);
    var tmp_260692 = tree_213045(43, []);
    tmp_260692.class = "field minput-field";
    var tmp_260693 = tree_213045(102, []);
    add_211771(tmp_260693, text_213148(makeNimstrLit("Import your mnemonic you already have")));
    add_211771(tmp_260692, tmp_260693);
    var tmp_260694 = tree_213045(109, []);
    tmp_260694.id = input_id_260638;
    valueHEX3D_210884(tmp_260694, editing_words_258439[0]);
    add_event_handler_242793(tmp_260694, 3, check_mnemonic_260054, kxi_232324[0]);
    add_event_handler_242793(tmp_260694, 16, check_mnemonic_260054, kxi_232324[0]);
    set_attr_211568(tmp_260694, "spellcheck", "false");
    add_211771(tmp_260692, tmp_260694);
    add_211771(tmp_260682, tmp_260692);
    add_211771(tmp_260676, tmp_260682);
    var tmp_260695 = tree_213045(104, []);
    tmp_260695.class = "ui right floated primary button";
    add_event_handler_242829(tmp_260695, 0, confirm_mnemonic_260314(input_id_260638, false), kxi_232324[0]);
    add_211771(tmp_260695, text_213148(makeNimstrLit("Check")));
    add_211771(tmp_260676, tmp_260695);
    var tmp_260696 = tree_213045(104, []);
    tmp_260696.class = "ui right floated default button";
    add_event_handler_242829(tmp_260696, 0, confirm_mnemonic_260314(input_id_260638, true), kxi_232324[0]);
    add_211771(tmp_260696, text_213148(makeNimstrLit("Advanced Check")));
    add_211771(tmp_260676, tmp_260696);
    add_211771(tmp_260675, tmp_260676);
    var tmp_260697 = tree_213045(43, []);
    tmp_260697.class = "medit-autocomp";
    L1: do {
      var word_260788 = null;
      var i_263856 = 0;
      var l_263857 = (autocomplete_words_258457[0] != null ? autocomplete_words_258457[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_263856 < l_263857)) break L3;
            word_260788 = autocomplete_words_258457[0][chckIndx(i_263856, 0, (autocomplete_words_258457[0] != null ? autocomplete_words_258457[0].length : 0)+0-1)-0];
            var tmp_260698 = tree_213045(104, []);
            tmp_260698.class = "ui mini teal label";
            add_event_handler_242829(tmp_260698, 0, select_word_260165(input_id_260638, word_260788, true), kxi_232324[0]);
            add_211771(tmp_260698, text_213201(word_260788));
            add_211771(tmp_260697, tmp_260698);
            i_263856 = addInt(i_263856, 1);
            if (!(((autocomplete_words_258457[0] != null ? autocomplete_words_258457[0].length : 0) == l_263857))) {
            failed_assert_impl_60866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L4: do {
      var i_260811 = 0;
      var colontmp__263876 = 0;
      colontmp__263876 = (chklist_258465[0] != null ? (chklist_258465[0].length-1) : -1);
      var res_263877 = 0;
      L5: do {
          L6: while (true) {
          if (!(res_263877 <= colontmp__263876)) break L6;
            i_260811 = res_263877;
            if (chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field2) {
            var tmp_260699 = tree_213045(104, []);
            tmp_260699.class = "ui mini green label";
            var tmp_260700 = tree_213045(61, []);
            tmp_260700.class = "check circle icon";
            add_211771(tmp_260700, text_213201((" " + chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field1)));
            add_211771(tmp_260699, tmp_260700);
            L7: do {
              var lev_260826 = null;
              var colontmp__263864 = null;
              colontmp__263864 = chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field3;
              var i_263865 = 0;
              var l_263866 = (colontmp__263864 != null ? colontmp__263864.length : 0);
              L8: do {
                  L9: while (true) {
                  if (!(i_263865 < l_263866)) break L9;
                    lev_260826 = colontmp__263864[chckIndx(i_263865, 0, (colontmp__263864 != null ? colontmp__263864.length : 0)+0-1)-0];
                    if (!((chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field1 == lev_260826))) {
                    var tmp_260701 = tree_213045(104, []);
                    tmp_260701.class = "ui mini blue basic label";
                    add_event_handler_242829(tmp_260701, 0, fix_word_260527(input_id_260638, chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field0, lev_260826), kxi_232324[0]);
                    add_211771(tmp_260701, text_213201(lev_260826));
                    add_211771(tmp_260699, tmp_260701);
                    }
                    
                    i_263865 = addInt(i_263865, 1);
                    if (!(((colontmp__263864 != null ? colontmp__263864.length : 0) == l_263866))) {
                    failed_assert_impl_60866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            add_211771(tmp_260697, tmp_260699);
            }
            else {
              var tmp_260702 = tree_213045(104, []);
              tmp_260702.class = "ui mini pink label";
              var tmp_260703 = tree_213045(61, []);
              tmp_260703.class = "x icon";
              add_211771(tmp_260703, text_213201((" " + chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field1)));
              add_211771(tmp_260702, tmp_260703);
              L10: do {
                var lev_260846 = null;
                var colontmp__263872 = null;
                colontmp__263872 = chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field3;
                var i_263873 = 0;
                var l_263874 = (colontmp__263872 != null ? colontmp__263872.length : 0);
                L11: do {
                    L12: while (true) {
                    if (!(i_263873 < l_263874)) break L12;
                      lev_260846 = colontmp__263872[chckIndx(i_263873, 0, (colontmp__263872 != null ? colontmp__263872.length : 0)+0-1)-0];
                      var tmp_260704 = tree_213045(104, []);
                      tmp_260704.class = "ui mini blue basic label";
                      add_event_handler_242829(tmp_260704, 0, fix_word_260527(input_id_260638, chklist_258465[0][chckIndx(i_260811, 0, (chklist_258465[0] != null ? chklist_258465[0].length : 0)+0-1)-0].Field0, lev_260846), kxi_232324[0]);
                      add_211771(tmp_260704, text_213201(lev_260846));
                      add_211771(tmp_260702, tmp_260704);
                      i_263873 = addInt(i_263873, 1);
                      if (!(((colontmp__263872 != null ? colontmp__263872.length : 0) == l_263874))) {
                      failed_assert_impl_60866(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while(false);
              } while(false);
              add_211771(tmp_260697, tmp_260702);
            }
            
            res_263877 = addInt(res_263877, 1);
          }
      } while(false);
    } while(false);
    add_211771(tmp_260675, tmp_260697);
    result_260637 = tmp_260675;

  return result_260637;

}

function protect_selector_258381(protect_type_258383) {

    function HEX3Aanonymous_258387() {
              qrReader.hide();
    
        current_protect_type_258043[0] = protect_type_258383;
        show_page1_258069[0] = false;
        show_page2_258070[0] = true;
        if ((current_protect_type_258043[0] == 0)) {
                $('#keyselector').removeClass('grey').addClass('olive');
        $('#passselector').removeClass('olive').addClass('grey');
      
        }
        else {
                  $('#passselector').removeClass('grey').addClass('olive');
        $('#keyselector').removeClass('olive').addClass('grey');
      
        }
        
        view_update_258314();

      
    }

  var result_258386 = null;

    result_258386 = HEX3Aanonymous_258387;

  return result_258386;

}

function confirm_key_card_259935(ev_259937, n_259938) {
    var ret_lock_259939 = false;
        console.log('confirmKeyCard');
    var wallet = pastel.wallet;
    ret_lock_259939 = wallet.lockShieldedKeys(key_card_val_259835[0], 1, true);
  
    if (ret_lock_259939) {
    key_card_fulfill_258074[0] = true;
    show_page3_258071[0] = true;
    view_update_258314();
    }
    else {
            Notify.show("Error", "Failed to lock your wallet with the key card.", Notify.msgtype.error);
    
    }
    

  
}

function cb_key_qr_done_259849(data_259851) {
    rawEcho(makeNimstrLit("cbQrDone:"), cstrToNimstr(data_259851));
    key_card_val_259835[0] = data_259851;
        qrReader.hide();
  
    view_selector_258124(8, false);

  
}

function show_key_qr_259902() {

    function HEX3Aanonymous_259907() {
        key_card_fulfill_258074[0] = false;
        show_page3_258071[0] = false;
              qrReader.show(cb_key_qr_done_259849);
    

      
    }

  var result_259906 = null;

    result_259906 = HEX3Aanonymous_259907;

  return result_259906;

}

function change_passphrase_261745(ev_261747, n_261748) {
    passphrase_fulfill_258075[0] = false;
    show_page3_258071[0] = false;
    pass_phrase_258467[0] = value_210867(n_261748);
    view_update_258314();

  
}

function confirm_passphrase_261762(ev_261764, n_261765) {
    var ret_lock_261766 = false;
        var wallet = pastel.wallet;
    ret_lock_261766 = wallet.lockShieldedKeys($('input[name="input-passphrase"]').val(), 2, true);
  
    if (ret_lock_261766) {
    passphrase_fulfill_258075[0] = true;
    show_page3_258071[0] = true;
    view_update_258314();
    }
    else {
            Notify.show("Error", "Failed to lock your wallet with the passphrase.", Notify.msgtype.error);
    
    }
    

  
}

function passphrase_editor_261780() {
  var result_261782 = null;

    var tmp_261783 = tree_213045(43, []);
    var tmp_261784 = tree_213045(43, []);
    tmp_261784.class = "ui clearing segment passphrase-seg";
    var tmp_261785 = tree_213045(43, []);
    tmp_261785.class = "ui inverted segment";
    var tmp_261786 = tree_213045(24, []);
    tmp_261786.class = "ui grey inverted header center";
    add_211771(tmp_261786, text_213148(makeNimstrLit("Input passphrase")));
    add_211771(tmp_261785, tmp_261786);
    var tmp_261787 = tree_213045(43, []);
    tmp_261787.class = "ui form";
    var tmp_261788 = tree_213045(43, []);
    tmp_261788.class = "field";
    var tmp_261789 = tree_213045(103, []);
    tmp_261789.class = "center";
    set_attr_211568(tmp_261789, "type", "text");
    set_attr_211568(tmp_261789, "name", "input-passphrase");
    valueHEX3D_210884(tmp_261789, pass_phrase_258467[0]);
    set_attr_211568(tmp_261789, "placeholder", "Passphrase");
    add_event_handler_242793(tmp_261789, 3, change_passphrase_261745, kxi_232324[0]);
    add_211771(tmp_261788, tmp_261789);
    add_211771(tmp_261787, tmp_261788);
    add_211771(tmp_261785, tmp_261787);
    add_211771(tmp_261784, tmp_261785);
    var tmp_261790 = tree_213045(104, []);
    tmp_261790.class = "ui right floated olive button";
    add_event_handler_242793(tmp_261790, 0, confirm_passphrase_261762, kxi_232324[0]);
    add_211771(tmp_261790, text_213148(makeNimstrLit("Save")));
    add_211771(tmp_261784, tmp_261790);
    add_211771(tmp_261783, tmp_261784);
    result_261782 = tmp_261783;

  return result_261782;

}

function btn_send_261952() {

    function HEX3Aanonymous_261957() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 1) ? 0 : 1);
    

      
    }

  var result_261956 = null;

    result_261956 = HEX3Aanonymous_261957;

  return result_261956;

}

function btn_receive_261985() {

    function HEX3Aanonymous_261990() {
              if(!pastel.wallet || !pastel.utxoballs) {
        return;
      }
      sendrecv_select((sendrecv_switch == 2) ? 0 : 2);
    

      
    }

  var result_261989 = null;

    result_261989 = HEX3Aanonymous_261990;

  return result_261989;

}

function btn_recv_close_262051() {

    function HEX3Aanonymous_262056() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(2);
    

      
    }

  var result_262055 = null;

    result_262055 = HEX3Aanonymous_262056;

  return result_262055;

}

function recv_address_selector_262084() {
  var result_262086 = null;

    var tmp_262087 = tree_213045(43, []);
    tmp_262087.id = "receive-address";
    tmp_262087.class = "ui center aligned segment hidden";
    var tmp_262088 = tree_213045(43, []);
    tmp_262088.class = "ui top attached label recvaddress";
    add_211771(tmp_262088, text_213148(makeNimstrLit("Receive Address ")));
    var tmp_262089 = tree_213045(70, []);
    var tmp_262090 = tree_213045(61, []);
    tmp_262090.class = "close icon btn-close";
    add_event_handler_242829(tmp_262090, 0, btn_recv_close_262051(), kxi_232324[0]);
    add_211771(tmp_262089, tmp_262090);
    add_211771(tmp_262088, tmp_262089);
    add_211771(tmp_262087, tmp_262088);
    var tmp_262091 = tree_213045(43, []);
    tmp_262091.class = "ui mini basic icon buttons";
    var tmp_262092 = tree_213045(104, []);
    tmp_262092.id = "btn-recv-copy";
    tmp_262092.class = "ui button";
    set_attr_211568(tmp_262092, "title", "Copy");
    var tmp_262093 = tree_213045(61, []);
    tmp_262093.class = "paperclip icon";
    add_211771(tmp_262092, tmp_262093);
    add_211771(tmp_262091, tmp_262092);
    var tmp_262094 = tree_213045(104, []);
    tmp_262094.id = "btn-recv-qrcode";
    tmp_262094.class = "ui button";
    set_attr_211568(tmp_262094, "title", "QR Code");
    var tmp_262095 = tree_213045(61, []);
    tmp_262095.class = "qrcode icon";
    add_211771(tmp_262094, tmp_262095);
    add_211771(tmp_262091, tmp_262094);
    add_211771(tmp_262087, tmp_262091);
    var tmp_262096 = tree_213045(43, []);
    tmp_262096.id = "address-text";
    tmp_262096.class = "address";
    add_211771(tmp_262096, text_213148([]));
    add_211771(tmp_262087, tmp_262096);
    var tmp_262097 = tree_213045(43, []);
    tmp_262097.class = "balls";
    var tmp_262098 = tree_213045(43, []);
    tmp_262098.class = "used";
    var tmp_262099 = tree_213045(43, []);
    tmp_262099.class = "circular ui icon mini button ball";
    var tmp_262100 = tree_213045(75, []);
    set_attr_211568(tmp_262100, "src", "");
    add_211771(tmp_262099, tmp_262100);
    add_211771(tmp_262098, tmp_262099);
    add_211771(tmp_262097, tmp_262098);
    var tmp_262101 = tree_213045(43, []);
    tmp_262101.class = "new";
    var tmp_262102 = tree_213045(43, []);
    tmp_262102.class = "circular ui icon mini button ball";
    var tmp_262103 = tree_213045(75, []);
    set_attr_211568(tmp_262103, "src", "");
    add_211771(tmp_262102, tmp_262103);
    add_211771(tmp_262101, tmp_262102);
    var tmp_262104 = tree_213045(43, []);
    tmp_262104.class = "circular ui icon mini button ball";
    var tmp_262105 = tree_213045(75, []);
    set_attr_211568(tmp_262105, "src", "");
    add_211771(tmp_262104, tmp_262105);
    add_211771(tmp_262101, tmp_262104);
    var tmp_262106 = tree_213045(43, []);
    tmp_262106.class = "circular ui icon mini button ball";
    var tmp_262107 = tree_213045(75, []);
    set_attr_211568(tmp_262107, "src", "");
    add_211771(tmp_262106, tmp_262107);
    add_211771(tmp_262101, tmp_262106);
    var tmp_262108 = tree_213045(43, []);
    tmp_262108.class = "circular ui icon mini button ball";
    var tmp_262109 = tree_213045(75, []);
    set_attr_211568(tmp_262109, "src", "");
    add_211771(tmp_262108, tmp_262109);
    add_211771(tmp_262101, tmp_262108);
    var tmp_262110 = tree_213045(43, []);
    tmp_262110.class = "circular ui icon mini button ball";
    var tmp_262111 = tree_213045(75, []);
    set_attr_211568(tmp_262111, "src", "");
    add_211771(tmp_262110, tmp_262111);
    add_211771(tmp_262101, tmp_262110);
    add_211771(tmp_262097, tmp_262101);
    add_211771(tmp_262087, tmp_262097);
    result_262086 = tmp_262087;

  return result_262086;

}

function recv_address_modal_262227() {
  var result_262229 = null;

    var tmp_262230 = tree_213045(43, []);
    tmp_262230.id = "recv-modal";
    tmp_262230.class = "ui";
    var tmp_262231 = tree_213045(61, []);
    tmp_262231.class = "close icon btn-close-arc";
    add_211771(tmp_262230, tmp_262231);
    var tmp_262232 = tree_213045(43, []);
    tmp_262232.class = "close-arc";
    add_211771(tmp_262230, tmp_262232);
    var tmp_262233 = tree_213045(43, []);
    tmp_262233.id = "recv-qrcode";
    tmp_262233.class = "qrcode";
    set_attr_211568(tmp_262233, "title", "");
    var tmp_262234 = tree_213045(84, []);
    set_attr_211568(tmp_262234, "width", "0");
    set_attr_211568(tmp_262234, "height", "0");
    add_211771(tmp_262233, tmp_262234);
    add_211771(tmp_262230, tmp_262233);
    var tmp_262235 = tree_213045(43, []);
    tmp_262235.id = "recvaddr-form";
    tmp_262235.class = "ui container";
    var tmp_262236 = tree_213045(43, []);
    tmp_262236.class = "ui form";
    var tmp_262237 = tree_213045(43, []);
    tmp_262237.class = "two fields";
    var tmp_262238 = tree_213045(43, []);
    tmp_262238.class = "field";
    var tmp_262239 = tree_213045(102, []);
    add_211771(tmp_262239, text_213148(makeNimstrLit("Receive Address")));
    add_211771(tmp_262238, tmp_262239);
    var tmp_262240 = tree_213045(43, []);
    tmp_262240.class = "ui selection dropdown addr-selection";
    set_attr_211568(tmp_262240, "tabindex", "0");
    var tmp_262241 = tree_213045(103, []);
    set_attr_211568(tmp_262241, "type", "hidden");
    set_attr_211568(tmp_262241, "name", "address");
    valueHEX3D_210884(tmp_262241, "");
    add_211771(tmp_262240, tmp_262241);
    var tmp_262242 = tree_213045(61, []);
    tmp_262242.class = "dropdown icon";
    add_211771(tmp_262240, tmp_262242);
    var tmp_262243 = tree_213045(43, []);
    tmp_262243.class = "text";
    var tmp_262244 = tree_213045(75, []);
    set_attr_211568(tmp_262244, "clsss", "ui mini avatar image");
    set_attr_211568(tmp_262244, "src", "");
    add_211771(tmp_262243, tmp_262244);
    add_211771(tmp_262243, text_213148([]));
    add_211771(tmp_262240, tmp_262243);
    var tmp_262245 = tree_213045(43, []);
    tmp_262245.class = "menu";
    set_attr_211568(tmp_262245, "tabindex", "-1");
    add_211771(tmp_262240, tmp_262245);
    add_211771(tmp_262238, tmp_262240);
    add_211771(tmp_262237, tmp_262238);
    var tmp_262246 = tree_213045(43, []);
    tmp_262246.class = "field";
    var tmp_262247 = tree_213045(102, []);
    add_211771(tmp_262247, text_213148(makeNimstrLit("Amount")));
    add_211771(tmp_262246, tmp_262247);
    var tmp_262248 = tree_213045(43, []);
    tmp_262248.class = "ui right labeled input";
    var tmp_262249 = tree_213045(103, []);
    tmp_262249.class = "right";
    set_attr_211568(tmp_262249, "type", "text");
    set_attr_211568(tmp_262249, "name", "amount");
    set_attr_211568(tmp_262249, "placeholder", "Amount");
    add_211771(tmp_262248, tmp_262249);
    var tmp_262250 = tree_213045(43, []);
    tmp_262250.class = "ui basic label";
    add_211771(tmp_262250, text_213148(makeNimstrLit("ZNY")));
    add_211771(tmp_262248, tmp_262250);
    add_211771(tmp_262246, tmp_262248);
    add_211771(tmp_262237, tmp_262246);
    add_211771(tmp_262236, tmp_262237);
    var tmp_262251 = tree_213045(43, []);
    tmp_262251.class = "two fields";
    var tmp_262252 = tree_213045(43, []);
    tmp_262252.class = "field";
    var tmp_262253 = tree_213045(102, []);
    add_211771(tmp_262253, text_213148(makeNimstrLit("Label")));
    add_211771(tmp_262252, tmp_262253);
    var tmp_262254 = tree_213045(103, []);
    tmp_262254.class = "ui input";
    set_attr_211568(tmp_262254, "type", "text");
    set_attr_211568(tmp_262254, "name", "label");
    set_attr_211568(tmp_262254, "placeholder", "Label");
    add_211771(tmp_262252, tmp_262254);
    add_211771(tmp_262251, tmp_262252);
    var tmp_262255 = tree_213045(43, []);
    tmp_262255.class = "field";
    var tmp_262256 = tree_213045(102, []);
    add_211771(tmp_262256, text_213148(makeNimstrLit("Message")));
    add_211771(tmp_262255, tmp_262256);
    var tmp_262257 = tree_213045(109, []);
    tmp_262257.class = "ui textarea";
    set_attr_211568(tmp_262257, "rows", "2");
    set_attr_211568(tmp_262257, "name", "message");
    set_attr_211568(tmp_262257, "placeholder", "Message");
    add_211771(tmp_262255, tmp_262257);
    add_211771(tmp_262251, tmp_262255);
    add_211771(tmp_262236, tmp_262251);
    add_211771(tmp_262235, tmp_262236);
    add_211771(tmp_262230, tmp_262235);
    result_262229 = tmp_262230;

  return result_262229;

}

function btn_send_close_262018() {

    function HEX3Aanonymous_262023() {
              clearTimeout(sendrecv_switch_tval);
      sendrecv_switch = 0;
      reset_switch(1);
    

      
    }

  var result_262022 = null;

    result_262022 = HEX3Aanonymous_262023;

  return result_262022;

}

function send_form_262397() {
  var result_262399 = null;

    var tmp_262400 = tree_213045(43, []);
    tmp_262400.id = "send-coins";
    tmp_262400.class = "ui center aligned segment hidden";
    var tmp_262401 = tree_213045(43, []);
    tmp_262401.class = "ui top attached label sendcoins";
    add_211771(tmp_262401, text_213148(makeNimstrLit("Send Coins ")));
    var tmp_262402 = tree_213045(70, []);
    var tmp_262403 = tree_213045(61, []);
    tmp_262403.class = "close icon btn-close";
    add_event_handler_242829(tmp_262403, 0, btn_send_close_262018(), kxi_232324[0]);
    add_211771(tmp_262402, tmp_262403);
    add_211771(tmp_262401, tmp_262402);
    add_211771(tmp_262400, tmp_262401);
    var tmp_262404 = tree_213045(43, []);
    tmp_262404.class = "ui right floated mini basic icon buttons";
    var tmp_262405 = tree_213045(104, []);
    tmp_262405.id = "btn-send-lock";
    tmp_262405.class = "ui button";
    set_attr_211568(tmp_262405, "title", "Locked");
    var tmp_262406 = tree_213045(61, []);
    tmp_262406.class = "lock icon";
    add_211771(tmp_262405, tmp_262406);
    add_211771(tmp_262404, tmp_262405);
    add_211771(tmp_262400, tmp_262404);
    var tmp_262407 = tree_213045(43, []);
    tmp_262407.class = "ui mini basic icon buttons btn-send-tools";
    var tmp_262408 = tree_213045(104, []);
    tmp_262408.id = "btn-send-clear";
    tmp_262408.class = "ui button";
    set_attr_211568(tmp_262408, "title", "Clear");
    var tmp_262409 = tree_213045(61, []);
    tmp_262409.class = "eraser icon";
    add_211771(tmp_262408, tmp_262409);
    add_211771(tmp_262407, tmp_262408);
    var tmp_262410 = tree_213045(104, []);
    tmp_262410.id = "btn-send-qrcode";
    tmp_262410.class = "ui button";
    set_attr_211568(tmp_262410, "title", "Scan QR Code");
    var tmp_262411 = tree_213045(61, []);
    tmp_262411.class = "camera icon";
    add_211771(tmp_262410, tmp_262411);
    add_211771(tmp_262407, tmp_262410);
    add_211771(tmp_262400, tmp_262407);
    var tmp_262412 = tree_213045(43, []);
    tmp_262412.class = "ui form";
    var tmp_262413 = tree_213045(43, []);
    tmp_262413.class = "field";
    var tmp_262414 = tree_213045(102, []);
    add_211771(tmp_262414, text_213148(makeNimstrLit("Send Address")));
    add_211771(tmp_262413, tmp_262414);
    var tmp_262415 = tree_213045(43, []);
    tmp_262415.class = "ui small input";
    var tmp_262416 = tree_213045(103, []);
    tmp_262416.class = "center";
    set_attr_211568(tmp_262416, "type", "text");
    set_attr_211568(tmp_262416, "name", "address");
    set_attr_211568(tmp_262416, "placeholder", "Address");
    add_211771(tmp_262415, tmp_262416);
    add_211771(tmp_262413, tmp_262415);
    add_211771(tmp_262412, tmp_262413);
    var tmp_262417 = tree_213045(43, []);
    tmp_262417.class = "field";
    var tmp_262418 = tree_213045(102, []);
    add_211771(tmp_262418, text_213148(makeNimstrLit("Amount")));
    add_211771(tmp_262417, tmp_262418);
    var tmp_262419 = tree_213045(43, []);
    tmp_262419.class = "ui small input";
    var tmp_262420 = tree_213045(103, []);
    tmp_262420.class = "center";
    set_attr_211568(tmp_262420, "type", "text");
    set_attr_211568(tmp_262420, "name", "amount");
    set_attr_211568(tmp_262420, "placeholder", "Amount");
    add_211771(tmp_262419, tmp_262420);
    var tmp_262421 = tree_213045(43, []);
    tmp_262421.class = "ui mini basic icon buttons utxoctrl";
    var tmp_262422 = tree_213045(104, []);
    tmp_262422.id = "btn-utxo-minus";
    tmp_262422.class = "ui button";
    set_attr_211568(tmp_262422, "title", "-1 Ball");
    var tmp_262423 = tree_213045(61, []);
    tmp_262423.class = "minus circle icon";
    add_211771(tmp_262422, tmp_262423);
    add_211771(tmp_262421, tmp_262422);
    var tmp_262424 = tree_213045(104, []);
    tmp_262424.id = "btn-utxo-count";
    tmp_262424.class = "ui button sendutxos";
    add_211771(tmp_262424, text_213148(makeNimstrLit("...")));
    add_211771(tmp_262421, tmp_262424);
    var tmp_262425 = tree_213045(104, []);
    tmp_262425.id = "btn-utxo-plus";
    tmp_262425.class = "ui button";
    set_attr_211568(tmp_262425, "title", "+1 Ball");
    var tmp_262426 = tree_213045(61, []);
    tmp_262426.class = "plus circle icon";
    add_211771(tmp_262425, tmp_262426);
    add_211771(tmp_262421, tmp_262425);
    add_211771(tmp_262419, tmp_262421);
    add_211771(tmp_262417, tmp_262419);
    add_211771(tmp_262412, tmp_262417);
    var tmp_262427 = tree_213045(43, []);
    tmp_262427.class = "ui list uri-options";
    L1: do {
      var d_262547 = null;
      var v_263989 = null;
      for (var k in uriOptions) {
        if (!uriOptions.hasOwnProperty(k)) continue;
        v_263989=uriOptions[k];
      d_262547 = v_263989;
      var tmp_262428 = tree_213045(43, []);
      tmp_262428.class = "item";
      var tmp_262429 = tree_213045(43, []);
      tmp_262429.class = "content";
      var tmp_262430 = tree_213045(43, []);
      tmp_262430.class = "header";
      add_211771(tmp_262430, text_213201(d_262547.key));
      add_211771(tmp_262429, tmp_262430);
      var tmp_262431 = tree_213045(43, []);
      tmp_262431.class = "description";
      add_211771(tmp_262431, text_213201(d_262547.value));
      add_211771(tmp_262429, tmp_262431);
      add_211771(tmp_262428, tmp_262429);
      add_211771(tmp_262427, tmp_262428);
      }
    } while(false);
    add_211771(tmp_262412, tmp_262427);
    var tmp_262432 = tree_213045(43, []);
    tmp_262432.class = "fluid ui buttons";
    var tmp_262433 = tree_213045(104, []);
    tmp_262433.id = "btn-tx-send";
    tmp_262433.class = "ui inverted olive button center btn-tx-send";
    add_211771(tmp_262433, text_213148(makeNimstrLit("Send")));
    add_211771(tmp_262432, tmp_262433);
    add_211771(tmp_262412, tmp_262432);
    add_211771(tmp_262400, tmp_262412);
    result_262399 = tmp_262400;

  return result_262399;

}

function go_settings_261838() {

    function HEX3Aanonymous_261843() {
        rawEcho(nimBoolToStr(show_page4_258072[0]));
        if (!(show_page4_258072[0])) {
        view_selector_258124(14, false);
        supress_redraw_258076[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          view_selector_258124(14, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_261842 = null;

    result_261842 = HEX3Aanonymous_261843;

  return result_261842;

}

function go_logs_261873() {

    function HEX3Aanonymous_261878() {
        if (!(show_page4_258072[0])) {
        view_selector_258124(13, false);
        supress_redraw_258076[0] = true;
                $('#section4').show();
      
        }
        else {
                  TradeLogs.stop();
        $('.backpage').visibility({silent: true});
        $('#tradeunconfs').empty();
        $('#tradelogs').empty();
      
          view_selector_258124(13, false);
                  goSection('#section4');
      
        }
        

      
    }

  var result_261877 = null;

    result_261877 = HEX3Aanonymous_261878;

  return result_261877;

}

function back_wallet_261906() {

    function HEX3Aanonymous_261911() {
        view_selector_258124(12, true);
              goSection('#section3', page_scroll_done);
    

      
    }

  var result_261910 = null;

    result_261910 = HEX3Aanonymous_261911;

  return result_261910;

}

function settings_page_262662() {
  var result_262664 = null;

    var tmp_262665 = tree_213045(43, []);
    tmp_262665.id = "settings";
    tmp_262665.class = "ui container";
    var tmp_262666 = tree_213045(23, []);
    tmp_262666.class = "ui dividing header";
    add_211771(tmp_262666, text_213148(makeNimstrLit("Settings")));
    add_211771(tmp_262665, tmp_262666);
    var tmp_262667 = tree_213045(104, []);
    tmp_262667.id = "btn-reset";
    tmp_262667.class = "ui inverted red button";
    add_211771(tmp_262667, text_213148(makeNimstrLit("Reset Wallet")));
    add_211771(tmp_262665, tmp_262667);
    var tmp_262668 = tree_213045(43, []);
    tmp_262668.class = "ui pink inverted segment";
    add_211771(tmp_262668, text_213148(makeNimstrLit("        Delete all your wallet data in your web browser, including your encrypted secret keys.\x0A         If you have coins in your wallet or waiting for receiving coins, make sure you have the seed cards\x0A         or mnemonics before deleting it. Otherwise you may lost your coins forever.\x0A      ")));
    add_211771(tmp_262665, tmp_262668);
    var tmp_262669 = tree_213045(43, []);
    tmp_262669.class = "ui checkbox";
    var tmp_262670 = tree_213045(103, []);
    set_attr_211568(tmp_262670, "type", "checkbox");
    set_attr_211568(tmp_262670, "name", "confirm");
    add_211771(tmp_262669, tmp_262670);
    var tmp_262671 = tree_213045(102, []);
    add_211771(tmp_262671, text_213148(makeNimstrLit("I confirmed that I have the seed cards or mnemonics or no coins in my wallet.")));
    add_211771(tmp_262669, tmp_262671);
    add_211771(tmp_262665, tmp_262669);
    result_262664 = tmp_262665;

  return result_262664;

}

function settings_modal_262596() {
  var result_262598 = null;

    var tmp_262599 = tree_213045(43, []);
    tmp_262599.id = "settings-modal";
    tmp_262599.class = "ui basic modal";
    var tmp_262600 = tree_213045(43, []);
    tmp_262600.class = "ui icon header";
    var tmp_262601 = tree_213045(61, []);
    tmp_262601.class = "trash icon";
    add_211771(tmp_262600, tmp_262601);
    add_211771(tmp_262600, text_213148(makeNimstrLit("Reset Wallet")));
    add_211771(tmp_262599, tmp_262600);
    var tmp_262602 = tree_213045(43, []);
    tmp_262602.class = "content";
    var tmp_262603 = tree_213045(31, []);
    add_211771(tmp_262603, text_213148(makeNimstrLit("Are you sure to reset your wallet?")));
    add_211771(tmp_262602, tmp_262603);
    add_211771(tmp_262599, tmp_262602);
    var tmp_262604 = tree_213045(43, []);
    tmp_262604.class = "actions";
    var tmp_262605 = tree_213045(43, []);
    tmp_262605.class = "ui basic cancel inverted button";
    var tmp_262606 = tree_213045(61, []);
    tmp_262606.class = "remove icon";
    add_211771(tmp_262605, tmp_262606);
    add_211771(tmp_262605, text_213148(makeNimstrLit("Cancel")));
    add_211771(tmp_262604, tmp_262605);
    var tmp_262607 = tree_213045(43, []);
    tmp_262607.class = "ui red ok inverted button";
    var tmp_262608 = tree_213045(61, []);
    tmp_262608.class = "checkmark icon";
    add_211771(tmp_262607, tmp_262608);
    add_211771(tmp_262607, text_213148(makeNimstrLit("Reset")));
    add_211771(tmp_262604, tmp_262607);
    add_211771(tmp_262599, tmp_262604);
    result_262598 = tmp_262599;

  return result_262598;

}

function app_main_262713(data_262715) {
  var result_262716 = null;

    var tmp_262717 = tree_213045(43, []);
    if (show_page1_258069[0]) {
    var tmp_262718 = tree_213045(17, []);
    tmp_262718.id = "section1";
    tmp_262718.class = "section";
    var tmp_262719 = tree_213045(43, []);
    tmp_262719.class = "intro";
    var tmp_262720 = tree_213045(43, []);
    tmp_262720.class = "intro-head";
    var tmp_262721 = tree_213045(43, []);
    tmp_262721.class = "caption";
    add_211771(tmp_262721, text_213148(makeNimstrLit("Pastel Wallet")));
    add_211771(tmp_262720, tmp_262721);
    var tmp_262722 = tree_213045(43, []);
    tmp_262722.class = "ui container method-selector";
    var tmp_262723 = tree_213045(43, []);
    tmp_262723.class = "title";
    add_211771(tmp_262723, text_213148(makeNimstrLit("Scan your seed cards or mnemonic to start.")));
    add_211771(tmp_262722, tmp_262723);
    var tmp_262724 = tree_213045(43, []);
    tmp_262724.class = "ui buttons";
    var tmp_262725 = tree_213045(104, []);
    tmp_262725.id = "seedselector";
    tmp_262725.class = "ui olive button";
    add_event_handler_242829(tmp_262725, 0, import_selector_258329(0), kxi_232324[0]);
    var tmp_262726 = tree_213045(61, []);
    tmp_262726.class = "qrcode icon";
    add_211771(tmp_262725, tmp_262726);
    add_211771(tmp_262725, text_213148(makeNimstrLit("Seed card")));
    add_211771(tmp_262724, tmp_262725);
    var tmp_262727 = tree_213045(43, []);
    tmp_262727.class = "or";
    add_211771(tmp_262724, tmp_262727);
    var tmp_262728 = tree_213045(104, []);
    tmp_262728.id = "mnemonicselector";
    tmp_262728.class = "ui grey button";
    add_event_handler_242829(tmp_262728, 0, import_selector_258329(1), kxi_232324[0]);
    var tmp_262729 = tree_213045(61, []);
    tmp_262729.class = "list alternate icon";
    add_211771(tmp_262728, tmp_262729);
    add_211771(tmp_262728, text_213148(makeNimstrLit("Mnemonic")));
    add_211771(tmp_262724, tmp_262728);
    add_211771(tmp_262722, tmp_262724);
    add_211771(tmp_262720, tmp_262722);
    add_211771(tmp_262719, tmp_262720);
    var tmp_262730 = tree_213045(43, []);
    tmp_262730.class = "intro-body";
    if ((current_import_type_258037[0] == 0)) {
    var tmp_262731 = tree_213045(43, []);
    tmp_262731.id = "seed-seg";
    tmp_262731.class = "ui left aligned segment seed-seg";
    if (show_scan_result_258064[0]) {
    var tmp_262732 = tree_213045(43, []);
    tmp_262732.class = "ui link cards seed-card-holder";
    tmp_262732.id = "seed-card-holder";
    L1: do {
      var idx_263029 = 0;
      var seed_card_info_263030 = null;
      var i_263600 = 0;
      var l_263601 = (seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_263600 < l_263601)) break L3;
            idx_263029 = i_263600;
            seed_card_info_263030 = seed_card_infos_258438[0][chckIndx(i_263600, 0, (seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0)+0-1)-0];
            add_211771(tmp_262732, seed_card_260915(seed_card_info_263030, idx_263029));
            i_263600 = addInt(i_263600, 1);
            if (!(((seed_card_infos_258438[0] != null ? seed_card_infos_258438[0].length : 0) == l_263601))) {
            failed_assert_impl_60866(makeNimstrLit("iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    var tmp_262733 = tree_213045(43, []);
    tmp_262733.class = "seed-add-container";
    var tmp_262734 = tree_213045(104, []);
    tmp_262734.class = "circular ui icon button bt-add-seed";
    add_event_handler_242829(tmp_262734, 0, show_seed_qr_259869(), kxi_232324[0]);
    var tmp_262735 = tree_213045(61, []);
    tmp_262735.class = "plus icon";
    add_211771(tmp_262734, tmp_262735);
    add_211771(tmp_262733, tmp_262734);
    add_211771(tmp_262732, tmp_262733);
    add_211771(tmp_262731, tmp_262732);
    var tmp_262736 = tree_213045(44, []);
    tmp_262736.class = "pagenext";
    set_attr_211568(tmp_262736, "href", "#section2");
    var tmp_262737 = tree_213045(70, []);
    add_211771(tmp_262736, tmp_262737);
    add_211771(tmp_262736, text_213148(makeNimstrLit("Next")));
    add_211771(tmp_262731, tmp_262736);
    }
    
    if (show_scanning_258062[0]) {
    var tmp_262738 = tree_213045(43, []);
    tmp_262738.class = "qr-scanning";
    var tmp_262739 = tree_213045(43, []);
    add_211771(tmp_262738, tmp_262739);
    var tmp_262740 = tree_213045(43, []);
    add_211771(tmp_262738, tmp_262740);
    add_211771(tmp_262731, tmp_262738);
    }
    
    if (show_scan_seed_btn_258061[0]) {
    var tmp_262741 = tree_213045(43, []);
    tmp_262741.class = "ui teal labeled icon button bt-scan-seed";
    add_event_handler_242829(tmp_262741, 0, show_seed_qr_259869(), kxi_232324[0]);
    add_211771(tmp_262741, text_213148(makeNimstrLit("Scan seed card with camera")));
    var tmp_262742 = tree_213045(61, []);
    tmp_262742.class = "camera icon";
    add_211771(tmp_262741, tmp_262742);
    add_211771(tmp_262731, tmp_262741);
    }
    
    if (show_cam_tools_258063[0]) {
    var tmp_262743 = tree_213045(43, []);
    tmp_262743.class = "ui small basic icon buttons camtools";
    var tmp_262744 = tree_213045(104, []);
    tmp_262744.class = "ui button";
    add_event_handler_242829(tmp_262744, 0, cam_change_259953(), kxi_232324[0]);
    var tmp_262745 = tree_213045(61, []);
    tmp_262745.class = "camera icon";
    add_211771(tmp_262744, tmp_262745);
    add_211771(tmp_262743, tmp_262744);
    var tmp_262746 = tree_213045(104, []);
    tmp_262746.class = "ui button";
    add_event_handler_242829(tmp_262746, 0, cam_close_259986(), kxi_232324[0]);
    var tmp_262747 = tree_213045(61, []);
    tmp_262747.class = "window close icon";
    add_211771(tmp_262746, tmp_262747);
    add_211771(tmp_262743, tmp_262746);
    add_211771(tmp_262731, tmp_262743);
    }
    
    var tmp_262748 = tree_213045(84, []);
    tmp_262748.id = "qrcanvas";
    add_211771(tmp_262731, tmp_262748);
    var tmp_262749 = tree_213045(43, []);
    tmp_262749.class = "ui dimmer qrcamera-loader";
    var tmp_262750 = tree_213045(43, []);
    tmp_262750.class = "ui indeterminate text loader";
    add_211771(tmp_262750, text_213148(makeNimstrLit("Preparing Camera")));
    add_211771(tmp_262749, tmp_262750);
    add_211771(tmp_262731, tmp_262749);
    var tmp_262751 = tree_213045(43, []);
    tmp_262751.class = "ui dimmer qrcamera-shutter";
    add_211771(tmp_262731, tmp_262751);
    add_211771(tmp_262730, tmp_262731);
    }
    else {
      var tmp_262752 = tree_213045(43, []);
      tmp_262752.class = "ui left aligned segment mnemonic-seg";
      add_211771(tmp_262752, mnemonic_editor_260635());
      if (mnemonic_fulfill_258073[0]) {
      var tmp_262753 = tree_213045(44, []);
      tmp_262753.class = "pagenext";
      set_attr_211568(tmp_262753, "href", "#section2");
      var tmp_262754 = tree_213045(70, []);
      add_211771(tmp_262753, tmp_262754);
      add_211771(tmp_262753, text_213148(makeNimstrLit("Next")));
      add_211771(tmp_262752, tmp_262753);
      }
      
      add_211771(tmp_262730, tmp_262752);
    }
    
    add_211771(tmp_262719, tmp_262730);
    add_211771(tmp_262718, tmp_262719);
    add_211771(tmp_262717, tmp_262718);
    }
    
    if (show_page2_258070[0]) {
    var tmp_262755 = tree_213045(17, []);
    tmp_262755.id = "section2";
    tmp_262755.class = "section";
    var tmp_262756 = tree_213045(43, []);
    tmp_262756.class = "intro";
    var tmp_262757 = tree_213045(43, []);
    tmp_262757.class = "intro-head";
    var tmp_262758 = tree_213045(43, []);
    tmp_262758.class = "caption";
    add_211771(tmp_262758, text_213148(makeNimstrLit("Pastel Wallet")));
    add_211771(tmp_262757, tmp_262758);
    var tmp_262759 = tree_213045(43, []);
    tmp_262759.class = "ui container method-selector";
    var tmp_262760 = tree_213045(43, []);
    tmp_262760.class = "title";
    add_211771(tmp_262760, text_213148(makeNimstrLit("                  A key card or passphrase is required to encrypt and save the private key in your browser.\x0A                   You will need key card or passphrase before sending your coins.\x0A                ")));
    add_211771(tmp_262759, tmp_262760);
    var tmp_262761 = tree_213045(43, []);
    tmp_262761.class = "ui buttons";
    var tmp_262762 = tree_213045(104, []);
    tmp_262762.id = "keyselector";
    tmp_262762.class = "ui olive button";
    add_event_handler_242829(tmp_262762, 0, protect_selector_258381(0), kxi_232324[0]);
    var tmp_262763 = tree_213045(61, []);
    tmp_262763.class = "qrcode icon";
    add_211771(tmp_262762, tmp_262763);
    add_211771(tmp_262762, text_213148(makeNimstrLit("Key card")));
    add_211771(tmp_262761, tmp_262762);
    var tmp_262764 = tree_213045(43, []);
    tmp_262764.class = "or";
    add_211771(tmp_262761, tmp_262764);
    var tmp_262765 = tree_213045(104, []);
    tmp_262765.id = "passselector";
    tmp_262765.class = "ui grey button";
    add_event_handler_242829(tmp_262765, 0, protect_selector_258381(1), kxi_232324[0]);
    var tmp_262766 = tree_213045(61, []);
    tmp_262766.class = "list alternate icon";
    add_211771(tmp_262765, tmp_262766);
    add_211771(tmp_262765, text_213148(makeNimstrLit("Passphrase")));
    add_211771(tmp_262761, tmp_262765);
    add_211771(tmp_262759, tmp_262761);
    add_211771(tmp_262757, tmp_262759);
    add_211771(tmp_262756, tmp_262757);
    var tmp_262767 = tree_213045(43, []);
    tmp_262767.class = "intro-body";
    if ((current_protect_type_258043[0] == 0)) {
    var tmp_262768 = tree_213045(43, []);
    tmp_262768.id = "seed-seg";
    tmp_262768.class = "ui left aligned segment seed-seg";
    if (show_scan_result2_258068[0]) {
    var tmp_262769 = tree_213045(43, []);
    tmp_262769.class = "ui clearing segment keycard-seg";
    var tmp_262770 = tree_213045(43, []);
    tmp_262770.class = "ui inverted segment";
    var tmp_262771 = tree_213045(24, []);
    tmp_262771.class = "ui grey inverted header center";
    add_211771(tmp_262771, text_213148(makeNimstrLit("Scanned key card")));
    add_211771(tmp_262770, tmp_262771);
    var tmp_262772 = tree_213045(31, []);
    tmp_262772.class = "center";
    add_211771(tmp_262772, text_213201(key_card_val_259835[0]));
    add_211771(tmp_262770, tmp_262772);
    add_211771(tmp_262769, tmp_262770);
    var tmp_262773 = tree_213045(104, []);
    tmp_262773.class = "ui right floated olive button";
    add_event_handler_242793(tmp_262773, 0, confirm_key_card_259935, kxi_232324[0]);
    add_211771(tmp_262773, text_213148(makeNimstrLit("Save")));
    add_211771(tmp_262769, tmp_262773);
    var tmp_262774 = tree_213045(104, []);
    tmp_262774.class = "ui right floated grey button";
    add_event_handler_242829(tmp_262774, 0, show_key_qr_259902(), kxi_232324[0]);
    add_211771(tmp_262774, text_213148(makeNimstrLit("Rescan")));
    add_211771(tmp_262769, tmp_262774);
    add_211771(tmp_262768, tmp_262769);
    }
    
    if (key_card_fulfill_258074[0]) {
    var tmp_262775 = tree_213045(44, []);
    tmp_262775.class = "pagenext";
    set_attr_211568(tmp_262775, "href", "#section3");
    var tmp_262776 = tree_213045(70, []);
    add_211771(tmp_262775, tmp_262776);
    add_211771(tmp_262775, text_213148(makeNimstrLit("Next")));
    add_211771(tmp_262768, tmp_262775);
    }
    
    if (show_scanning2_258066[0]) {
    var tmp_262777 = tree_213045(43, []);
    tmp_262777.class = "qr-scanning";
    var tmp_262778 = tree_213045(43, []);
    add_211771(tmp_262777, tmp_262778);
    var tmp_262779 = tree_213045(43, []);
    add_211771(tmp_262777, tmp_262779);
    add_211771(tmp_262768, tmp_262777);
    }
    
    if (show_scan_seed_btn2_258065[0]) {
    var tmp_262780 = tree_213045(43, []);
    tmp_262780.class = "ui teal labeled icon button bt-scan-seed";
    add_event_handler_242829(tmp_262780, 0, show_key_qr_259902(), kxi_232324[0]);
    add_211771(tmp_262780, text_213148(makeNimstrLit("Scan key card with camera")));
    var tmp_262781 = tree_213045(61, []);
    tmp_262781.class = "camera icon";
    add_211771(tmp_262780, tmp_262781);
    add_211771(tmp_262768, tmp_262780);
    }
    
    if (show_cam_tools2_258067[0]) {
    var tmp_262782 = tree_213045(43, []);
    tmp_262782.class = "ui small basic icon buttons camtools";
    var tmp_262783 = tree_213045(104, []);
    tmp_262783.class = "ui button";
    add_event_handler_242829(tmp_262783, 0, cam_change_259953(), kxi_232324[0]);
    var tmp_262784 = tree_213045(61, []);
    tmp_262784.class = "camera icon";
    add_211771(tmp_262783, tmp_262784);
    add_211771(tmp_262782, tmp_262783);
    var tmp_262785 = tree_213045(104, []);
    tmp_262785.class = "ui button";
    add_event_handler_242829(tmp_262785, 0, cam_close_259986(), kxi_232324[0]);
    var tmp_262786 = tree_213045(61, []);
    tmp_262786.class = "window close icon";
    add_211771(tmp_262785, tmp_262786);
    add_211771(tmp_262782, tmp_262785);
    add_211771(tmp_262768, tmp_262782);
    }
    
    var tmp_262787 = tree_213045(84, []);
    tmp_262787.id = "qrcanvas";
    add_211771(tmp_262768, tmp_262787);
    var tmp_262788 = tree_213045(43, []);
    tmp_262788.class = "ui dimmer qrcamera-loader";
    var tmp_262789 = tree_213045(43, []);
    tmp_262789.class = "ui indeterminate text loader";
    add_211771(tmp_262789, text_213148(makeNimstrLit("Preparing Camera")));
    add_211771(tmp_262788, tmp_262789);
    add_211771(tmp_262768, tmp_262788);
    var tmp_262790 = tree_213045(43, []);
    tmp_262790.class = "ui dimmer qrcamera-shutter";
    add_211771(tmp_262768, tmp_262790);
    add_211771(tmp_262767, tmp_262768);
    }
    else {
      var tmp_262791 = tree_213045(43, []);
      tmp_262791.class = "ui left aligned segment mnemonic-seg";
      add_211771(tmp_262791, passphrase_editor_261780());
      if (passphrase_fulfill_258075[0]) {
      var tmp_262792 = tree_213045(44, []);
      tmp_262792.class = "pagenext";
      set_attr_211568(tmp_262792, "href", "#section3");
      var tmp_262793 = tree_213045(70, []);
      add_211771(tmp_262792, tmp_262793);
      add_211771(tmp_262792, text_213148(makeNimstrLit("Next")));
      add_211771(tmp_262791, tmp_262792);
      }
      
      add_211771(tmp_262767, tmp_262791);
    }
    
    add_211771(tmp_262756, tmp_262767);
    add_211771(tmp_262755, tmp_262756);
    add_211771(tmp_262717, tmp_262755);
    }
    
    if (show_page3_258071[0]) {
    var tmp_262794 = tree_213045(17, []);
    tmp_262794.id = "section3";
    tmp_262794.class = "section";
    var tmp_262795 = tree_213045(43, []);
    tmp_262795.class = "intro";
    var tmp_262796 = tree_213045(43, []);
    tmp_262796.class = "intro-head  wallet-head";
    var tmp_262797 = tree_213045(43, []);
    tmp_262797.class = "caption";
    add_211771(tmp_262797, text_213148(makeNimstrLit("Pastel Wallet")));
    add_211771(tmp_262796, tmp_262797);
    var tmp_262798 = tree_213045(43, []);
    tmp_262798.class = "ui container wallet-btns";
    var tmp_262799 = tree_213045(43, []);
    tmp_262799.class = "two ui basic buttons sendrecv";
    var tmp_262800 = tree_213045(104, []);
    tmp_262800.id = "btn-send";
    tmp_262800.class = "ui small button send";
    add_event_handler_242829(tmp_262800, 0, btn_send_261952(), kxi_232324[0]);
    var tmp_262801 = tree_213045(61, []);
    tmp_262801.class = "counterclockwise rotated sign-out icon send";
    add_211771(tmp_262800, tmp_262801);
    add_211771(tmp_262800, text_213148(makeNimstrLit(" Send")));
    add_211771(tmp_262799, tmp_262800);
    var tmp_262802 = tree_213045(104, []);
    tmp_262802.id = "btn-receive";
    tmp_262802.class = "ui small button receive";
    add_event_handler_242829(tmp_262802, 0, btn_receive_261985(), kxi_232324[0]);
    var tmp_262803 = tree_213045(61, []);
    tmp_262803.class = "clockwise rotated sign-in icon receive";
    add_211771(tmp_262802, tmp_262803);
    add_211771(tmp_262802, text_213148(makeNimstrLit(" Receive")));
    add_211771(tmp_262799, tmp_262802);
    add_211771(tmp_262798, tmp_262799);
    add_211771(tmp_262796, tmp_262798);
    add_211771(tmp_262795, tmp_262796);
    var tmp_262804 = tree_213045(43, []);
    tmp_262804.class = "intro-body wallet-body";
    var tmp_262805 = tree_213045(43, []);
    tmp_262805.id = "wallet-balance";
    tmp_262805.class = "ui center aligned segment";
    var tmp_262806 = tree_213045(43, []);
    tmp_262806.class = "ui top left attached tiny label send";
    var tmp_262807 = tree_213045(70, []);
    add_211771(tmp_262807, text_213148(makeNimstrLit("0")));
    add_211771(tmp_262806, tmp_262807);
    add_211771(tmp_262806, text_213148(makeNimstrLit(" ")));
    var tmp_262808 = tree_213045(61, []);
    tmp_262808.class = "counterclockwise rotated sign-out icon";
    add_211771(tmp_262806, tmp_262808);
    add_211771(tmp_262805, tmp_262806);
    var tmp_262809 = tree_213045(43, []);
    tmp_262809.class = "ui top right attached tiny label receive";
    var tmp_262810 = tree_213045(61, []);
    tmp_262810.class = "clockwise rotated sign-in icon";
    add_211771(tmp_262809, tmp_262810);
    var tmp_262811 = tree_213045(70, []);
    add_211771(tmp_262811, text_213148(makeNimstrLit("0")));
    add_211771(tmp_262809, tmp_262811);
    add_211771(tmp_262805, tmp_262809);
    var tmp_262812 = tree_213045(43, []);
    tmp_262812.class = "balance";
    add_211771(tmp_262812, text_213148(makeNimstrLit("0")));
    add_211771(tmp_262805, tmp_262812);
    var tmp_262813 = tree_213045(43, []);
    tmp_262813.class = "ui bottom right attached tiny label symbol";
    add_211771(tmp_262813, text_213148(makeNimstrLit("ZNY")));
    add_211771(tmp_262805, tmp_262813);
    add_211771(tmp_262804, tmp_262805);
    if (show_recv_address_selector_258077[0]) {
    add_211771(tmp_262804, recv_address_selector_262084());
    }
    
    if (show_recv_address_modal_258078[0]) {
    add_211771(tmp_262804, recv_address_modal_262227());
    }
    
    add_211771(tmp_262804, send_form_262397());
    var tmp_262814 = tree_213045(43, []);
    tmp_262814.id = "ball-info";
    tmp_262814.class = "ui center aligned segment";
    add_211771(tmp_262814, text_213148([]));
    var tmp_262815 = tree_213045(71, []);
    add_211771(tmp_262814, tmp_262815);
    add_211771(tmp_262814, text_213148([]));
    add_211771(tmp_262804, tmp_262814);
    var tmp_262816 = tree_213045(43, []);
    tmp_262816.id = "wallet-seg";
    tmp_262816.class = "ui center aligned segment seed-seg";
    var tmp_262817 = tree_213045(84, []);
    set_attr_211568(tmp_262817, "width", "0");
    set_attr_211568(tmp_262817, "height", "0");
    add_211771(tmp_262816, tmp_262817);
    add_211771(tmp_262804, tmp_262816);
    add_211771(tmp_262795, tmp_262804);
    var tmp_262818 = tree_213045(43, []);
    tmp_262818.class = "ui two bottom attached buttons settings";
    var tmp_262819 = tree_213045(43, []);
    tmp_262819.class = "ui button";
    add_event_handler_242829(tmp_262819, 0, go_settings_261838(), kxi_232324[0]);
    var tmp_262820 = tree_213045(61, []);
    tmp_262820.class = "cog icon";
    add_211771(tmp_262819, tmp_262820);
    add_211771(tmp_262819, text_213148(makeNimstrLit("Settings")));
    var tmp_262821 = tree_213045(70, []);
    var tmp_262822 = tree_213045(61, []);
    tmp_262822.class = "chevron down icon";
    add_211771(tmp_262821, tmp_262822);
    add_211771(tmp_262819, tmp_262821);
    add_211771(tmp_262818, tmp_262819);
    var tmp_262823 = tree_213045(43, []);
    tmp_262823.class = "ui button";
    add_event_handler_242829(tmp_262823, 0, go_logs_261873(), kxi_232324[0]);
    var tmp_262824 = tree_213045(61, []);
    tmp_262824.class = "list alternate outline icon";
    add_211771(tmp_262823, tmp_262824);
    add_211771(tmp_262823, text_213148(makeNimstrLit("Logs")));
    var tmp_262825 = tree_213045(70, []);
    var tmp_262826 = tree_213045(61, []);
    tmp_262826.class = "chevron down icon";
    add_211771(tmp_262825, tmp_262826);
    add_211771(tmp_262823, tmp_262825);
    add_211771(tmp_262818, tmp_262823);
    var tmp_262827 = tree_213045(43, []);
    tmp_262827.id = "bottom-blink";
    add_211771(tmp_262818, tmp_262827);
    add_211771(tmp_262795, tmp_262818);
    add_211771(tmp_262794, tmp_262795);
    var tmp_262828 = tree_213045(109, []);
    tmp_262828.id = "clipboard";
    set_attr_211568(tmp_262828, "rows", "1");
    set_attr_211568(tmp_262828, "tabindex", "-1");
    add_211771(tmp_262794, tmp_262828);
    add_211771(tmp_262717, tmp_262794);
    }
    
    if ((show_page3_258071[0] || show_page4_258072[0])) {
    var tmp_262829 = tree_213045(17, []);
    tmp_262829.id = "section4";
    tmp_262829.class = "tradelogs-section";
    var tmp_262830 = tree_213045(43, []);
    tmp_262830.class = "ui buttons settings backpage";
    var tmp_262831 = tree_213045(43, []);
    tmp_262831.class = "ui button backwallet";
    add_event_handler_242829(tmp_262831, 0, back_wallet_261906(), kxi_232324[0]);
    var tmp_262832 = tree_213045(61, []);
    tmp_262832.class = "dot circle icon";
    add_211771(tmp_262831, tmp_262832);
    add_211771(tmp_262831, text_213148(makeNimstrLit("Back")));
    var tmp_262833 = tree_213045(70, []);
    var tmp_262834 = tree_213045(61, []);
    tmp_262834.class = "chevron up icon";
    add_211771(tmp_262833, tmp_262834);
    add_211771(tmp_262831, tmp_262833);
    add_211771(tmp_262830, tmp_262831);
    add_211771(tmp_262829, tmp_262830);
    if (show_trade_logs_258079[0]) {
    var tmp_262835 = tree_213045(43, []);
    tmp_262835.class = "ui container";
    var tmp_262836 = tree_213045(43, []);
    tmp_262836.id = "tradeunconfs";
    tmp_262836.class = "ui cards tradelogs";
    add_211771(tmp_262835, tmp_262836);
    var tmp_262837 = tree_213045(43, []);
    tmp_262837.id = "tradelogs";
    tmp_262837.class = "ui cards tradelogs";
    add_211771(tmp_262835, tmp_262837);
    add_211771(tmp_262829, tmp_262835);
    }
    
    if (show_settings_258080[0]) {
    add_211771(tmp_262829, settings_page_262662());
    add_211771(tmp_262829, settings_modal_262596());
    }
    
    add_211771(tmp_262717, tmp_262829);
    }
    
    result_262716 = tmp_262717;

  return result_262716;

}

function after_script_263505(data_263507) {
    $("#section0").remove();
    $(".ui.dropdown").dropdown();
    if (show_scan_result_258064[0]) {
          function seedCardQrUpdate(vivid) {
        $('.seed-qrcode').each(function() {
          $(this).find('canvas').remove();
          var fillcolor;
          var fillStyleFn;
          if($(this).hasClass('active')) {
            fillcolor = vivid ? '#000' : '#7f7f7f';
            if(!vivid) {
              fillStyleFn = function(ctx) {
                var w = ctx.canvas.width;
                var h = ctx.canvas.height;
                var grd = ctx.createLinearGradient(0, 0, w, h);
                grd.addColorStop(0, "#666");
                grd.addColorStop(0.3, "#aaa");
                grd.addColorStop(1, "#555");
                return grd;
              }
            }
          } else {
            fillcolor = '#f8f8f8';
          }
          $(this).qrcode({
            render: 'canvas',
            ecLevel: 'Q',
            radius: 0.39,
            text: $(this).data('orig'),
            size: 188,
            mode: 2,
            label: '',
            fontname: 'sans',
            fontcolor: '#393939',
            fill: fillcolor,
            fillStyleFn: fillStyleFn
          });
        });
      }
      if(!$('.seed-qrcode .active').length) {
        $('.seed-qrcode').last().addClass('active');
      }
      seedCardQrUpdate();

      $('.seed-card').off('click').on('click', function() {
        $('.seed-card').not(this).each(function() {
          $(this).find('.seed-qrcode').removeClass('active');
        });
        $(this).find('.seed-qrcode').addClass('active');
        seedCardQrUpdate(true);
      });
      $('.seed-card').off('mouseleave').mouseleave(function() {
        $('.seed-qrcode').addClass('active');
        seedCardQrUpdate();
      });
      var holder = document.getElementById('seed-card-holder');
      if(holder) {
        holder.scrollLeft = holder.scrollWidth - holder.clientWidth;
      }
    
    }
    
    if ((show_scan_result_258064[0] || mnemonic_fulfill_258073[0])) {
          target_page_scroll = '#section2';
      page_scroll_done = function() {
        $('a.pagenext').css('visibility', 'hidden');
        $('#section1').hide();
        window.scrollTo(0, 0);
        jsSeedToKeys();
        jsViewSelector(5);
        page_scroll_done = function() {};
      }
    
    }
    
    if ((key_card_fulfill_258074[0] || passphrase_fulfill_258075[0])) {
          target_page_scroll = '#section3';
      page_scroll_done = function() {
        var wallet = pastel.wallet;
        var ret = wallet.lockShieldedKeys();
        if(!ret) {
          Notify.show("Error", "Failed to lock keys.", Notify.msgtype.error);
        }
        jsClearSensitive();
        $('a.pagenext').css('visibility', 'hidden');
        $('#section2').hide();
        window.scrollTo(0, 0);
        jsViewSelector(9);
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        }
        page_scroll_done = function() {};
      }
    
    }
    
    if ((((show_scan_result_258064[0] || mnemonic_fulfill_258073[0]) || key_card_fulfill_258074[0]) || passphrase_fulfill_258075[0])) {
          for(var i in registerEventList) {
        var ev = registerEventList[i];
        ev.elm.removeEventListener(ev.type, ev.cb);
      }
      var elms = document.querySelectorAll('a.pagenext');
      Array.prototype.forEach.call(elms, function(elm) {
        var href = elm.getAttribute("href");
        if(href && href.startsWith('#')) {
          var cb = function(e) {
            e.preventDefault();
            var href = this.getAttribute('href');
            if(href == '#section2') {
              goSection(href, page_scroll_done);
            } else if(href == '#section3') {
              goSection(href, page_scroll_done);
            }
          }
          registerEventList.push({elm: elm, type: 'click', cb: cb});
          elm.addEventListener('click', cb);
        }
      });
    
    }
    
    if (show_page4_258072[0]) {
          //$.fn.visibility.settings.silent = true;
      $('.backpage').visibility({
        type: 'fixed',
        offset: 0
      });
    
    if (show_trade_logs_258079[0]) {
            TradeLogs.start();
      
    }
    
    if (show_settings_258080[0]) {
            Settings.init();
      
    }
    
          goSection('#section4', function() {
        target_page_scroll = '#section3';
        page_scroll_done = function() {
          TradeLogs.stop();
          $('.backpage').visibility({silent: true});
          $('#tradeunconfs').empty();
          $('#tradelogs').empty();
          $('#section4').hide();
          window.scrollTo(0, 0);
          setSupressRedraw(false);
          reloadViewSafeStart();
          jsViewSelector(12);
          page_scroll_done = function() {};
          $('#bottom-blink').fadeIn(100).fadeOut(400);
        }
      });
    
    }
    else {
            $('#section4').hide();
    
    }
    
    if ((show_page3_258071[0] || show_page4_258072[0])) {
          reloadViewSafeEnd();
    
    }
    

  
}
var wallet_setup_263537 = [false];
  var stor  = new Stor()
  var xpubs = stor.get_xpubs()
  stor = null;
  if(xpubs.length > 0) {
    wallet_setup_263537[0] = true;
    function check_stream_ready() {
      setTimeout(function() {
        if(pastel.stream && !pastel.stream.status()) {
          pastel.stream.start();
        } else {
          check_stream_ready();
        }
      }, 50);
    }
    check_stream_ready();
  }

if (wallet_setup_263537[0]) {
view_selector_258124(12, true);
}

app_inst_258014[0] = set_initializer_242707(app_main_262713, "main", after_script_263505);
